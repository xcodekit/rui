var hexcase = 0; var b64pad = ""; var chrsz = 8; function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); } function core_md5(x, len){ x[len >> 5] |= 0x80 << ((len) % 32); x[(((len + 64) >>> 9) << 4) + 14] = len; var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; for(var i = 0; i < x.length; i += 16) { var olda = a; var oldb = b; var oldc = c; var oldd = d; a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936); d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586); c = md5_ff(c, d, a, b, x[i+ 2], 17, 606105819); b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330); a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897); d = md5_ff(d, a, b, c, x[i+ 5], 12, 1200080426); c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341); b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983); a = md5_ff(a, b, c, d, x[i+ 8], 7 , 1770035416); d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417); c = md5_ff(c, d, a, b, x[i+10], 17, -42063); b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162); a = md5_ff(a, b, c, d, x[i+12], 7 , 1804603682); d = md5_ff(d, a, b, c, x[i+13], 12, -40341101); c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290); b = md5_ff(b, c, d, a, x[i+15], 22, 1236535329); a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510); d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632); c = md5_gg(c, d, a, b, x[i+11], 14, 643717713); b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302); a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691); d = md5_gg(d, a, b, c, x[i+10], 9 , 38016083); c = md5_gg(c, d, a, b, x[i+15], 14, -660478335); b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848); a = md5_gg(a, b, c, d, x[i+ 9], 5 , 568446438); d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690); c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961); b = md5_gg(b, c, d, a, x[i+ 8], 20, 1163531501); a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467); d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784); c = md5_gg(c, d, a, b, x[i+ 7], 14, 1735328473); b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734); a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558); d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463); c = md5_hh(c, d, a, b, x[i+11], 16, 1839030562); b = md5_hh(b, c, d, a, x[i+14], 23, -35309556); a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060); d = md5_hh(d, a, b, c, x[i+ 4], 11, 1272893353); c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632); b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640); a = md5_hh(a, b, c, d, x[i+13], 4 , 681279174); d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222); c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979); b = md5_hh(b, c, d, a, x[i+ 6], 23, 76029189); a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487); d = md5_hh(d, a, b, c, x[i+12], 11, -421815835); c = md5_hh(c, d, a, b, x[i+15], 16, 530742520); b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651); a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844); d = md5_ii(d, a, b, c, x[i+ 7], 10, 1126891415); c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905); b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055); a = md5_ii(a, b, c, d, x[i+12], 6 , 1700485571); d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606); c = md5_ii(c, d, a, b, x[i+10], 15, -1051523); b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799); a = md5_ii(a, b, c, d, x[i+ 8], 6 , 1873313359); d = md5_ii(d, a, b, c, x[i+15], 10, -30611744); c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380); b = md5_ii(b, c, d, a, x[i+13], 21, 1309151649); a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070); d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379); c = md5_ii(c, d, a, b, x[i+ 2], 15, 718787259); b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551); a = safe_add(a, olda); b = safe_add(b, oldb); c = safe_add(c, oldc); d = safe_add(d, oldd); } return Array(a, b, c, d);}function md5_cmn(q, a, b, x, s, t){ return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);}function md5_ff(a, b, c, d, x, s, t){ return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);}function md5_gg(a, b, c, d, x, s, t){ return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);}function md5_hh(a, b, c, d, x, s, t){ return md5_cmn(b ^ c ^ d, a, b, x, s, t);}function md5_ii(a, b, c, d, x, s, t){ return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);}function core_hmac_md5(key, data){ var bkey = str2binl(key); if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz); var ipad = Array(16), opad = Array(16); for(var i = 0; i < 16; i++) { ipad[i] = bkey[i] ^ 0x36363636; opad[i] = bkey[i] ^ 0x5C5C5C5C; } var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz); return core_md5(opad.concat(hash), 512 + 128);}function safe_add(x, y){ var lsw = (x & 0xFFFF) + (y & 0xFFFF); var msw = (x >> 16) + (y >> 16) + (lsw >> 16); return (msw << 16) | (lsw & 0xFFFF);}function bit_rol(num, cnt){ return (num << cnt) | (num >>> (32 - cnt));}function str2binl(str){ var bin = Array(); var mask = (1 << chrsz) - 1; for(var i = 0; i < str.length * chrsz; i += chrsz) bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32); return bin;}function binl2str(bin){ var str = ""; var mask = (1 << chrsz) - 1; for(var i = 0; i < bin.length * 32; i += chrsz) str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask); return str;}function binl2hex(binarray){ var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef"; var str = ""; for(var i = 0; i < binarray.length * 4; i++) { str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) + hex_tab.charAt((binarray[i>>2] >> ((i%4)*8 )) & 0xF); } return str;}function binl2b64(binarray){ var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; var str = ""; for(var i = 0; i < binarray.length * 4; i += 3) { var triplet = (((binarray[i >> 2] >> 8 * ( i %4)) & 0xFF) << 16) | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 ) | ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF); for(var j = 0; j < 4; j++) { if(i * 8 + j * 6 > binarray.length * 32) str += b64pad; else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); } } return str;}if(typeof rahb=="undefined"){ rahb={};}rahb.raie=function(rago,raif){ setTimeout(rago,raif); };rahb.rahd={ raig:[], rahe:function(rago){ rahb.rahd.raig.push(rago); }, raih:function(){ for(var rahs=0;rahs< rahb.rahd.raig.length;rahs++){ rahb.rahd.raig[rahs](); } }};rahb.raii=function(){ rahb.rahd.raih();};rahb.raiksec_=100000;rahb.rail=function(){ if(!$(raim).hasClass("rui-prefix-pri")){ $(raim).addClass("rui-prefix-pri").append("<a class='rui-prefix-dialog-pri'><em></em></a>"); $(".rui-app").css("display","block"); } rahb.raiksec_--; if(rain<=1||rahb.raiksec_<0 ){ rahb.raii(); }else{ rahb.raie(rahb.rail,100); } }; raio=function(raiq,$attrName){	var rais = document.getElementsByTagName("script");	for (var i=0; i< rais.length;i++) { var rait =rais[i]; if (rait && rait.getAttribute("src") && rait.getAttribute("src").indexOf(raiq+".")>-1) { return rait.getAttribute($attrName);	}	} return ""; };rahb.raiv=[]; rahb.raiw=function(rafg){ return rahb.raiv.indexOf(rafg)!=-1;};var raiv =raio( 'pro.rui.ant_min',"data-imports"); if(raiv!=null){	raiy=raiv.split(","); for(var i=0;i<raiy.length;i++){ rahb.raiv.push(raiy[i]);	} }else{ rahb.raiv=[];} raiz=function(raka,rakb,rakd) {	var rake = document.head || document.getElementsByTagName($udHead)[0] || document.documentElement;	var rakf=document.createElement(rakg); rakf.type = rakh; if(rakd==null){rakd='/bin/pro.rui.lib/';} rakf.src = rakd+raka; rakf.charset="utf-8"; try{ rake.append(rakf);}catch(e){rake.appendChild(rakf);} if(rakb){ document.addEventListener ? rakf.addEventListener("load", function(){ rakb(); },false): rakf.onreadystatechange = function() { if (new RegExp("/loaded|complete/").test(rakf.readyState)) { rakf.onreadystatechange = null; rakb(); } }; }}; rain=0; rahb.raki=function(raka,rakb,rakd){ var rakk=hex_md5(raka); var $urls=raka.split(","); rain++; raiz(raka,function(){ rain--; if(rakb)rakb(); },rakd); };rahb.rakl=function(raka,rakb){ var rakk=hex_md5(raka); var $urls=raka.split(","); rain++; raiz(raka,function(){ rain--; if(rakb)rakb(); },""); }; rahb.rakm=function(raka,rakd){ if(rakd==null)rakd='/bin/pro.rui.lib/'; var rakm = document.createElement(rakn); rakm.type='text/css'; rakm.rel = 'stylesheet'; rakm.href = rakd+ raka+"?a=1";	var rake= document.getElementsByTagName(rako)[0]; rake.insertBefore(rakm, rake.firstChild); }; if(typeof JSLoader=="undefined"){ JSLoader={ importPackage:rahb.rakl, import:rahb.raki, link:rahb.rakm, hasPlug:rahb.raiw, append:rahb.rahd.rahe }; JSLoader.packageRoot=function(sub){ if(sub==null)sub=""; return "http://storage.getlink.link/package/"+sub; };}else{ alert("ERR_Import[jsloader]");}$(function(){ rahb.rail(); }); $(window).on('scroll.elasticity', function (e) {	e.preventDefault(); }).on('touchmove.elasticity', function (e) { e.preventDefault(); }); if(typeof rakq!="undefined"){ alert(rakq+"变量被占用,无法加载..."); } raim="body";rako="head";raks="a";rakg="script";rakn="link";rakh="text/javascript";rakt="pri.header";rakv="default";rakw=null;$udJV0_="javascript:void(0);";raky=$;rakq=function(rakz,rahl){ if(rahl==null){ rahl=$(rakz); } var dom= { rala:rahl.length>0, ralb:rakz, rafn:function(){ return rahl; }, rald:function(lim){ if(lim==null)lim=1; var rale=rahl.parent(); for(var rahs=1;rahs<lim;rahs++){ rale=rale.parent(); } return rakq("",rale); }, ralf:function(ralg){ rahl.after(ralg); }, ralh:function(rafg,rafh){ rahl.css(rafg,rafh); }, rahe:function(ralg){ rahl.append(ralg); }, rali:function(ralg){ rahl.prepend(ralg); }, ralk:function(rall){ return rahl.prop(rall); }, ralm:function(rall){ if(rall==rakw){ return rahl.height(); }else return rahl.height(rall); }, raln:function(rall){ if(rall==rakw){ return rahl.width(); }else return rahl.width(rall); }, ralo:function(rago){ rahl.unbind("click").click(function(){ var ralq=rakq("",$(this)); rago(ralq); }); }, rals:function(ralt){ return { remove:function(){ rahl.removeClass(ralt); }, add:function(){ rahl.addClass(ralt); }, exist:function(){ return rahl.hasClass(ralt); } } }, ralv:function(ralw){ return { remove:function(){ rahl.removeAttr(ralw); }, val:function(raly){ if(raly==rakw){ return rahl.attr(ralw); }else rahl.attr(ralw,raly); }, exist:function(){ return rahl.val()!=null; } } }, ralz:function(rakz,rama){ var ramb= rahl.find(rakz); if(ramb.length==1){ return rakq("",$(ramb[0])); }else if(ramb.length>1){ var arr=[]; for(var rahs=0;rahs<ramb.length;rahs++){ arr.push(rakq("",$(ramb[rahs]))); } return rama==rakw?arr:arr[rama]; } return rakq(""); }, ramd:function(rakz){ return rahl.find(rakz).length; }, rame:function(mHTML){ if(mHTML==null){ return rahl.html(); }else{ rahl.html(mHTML); } }, ramf:function(ralg){ rahl.replaceWith(ralg); }, raly:function(ramg){ if(mVal_==null){ return rahl.val(); }else{ rahl.val(mVal_); } } }; return dom;}; UIDom=function(selector,obj){ var ins=rakq(selector,obj); return { object:function(){ return ins.rahl; }, class:function(item){ return ins.rals(item); }, attr:function(item){ return ins.ralv(item); }, get:function(selector,$i){ var objs= $ins.ramh($selector); if(objs.length==1){ return rakq("",$($objs[0])); }else if($objs.length>1){ var arr=[]; for(var rahs=0;rahs<objs.length;rahs++){ arr.push(rakq("",$(objs[rahs]))); } return i==null?arr:arr[rama]; } }, getCount:function(selector){ return ins.ramh(selector).length; }, html:function(mHTML){ return ins.rame(mHTML); }, replace:function(newObj){ ins.ramf(newObj); }, val:function(mVal){ return ins.raly(mVal); } }; }; if(typeof rami!="undefined"){ alert(rami+"变量被占用,无法加载..."); } rami={ rafz: function() { return function() { this.raga.apply(this, arguments); }; } }; rami.ramk={};rami.ramk.raml="rui-table-layout-item";rami.ramk.ramm="raak"; rami.ramk.raim="body";ramnNul_=null;rami.raid={};rami.raid.ramo=rami.rafz();rami.raid.ramo.prototype={ raga:function(){ }, ragm:false, rafo:false, raho:false, $url:false, ramq:function(rahl){ this.raho=rahl; }, ralz:function(){ return this.raho; }, rams:function(){ return "ramt"+this.ramv; }, };rami.raid.ramo.prototype.param=function(name){ if(this.raka){ var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = this.raka.match(reg); if (r != null) return unescape(r[2]); return false; }else{ return false; } }; rami.ramw={}; rami.ramw.ramy=1;rami.ramw.ramz=function(ragm){ rami.ramw.ramy++; var rana= "rui_uiid_"+ rami.ramw.ramy; var ramo=new rami.raid.ramo(); ramo.ragm= ragm==ramnNul_?rana:ragm; rami.ramw[ramo.ragm]=ramo; return rami.ranb(ramo.ragm); };rami.ranb=function(ragm){	return rami.ramw[ragm]; };rami.rand=function(ragm){	return typeof rami.ranb(ragm)=="object";};rami.ranb.rane=function(){ for(var rafg in rami.ramw) {	if(typeof rami.ranb(rafg).ralz== "undefined" )continue;	var ramt= rami.ranb(rafg).ralz();	if(typeof ramt.resize != "undefined" ){	ramt.resize();	}	} };rami.tag={};rami.clearByTag=function(ranf){ var tags=rami.tag[ranf]; if(tags!=null){	for(var i=0;i<tags.length;i++){	delete rami.ramw[tags[i]];	} } };rami.rang=function(rafg,ranh,rani){	var ramt=false;	if(ranh.ralv("id").exist()){ var ragm=ranh.ralv("id").val(); var rank=ranh.rafn().hasClass(rami.ramk.ramm); if(rami.rand(ragm)&&!rank){ delete rami.ramw[ragm]; }else if(rami.rand(ragm)){ return; } ramt=rami.ramw.ramz(ragm);	}else{	ramt=rami.ramw.ramz();	} if(rani!=null){ if(rami.tag[rani]==null)rami.tag[rani]=[]; rami.tag[rani].push(ramt.ragm); }	var ranl=new raib.ranm[rafg](ranh,ramt); rami.ranb(ramt.ragm).ramq(ranl); }; rami.rann=function(rald,rani){	if(rald==null) rald=rami.ramk.raim ;	var rano=function(rafg){ var ranq=rakq(rald).ralz("."+rafg); if(ranq.rala&&!Object.isArray(ranq)){ rami.rang( rafg,ranq,rani); }else if(Object.isArray(ranq))	for(var rans=0;rans<ranq.length;rans++){ rami.rang( rafg,ranq[rans],rani);	}	};	for(var rafg in raib.$renders1_){	rano(rafg);	}	for(var rafg in raib.$renders2_){	rano(rafg);	}	for(var rafg in raib.$renders3_){	rano(rafg);	} }; rahb.rahd.rahe(function(){	rami.rann(); });rami.ragw=function(target,allrenders){	var rant=allrenders==null?target.children("[data-render]"):target.find("[data-render]");	for(var rahs=0;rahs<rant.length;rahs++){ var obj=$(rant[rahs]); if(rami.rand(obj.attr("id"))){ continue ;	} var nameVal={}; var eleValueTags="input,areatext,select"; var eleValue=obj.prop("tagName"); if(obj.attr("data-name")!=null){	nameVal[obj.attr("data-name")]=eleValueTags.indexOf(eleValue) >= 0?obj.val():obj.html(); } var childNv=obj.find("name,data-name,data"); for(var rahs=0;rahs<childNv.length;rahs++){	var item=childNv[rahs];	nameVal[item.attr("data-name")]=eleValueTags.indexOf(eleValue) >= 0?item.val():item.html(); } var render= obj.attr("data-render"); render=render.replace(/\./g,"-"); var renderName=render.split("?")[0]; var ramt=rami.ramw.ramz(obj.attr("id")!=null?obj.attr("id"):null); var ranh=rakq(obj); if(raib.ranm[renderName]!=null){	var ranl=new raib.ranm[renderName](ranh,ramt);	ranl.set(nameVal);	rami.ranb(ramt.ragm).ramq(ranl); }	}}; rami.ranv={};rami.ranv.ranw={};rami.ranv.rany=false;rami.ranv.ranz=function(rany){	rami.ranv.rany=rany;	var rahi= {	raoa:false,	rail:function(){},	bind:function(raob){	this.raoa=true;	var raod=raky(raob);	for(var rahs=0;rahs<raod.length;rahs++){	var raoe=raky(raod[rahs]);	var raof=raoe.attr("href"); raoe.attr("onclick","rami.ranv.rahd('"+raof+"');return false;"); }	}	};	setTimeout(function(){ if(!rahi.raoa){	rahi.rail(); }	},100); return rahi; };rami.ranv.rahd=function(raka){ if(raka.substring(0,4)=="java")return;	var raog=rami.ranv.rany;	rami.clearByTag("raoh"); raky(raog).html("").removeClass("lazyload-init"); history.pushState({},"",raka); raky.ajax({	                type: "get",	                url: raka,	                data: {},	                dataType: "html",	                success: function (res) {	                   var rame=raky($.parseHTML(res,true));	var raoi=rame.find(raog).html();	var raok=(location.href+"").md5();	if(rami.ranv.ranw[raok]==null){	rami.ranv.ranw[raok]=raoi;	}	raky(raog).html(raoi);	                }  }); return false; }; $(document).ready(function(e) {	if (window.history && window.history.pushState) { $(window).on('popstate', function () {	var raol=raky(rami.ranv.rany); setTimeout(function(){ var raok=(location.href+"").md5(); raol.removeClass("lazyload-init").html(rami.ranv.ranw[raok]);	},1); });	} });if(typeof raib!="undefined"){ alert(raib+"变量被占用,无法加载..."); } raib={}; raib.rals={ rafz: function() { return function() { this.raga.apply(this, arguments); }; } }; raib.raid = raib.rals.rafz();raib.raid.prototype = { raom: false, ramo: false, raon: false, raga: function(raoo) { this.raom = raoo.change("\\.", "-"); }, raoq: false, raos: false, setJQRender: function(renderFun) { this.raon = renderFun; }, setLayout: function(layout, callback) { this.raoq = "<div>" + layout + "</div>"; this.raos = callback; }, view: false, predata: {}, event: function(name) { this.ramo.event(name, "__args", arguments); }, getParam: function(name) { return this.ramo.getParam(name); }};raib.raot=function(ragm){ var rahl=$(ragm); var ragm=ragm.change("#",""); if(rami.ranb(ragm)&& rahl.hasClass(rami.ramk.ramm)){ return rami.ranb(ragm).ralz(); }else{ return false; } };raib.ranm={}; raib.$renders1_={}; raib.$renders2_={};raib.$renders3_={}; raib.rali=function(rafg,ranl){ raib.ranm[rafg]=ranl; raib.$renders1_[rafg]=ranl; };raib.rahe=function(rafg,ranl){ raib.ranm[rafg]=ranl; raib.$renders2_[rafg]=ranl;};raib.raov=function(rafg,ranl){ raib.ranm[rafg]=ranl; raib.$renders3_[rafg]=ranl; }; raib.raow=function(raom,$render){ raib.rali(raom.replace(/\./g,"-") ,raib.raoy($render)); }; raib.raoz=function(raom,$render){ raib.rahe(raom.replace(/\./g,"-") ,raib.raoy($render)); }; raib.raoy=function(raqa){ var raqb= raib.rals.rafz(); raqb.prototype={ raga:function(raqd,ramt){ if(typeof this.rano !="undefined"){ this.rano(raqd.rafn(),ramt); } } }; raqb.prototype.raqe=false; raqb.prototype.raqa=raqa; raqb.prototype.ranl=function(){ if(typeof this.raqa=="function" ){ this.raqa= this.raqa(); } return this.raqa; }; raqb.prototype.rano= function(raqf,ramt){ if(raqf.hasClass(rami.ramk.raml)|| raqf.hasClass(rami.ramk.ramm) ){ return ; } raqf.attr("id",ramt.ragm); raqf.addClass(rami.ramk.ramm); var name= raqf.attr("name"); if(name==null){name=raqf.attr("data-name");} this.model={ getParam:function(name){ return ramt.param(name); }, getWidget:function(){ return raib.raot("#"+this.id); }, id:ramt.ragm, name:name==null?"":name, events:[], event:function(name,order,rahm){ if(order!="__args"){ rahm=arguments; } if(rahm.length==1){ this.events[name](rahm[1]); } else if(rahm.length==2){ this.events[name](rahm[1],rahm[2]); } else if(rahm.length==3){ this.events[name](rahm[1],rahm[2],rahm[3]); } else if(rahm.length==4){ this.events[name](rahm[1],rahm[2],rahm[3],rahm[4]); } else this.events[name](); } }; this.ranl().ramo=this.model; if(this.ranl().raoq){ var layout= this.ranl().raoq; var raqg=raqf.data(); raqg["title"]=raqf.attr("title"); raqg["text"]=raqf.text(); raqg["type"]=raqf.attr("type"); raqg["name"]=this.model.name; raqg["id"]=this.model.id; raqg["query"]=function(name){ var renders=this.render.split("?"); if(renders.length>1){ var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = renders[1].match(reg); if (r != null) return unescape(r[2]); } return false; }; if(raqg.render!=null&&raqg.render.split("?").length>1){ var raqh = raqg.render.split("?")[1].split("&"); for (var rahs=0;rahs<raqh.length;rahs++) { var raqi = raqh[rahs].split("="); raqg[raqi[0]]=raqi[1]; } } for(var raqk in raqg){ layout=layout.change('@{'+raqk+'}', raqg[raqk]); } raql =layout.match(/\>\{[\s\S]*?\}\</ig); if(raql==null)raql=[]; for(var rahs=0;rahs<raql.length;rahs++){ var rafg=raql[rahs].change(">{",""); rafg=rafg.change("}<",""); layout=layout.change(">{"+rafg+"}<","><data data-name='"+rafg+"'></data><"); } var rahl=$(layout); rahl.attr("id",raqg["id"]); rahl.addClass( raqf.attr("class")); raqf.replaceWith(rahl); this.ranl().view=rahl; this.ranl().predata=raqg; if( this.ranl().raos){ this.ranl().raos(rahl,raqg); } this.raqe=rahl; }else{ this.raqe= this.ranl().view= this.ranl().raon(raqf,this.model); } }; raqb.prototype.model=false; raqb.prototype.setEvent=function(name,fun){ this.model.events[name]=fun; }; raqb.prototype.event=function(name){ if(this.model.events[name]!=null){ this.model.event(name,"__args",arguments); return true; }else{ var raqm=null; for(var rafn in this.ranl()){ if(rafn==name){ var rahm=arguments; if(rahm.length==1){ raqm=this.ranl()[rafn](rahm[1]); } else if(rahm.length==2){ raqm= this.ranl()[rafn](rahm[1],rahm[2]); } else if(rahm.length==3){ raqm=this.ranl()[rafn](rahm[1],rahm[2],rahm[3]); } else if(rahm.length==4){ raqm=this.ranl()[rafn](rahm[1],rahm[2],rahm[3],rahm[4]); } else{ raqm=this.ranl()[rafn](); } } } return raqm; } }; raqb.prototype.set=function(data){ if(this.ranl().raoq){ var raqn= this.raqe; var ragn=["href","title","data","class" ]; for(var raqo=0;raqo<ragn.length;raqo++){ var raqq=ragn[raqo]; var raqnhref_=raqn.find("["+ raqq+"]"); raqnhref_.push(raqn); for(var rahs=0;rahs<raqnhref_.length;rahs++){ var raqs=$(raqnhref_[rahs]).attr(raqq); if(raqs!=null&& raqs!=""){ raqt =raqs.match(/\{[\s\S]*?\}/ig); if(raqt==null)raqt=[]; for(var raqv=0;raqv<raqt.length;raqv++){ var raqw=raqt[raqv].change('{',""); raqw=raqw.change('}',""); raqs=raqs.change(raqt[raqv],data[raqw]); } $(raqnhref_[rahs]).attr(raqq,raqs); } } } } this.setJQObject(data); this.event("reload",data); }; raqb.prototype.raqy=function(){ var raqz=[]; raqz.push(this.ranl().view); raqz=$.merge(raqz,this.ranl().view.find("[name]")); raqz=$.merge(raqz,this.ranl().view.find("[data-name]")); return raqz; }; raqb.prototype.rasa="input,INPUT,textarea,TEXTAREA,select,SELECT"; raqb.prototype.setJQObject=function(data){ var raqz=this.raqy(); for(var rahs=0;rahs<raqz.length;rahs++){ var rasb=$( raqz[rahs]); var rasd=rasb.attr("name")?rasb.attr("name"):rasb.attr("data-name"); if(rasd==null)continue; if(this.rasa.indexOf(rasb.get(0).tagName) != -1 ){ rasb.val(data[rasd]); rasb.trigger("change"); }else{ rasb.html(data[rasd]); } } }; raqb.prototype.get=function(){ var raqz=this.raqy(); var data={}; for(var rahs=0;rahs<raqz.length;rahs++){ var rasb=$(raqz[rahs]); var rasd=rasb.attr("name")?rasb.attr("name"):rasb.attr("data-name"); if(rasd==null)continue; if(this.rasa.indexOf(rasb.get(0).tagName) != -1 ){ data[rasd]=rasb.val(); }else{ data[rasd]= rasb.html(); } } return data; }; raqb.prototype.resize=function(){ }; return raqb;}; if(typeof XRender=="undefined"){ rase={}; rase.raid=function(rasf,$arg1_){ var ragm= rasf.change("#",""); var rasg=rami.ranb(ragm)!=null&&$(rasf).hasClass(rami.ramk.ramm); return { widget:function(render, html){ if(rasg){ return rami.ranb(ragm).ralz(); }else{ if(render==null){ console.log(ragm); } var rash=render.replace(/\\./g,"-"); ramt=rami.ramw.ramz(ragm); ranh=html==null?rakq(rasf):rakq(false,$(html)); var ranl=new raib.ranm[rash](ranh,ramt); rami.ranb(ramt.ragm).ramq(ranl); return rami.ranb(ramt.ragm).ralz(); } } }; }; XRender=function(rasf,$arg1_){ if(typeof rasf=="string"&&rasf.has("#")){ return rase.raid(rasf,$arg1_); } else if(typeof(rasf)=="function") { rahb.rahd.rahe(rasf); } }; XRender.extend=function(render){ var raom=""; if(typeof render=="function" ){ raom= new render().raom; } else{ raom=render.raom; } raib.rahe(raom.replace(/\./g,"-") ,raib.raoy(render)); }; XRender.extend=function(type,render){ if(type=="layout"){ var raom=""; if(typeof render=="function" ){ raom= new render().raom; } else{ raom=render.raom; } raib.rali(raom.replace(/\./g,"-") ,raib.raoy(render)); } }; XRender.widget=raib.raid; XRender.layout=raib.raid; XRender.lazyload=function(selector){ return rami.ranv.ranz(selector); }; }else{ alert("ERR_Import[XRender]");}if(typeof raez=="undefined"){ raez={};} if(typeof raez.rafa!="undefined"){ alert("Util[RUI] is init!");}raez.rafb="1";raez.rafd="2";raez.rafa=function(){ };raez.rafa.data=function(rafg,rafh,rafi){ rafg=rafg.md5(); if(rafh==null){ var rafk= $.cookie(rafg); if(rafk==null||rafk=="null")return false;else{ var rafl= raez.rafm(rafk).val(); return rafl.rafn; } }else{ var rafl={}; rafl.rafo=(typeof val =="object")?raez.rafb:raez.rafd; rafl.rafn=rafh; var rafq=raez.rafm(rafl).toString(); if(rafi==null){ $.cookie(rafg,rafq, { expires: 7,path:"/" }); }else { var rafs = new Date(); rafs.setTime(rafs.getTime()+rafi); $.cookie(rafg,rafq, { expires:rafs,path:"/" }); } } }; raez.rafa.rafv=function(){ return (navigator.browserLanguage || navigator.language).toLowerCase(); }; raez.rafa.rafw= function(){ var u = navigator.userAgent, app = navigator.appVersion; return { trident: u.indexOf('Trident') > -1, presto: u.indexOf('Presto') > -1, webKit: u.indexOf('AppleWebKit') > -1, gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, mobile: !!u.match(/AppleWebKit.*Mobile.*/), ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/), android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, iPhone: u.indexOf('iPhone') > -1 , iPad: u.indexOf('iPad') > -1, webApp: u.indexOf('Safari') == -1 };}(); raez.rafa.os=function(type,callback){ if(callback==null){ return raez.rafa.rafw[type]; }else{ var bol=raez.rafa.rafw[type]; if(callback!=null) callback(bol); else return bol; } }; rafy={ rafz: function() { return function() { this.raga.apply(this, arguments); }; } }; raez.rafa.$Global=rafy.rafz();raez.rafa.$Global.prototype={ raga:function(ragd){ this.rafg=ragd; }, rafg:false, rafh:false, set:function(rage){ if(this.rafh){ alert("全局变量不支持重载!"); }else{ this.rafh=rage; } }, get:function(){ return this.rafh; } }; raez.ragf={}; raez.rafa.global=function(name,value,check){ var ragg=raez.ragf[name]; if("undefined" == typeof ragg){ raez.ragf[name]=new raez.rafa.$Global(name); } if(value!=null){ raez.ragf[name].set(value); }else{ return raez.ragf[name].get(); } }; if(typeof raez=="undefined"){ raez={};} if(typeof raez.ragh!="undefined"){ alert("Util[RUI] is init!");}raez.ragh={};raez.ragh.param=function(name,def,url) { if(def==null)def=""; var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r=null; if(url==null){ r =window.location.search.substr(1).match(reg); }else{ var urls=url.split("?"); if(urls.length>1){ r=urls[1].match(reg); } } if (r != null) return unescape(r[2]); return def; };raez.ragh.paramJSON=function(paramNames){ var param={}; param[paramNames]=raez.ragh.param(paramNames); return param; };raez.ragh.fragments=function(){ var url=location.href; var result = []; if(url.split("#").length<2)return {}; var query = url.split("#")[1]; var queryArr = query.split("&"); var obj = {}; queryArr.forEach(function(item){ var key = item.split("=")[0]; var value = item.split("=")[1]; obj[key] = value; }); return obj; };raez.ragh.changeArg=function(arg,arg_val,url){ var pattern=arg+'=([^&]*)'; var replaceText=arg+'='+arg_val; if(url==null) url=location.href; if(url.match(pattern)){ var tmp='/('+ arg+'=)([^&]*)/gi'; tmp=url.replace(eval(tmp),replaceText); return tmp; }else{ if(url.match('[\?]')){ return url+'&'+replaceText; }else{ return url+'?'+replaceText; } } }; if(typeof raez=="undefined"){ raez={};} if(typeof raez.ragi!="undefined"){ alert("Util[RUI] is init!");}ragk={ rafz: function() { return function() { this.raga.apply(this, arguments); }; } }; raez.ragl= ragk.rafz();raez.ragl.prototype={ raga:function(mId){this.ragm=mId;}, ragm:false, $funs1_:[], rafl:false, ragn:"", append:function(rago){ this.$funs1_.push({"ragm":this.ragm,"rago":rago}); }, run:function(ragq){ this.rafl=ragq; for(var i=0;i<this.$funs1_.length;i++){ var arg= this.$funs1_[i]; if(arg.ragm==this.ragm)arg.rago(ragq); } } }; raez.ragi={};raez.ragi.raw=function(url,data,callback){ $.ajax({ type: 'post', cache: false, dataType: 'json', contentType:'application/json', data: JSON.stringify(data), url: url, success: function(rags) { callback( rags ); }, error:function() { } }); };raez.ragi.ragt=function(cls){ return { clazz:cls, auth:function(){ this.append("rid", $("body").attr("data-rid")); this.append("token", $("body").attr("data-token")); return this; }, append:function(name,val){ var id="#"+this.clazz+"_"+name; if($(id).length > 0)$(id).remove(); var inp=$("<input id='"+id+"' name='"+name+"' type='hidden' >") .addClass(this.clazz) .val(val); $("body").append(inp); return this; }, post:function(url,back){ $("."+this.clazz).post(url,back); } } };raez.rafm=function(data){if(typeof data =="string"){ data=JSON.parse(data);}return { val:function(){ return data; }, toString:function(){ return JSON.stringify(data); }, toColumn:function(){ var data={}; for(var key in ds){ var newKey=""; for(var i=0;i<key.length;i++){ var key1=key.charAt(i); if(key1 === key1.toUpperCase()){ newKey+="_"+key1.toLowerCase(); }else{ newKey+=key1; } } data[newKey]=ds[key]; } return data; } };}; if(typeof raez=="undefined"){ raez={};} if(typeof raez.ragv!="undefined"){ alert("Math[RUI] is init!");}raez.ragv={};raez.ragv.num =function(val,fixed){ var num=Number(val); if(isNaN(val)||(num+"")=="NaN"){ num=0; } if(fixed!=null){ num=Number(num.toFixed(fixed)); } return num; }; if(typeof raez=="undefined"){ raez={};} if(typeof raez.ragw!="undefined"){ alert("Draw[RUI] is init!");}raez.ragw={};raez.ragw.magicc=function($mainColor){ var colors = []; for (i = 0; i < 5; i += 1) { colors.push(Highcharts.Color($mainColor).brighten((i - 3) / 7).get()); } for (i = 0; i < 5; i += 1) { colors.push(Highcharts.Color(colors[3]).brighten((i - 3) / 7).get()); } return colors; }; if(typeof raez=="undefined"){ raez={};} if(typeof raez.ragy!="undefined"){ alert("Main[RUI] is init!");}raez.ragz={ };raez.ragz["function"]=function(raha,rago){ if(typeof rahb!="function") rahb.rahd.rahe(rago); };raez.ragy=function(raha,$arg1_){ if(typeof(raha)=="function"){ $arg1_=raha; raha="function"; } var rahf=raez.ragz[raha]; if(rahf){ rahf(raha,$arg1_); }else{ return XRender(raha,$arg1_); } };raez.ragy.register=function(name,fun){ raez.ragz[name]=fun;};if(typeof raez=="undefined"){ raez={};} if(typeof raez.rahg!="undefined"){ alert("EventCore[RUI] is init!");}rahh={ rafz: function() { return function() { this.raga.apply(this, arguments); }; } }; raez.rahg=rahh.rafz();raez.rahg.prototype={ rahi:{}, raga:function(){ } };raez.rahg.prototype.set=function(name,fun) { if(fun==null)fun=function(){}; this.rahi[name]=fun;}; raez.rahg.prototype.push=function(name,fun) { if(typeof this.rahi[name] =="function"){ var $fun1_=this.rahi[name]; this.rahi[name]=[]; this.rahi[name].push($fun1_); }else if(typeof this.rahi[name] !="object") { this.rahi[name]=[]; } this.rahi[name].push(fun);};raez.rahg.prototype.get=function(name) { var rahk=this.rahi[name]; var rahl= { rahm:[], $stoped:false, rahn:function(){ var raho=this; setTimeout(function(){ if(raho.$stoped){ }else{ raho.rahq(raho.rahm); } },100); }, exec:function(){ var rahm=arguments; this.rahq(rahm); }, rahq:function(rahm){ this.$stoped=true; if(rahm.length>4){ alert("Event[RUI]:不支持的参数数量>4"); } if(typeof rahk =="object"){ }else if(typeof rahk =="function"){ $fun1_=rahk; rahk=[]; rahk.push($fun1_); }else{ console.log("Event[RUI]:不支持的类型"); rahk=false; } if( rahk) for(var rahs=0;rahs<rahk.length;rahs++){ rago=rahk[rahs]; if(rahm.length==1){ rago(rahm[0]); } else if(rahm.length==2){ rago(rahm[0],rahm[1]); } else if(rahm.length==3){ rago(rahm[0],rahm[1],rahm[2]); } else if(rahm.length==4){ rago(rahm[0],rahm[1],rahm[2],rahm[3]); } else{ rago(); } } } }; var rahm=arguments; for(var rahs=1;rahs<rahm.length;rahs++){ rahl.rahm.push(rahm[rahs]); } rahl.rahn(); return rahl;}; if(typeof rui!="undefined"){ alert("initRui Error"); } rui=raez.ragy; rui.widget= raib.raid;rui.util=raez.ragi; rui.json=raez.rafm;rui.client=raez.rafa;rui.request=raez.ragh;rui.class={ modules:{}, register:function(name,note){ if(note==null)note="init"; this.modules[name]=note; }, has:function(name){ return this.modules[name]!=null; } }; if(typeof raez.rahg!="undefined"){ rui.class.register("event","事件"); rui.class.Event=raez.rahg;}if(typeof raez.ragl!="undefined"){ rui.class.register("loader","加载器"); rui.class.Loader=raez.ragl; rui.class.register("loader","全局参数"); rui.class.Global=raez.rafa.$Global;} if (!Object.keys) { Object.keys = function (rahl) { var raht = [],rahv; for (rahv in rahl){ if (Object.prototype.hasOwnProperty.call(rahl, rahv)) { raht.push(rahv); } } return raht; };};Object.isArray = function (obj) { return Object.prototype.toString.call(obj)== '[object'+decodeURI("%20")+'Array]';};Date.prototype.format = function(rahw){	var o = {	"M+" : this.getMonth()+1,	"d+" : this.getDate(),	"h+" : this.getHours(),	"m+" : this.getMinutes(),	"s+" : this.getSeconds(),	"q+" : Math.floor((this.getMonth()+3)/3),	"S" : this.getMilliseconds()	} ;	if(/(y+)/.test(rahw)) {	rahw = rahw.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));	}	for(var k in o) {	if(new RegExp("("+ k +")").test(rahw)) {	rahw = rahw.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));	}	}	return rahw;	};Date.prototype.diff=function(startDate){ if(startDate==null)startDate=new Date(); var date3=this.getTime()-startDate.getTime(); var days=Math.floor(date3/(24*3600*1000)); var leave1=date3%(3600*1000); var hours=Math.floor(date3/(3600*1000)); var leave2=leave1%(3600*1000); var minutes=Math.floor(leave2/(60*1000)); var leave3=leave2%(60*1000) ; var seconds=Math.round(leave3/1000); if(hours<=0)hours="0"; if(minutes<=0)minutes="0"; if(seconds<=0)seconds="0"; if(hours<10)hours="0"+hours; if(minutes<10)minutes="0"+minutes; if(seconds<10)seconds="0"+seconds; var lab= hours+":"+minutes+":"+seconds+""; return lab;};String.prototype.has=function(rahy) {	return this.indexOf(rahy) != -1 ;	}; String.prototype.change=function(rahz,raia) {	return this.replace(new RegExp(rahz,"g"),raia); }; String.prototype.encodeSelector=function() {	var str=this.replace(new RegExp(".","g"),"_2_"); str=this.replace(new RegExp("#","g"),"_1_");	return str; }; String.prototype.decodeSelector=function() {	var str=this.replace(new RegExp("_2_","g"),"."); str=this.replace(new RegExp("_1_","g"),"#");	return str; }; String.prototype.trim=function() {	return this.replace(new RegExp(/(\s*$)/g,"g"),""); }; String.prototype.success=function() { return {"code":200,"data":this}; }; String.prototype.error=function() { return {"code":-500,"data":this};	};	String.prototype.md5=function() { return hex_md5(this); };	if(typeof rafe=="undefined"){ rafe={};} rafe.rals={ rafz: function() { return function() { this.raga.apply(this, arguments); }; } }; rafe.raki=rahb.raki; rafe.rakl=rahb.rakl; rafe.rakm= rahb.rakm; rafe.raiw=rahb.raiw; rafe.ramt={};rafe.ramt.rafo={}; rafe.ranh= rakq;rafe.dom= UIDom; rafe.rasi=new rui.class.Loader("rask");rui.dict={};rui.dict["baseTV"]=[];rui.dict["baseTV"][0]={"text":"请选择","value":""};rui.dict["baseTV"][1]={"text":"是","value":"1"};rui.dict["baseTV"][2]={"text":"否","value":"0"};rui.dict["baseTV2"]=[];rui.dict["baseTV2"][0]={"text":"是","value":"1"};rui.dict["baseTV2"][1]={"text":"否","value":"0"}; JSLoader.append(function(){ setTimeout(function(){ rafe.rasi.run(); },300); setTimeout(function(){ $(raim).removeClass("rui-prefix-pri"); $(".rui-prefix-dialog-pri").fadeOut(); },500); });rui.pages={};rui.register("function",function(rasf,rago){ if(typeof rafe.ramt.rasl=="undefined"||rafe.ramt.rasl.rasm==false){ rafe.rasi.append(rago); }else{ var rasn=$(rafe.ramt.rasl.rasm); if(!$(rasn).hasClass("lazyload-init")){ rami.rann("#"+rasn.attr("id"),"raoh"); $(rasn).addClass("lazyload-init"); } rago(); } }); rui.register("mode",function(order,$arg1_){ rui.client.global("mode",$arg1_); rafe.ranh(raim).rals($arg1_).add(); });rui.register("widget.extends",function(order,$arg1_){ var raom=""; if(typeof $arg1_=="function" ){ raom= new $arg1_().raom; } else{ raom=$arg1_.raom; } if(raom=="rui-ant-form"){ raib.rali(raom.replace(/\./g,"-") ,raib.raoy($arg1_)); }else raib.rahe(raom.replace(/\./g,"-") ,raib.raoy($arg1_)); } ); rafe.raki("com/jquery/utils/moment.min.js"); if(rafe.raiw("icon")) rafe.rakm("com/fontawesome/css/font-awesome.one.css"); rui.modal=rafe.raso; rui.rasq={};rui.setCallback=function($name,$back){ rafe.rasq[$name]=$back; }; rui.userdata=function(k,mTimeout){ return { json:function(obj){ return raez.rafa.data(k,obj); }, string:function(v){ return this.json(v)} };}; rui.num=raez.ragv.num; rui.magicc=raez.ragw.magicc; rui.raw=raez.ragi.raw; rui.param=raez.ragh.param;rui.paramJSON=raez.ragh.paramJSON; rui.fragments=raez.ragh.fragments;rui.changeArg=raez.ragh.changeArg;rui.modelToColumn=function(ds){ return rui.json(ds).toColumn(); }; rui.action=function($url,cheanthis){ if(cheanthis){ window.location.replace($url); }else{ window.location=$url; }};rui.widgetMaskDialog=function(callback){ var selector="rui-widget-close-dialog-pri"; $("."+selector).remove(); $("body").append($("<div class='"+selector+"'></div>")); $("."+selector).click(function(){ $(".rui-dialog-close-handle").remove(); $(this).remove(); if(callback)callback(); });}; ruiEvent= ruiEvent=new rui.class.Event();rui.setEvent=function(name,fun) { ruiEvent.set(name,fun); }; rui.pushEvent=function(name,fun) { ruiEvent.push(name,fun);};rui.event=function() { var rahm=arguments; var $args1_=[]; for(var i=0;i<rahm.length;i++){ $args1_.push(rahm[i]); } ruiEvent.get(rahm[0]).rahq($args1_);}; $(function(){ rui.client.os("mobile",function(isMob){ $("body").addClass(isMob?"rui-mob":"rui-pc"); }); });rass = "dashboard"; rast = function(ranh, rasv) { var rals = ranh.ralv('class').val(); if (rals == null) return ""; var rasw = rals.split(' '); for (var j = 0; j < rasw.length; j++) { if (rasw[j].lastIndexOf(rasv, 0) === 0) { return rasw[j]; } } return "";};rafe.ramt.rasl = rafe.rals.rafz();rafe.ramt.rasl.prototype = { ramt: false, raga: function(rasy, ramt) { this.ramt = ramt; rasy.rals("raab").add(); rasy.rals(rami.ramk.ramm).add(); rasy.ralf("<div class=\"raal\">&nbsp;</div>"); this.ranh = rasy; this.html = this.ranh.ralk('innerHTML'); rasy.rame(""); var rasz = rast(rasy, "w-"); if (rasz != "") this.rata = rasz; rasy.rals(rasz).remove(); ratb = rui.client.global("mode") ? rui.client.global("mode") : rakv; this.ratd = rui.client.os("mobile") ? rass : ratb; this.rafl["title"] = rasy.ralv("data-title").val(); this.rafl["subtitle"] = rasy.ralv("data-subtitle").val(); this.rafl["logo"] = rasy.ralv("data-logo").val(); if (rui.client.os("mobile")) { } else { this.rate = this.ratf(); this.ratg = this.rath(); } this.rati = this.ratk(); if (this.ratd == rass) { rafe.ranh(raim).rals("raaa").add(); if (rui.client.os("mobile")) { var ratl = new ratm(); ratl.ratn("_contorl"); this.rati.rahe(ratl.rato().rafn()); ratl.rato().rafn().click(function() { rui("#" + ramt.ragm).widget("rui-admin-header").hideMenu(); }); } } this.raqe = rasy.rafn(); }, ranh: false, rame: false, ratd: "default", rata: "w-main", rafl: { title: "", subtitle: "", logo: false }, ratg: false, rate: false, rati: false, ratq: false, get: function() {}, set: function() {}, setting:function(){ var rafl={}; rafl["menuHeight"]=$(".raam").height(); return rafl; }};rafe.ramt.rasl.prototype.rath = function() { var ranh = rafe.ranh("<div class=\"raao top fixed-logo\" ></div>"); var rats = rafe.ranh("<div></div>"); rats.rals(this.rata).add(); var ratt = false; if (this.ratd == rass) { ratt = rafe.ranh("<span class=\"raag\"></span>"); } else { ratt = rafe.ranh("<span class=\"raag\">&nbsp;</span>"); ratt.rahe(this.rame); } rats.rahe(ratt.rafn()); ranh.rahe(rats.rafn()); this.ranh.rali(ranh.rafn()); return ratt;};rafe.ramt.rasl.prototype.ratf = function() { var ranh = rafe.ranh("<div class='raai'></div>"); ranh.rals(this.rata).add(); this.ranh.rahe(ranh.rafn()); var ratv = rafe.ranh("<div></div>"); ratv.rals("raah").add(); if (this.rafl.logo) { var ratw = rafe.ranh("<span class='logo'></span>"); ratv.rahe(ratw); ratw.rahe("<div><img src='" + this.rafl["logo"] + "' style='height:100%;'></div>"); } raty = "<span><h1 class=\"raaq\">"; if (this.rafl["subtitle"]) { raty += "<em>" + this.rafl["subtitle"] + "</em>"; } ratv.rahe(raty + this.rafl["title"] + "</h1></span>"); ranh.rahe(ratv.rafn()); if (this.ratd != rass) { ranh.rahe("<span class=\"tr\">&nbsp;</span>"); } return ranh;};rafe.ramt.rasl.prototype.ratk = function() { var ranh = rafe.ranh("<div></div>"); ranh.rals(this.rata).add(); this.ranh.rahe(ranh.rafn()); if (this.ratd == rass) { var rald = rafe.ranh("<div class=\"raam\"></div>"); if (rui.client.os("mobile")) { var nav = rald.rafn(); nav.width($("body").width()); nav.css("left", -1 * $("body").width()); } rafe.ranh(raim).rahe(rald.rafn()); var ratz = rafe.ranh("<ul></ul>"); rald.rahe(ratz.rafn()); return ratz; } else { var rald = rafe.ranh("<div class=\"raad\"></div>"); var ratz = rafe.ranh("<ul class='raam'></ul>"); rald.rahe(ratz.rafn()); rald.rahe("<span class=\"clearfix\"></span>"); ranh.rahe(rald.rafn()); return ratz; }}; rafe.ramt.rasl.prototype.appendTopLogo = function(title, icon) { ranh = rafe.ranh("<a class='raaf'>" + title + "</a>"); if (icon != null) { ranh.rali("<i class=\"" + icon + "\"></i>"); } this.ratg.rald().rali(ranh.rafn());};rafe.ramt.rasl.prototype.appendTopNav = function(html, id, href, icon, isPre) { ranh = false; if (id == null && href == null && icon == null) { ranh = rafe.ranh("<a>" + html + "</a>"); } else { ranh = rafe.ranh("<a>" + html + "</a>"); ranh.ralv("id").val(id); ranh.ralv("href").val(href == rakw ? $udJV0_ : href); } if (icon != null) { ranh.rali("<span class='raae'><i class=\"" + icon + "\"></i></span>"); } if (rui.client.os("mobile")) { } else { if (isPre) this.ratg.rali(ranh.rafn()); else this.ratg.rahe(ranh.rafn()); }};rafe.ramt.rasl.prototype.prependTopNav = function(html, id, href, icon) { this.appendTopNav(html, id, href, icon, true);};rafe.ramt.rasl.prototype.appendTopLogo = function(html, id, href) { ranh = false; if (id == null && href == null ) { ranh = rafe.ranh( html ); } else { ranh = rafe.ranh("<a>" + html + "</a>"); ranh.ralv("id").val(id); ranh.ralv("href").val(href == rakw ? $udJV0_ : href); } this.ratg.rafn().parent().append("<span class='raat'>"+ranh.rafn().prop("outerHTML")+"</span>"); };rafe.ramt.rasl.prototype.title = function(title) { this.ranh.ralz(".raaq").rame(title);};rafe.ramt.rasl.prototype.active = function(name) { var rald = $(".raam"); rald.find(".active").removeClass("active"); var rava = rafe.ranh("#nav_" + name); rava.rals("active").add(); var rale = rava.rald(3); if (rale.rals("children").exist()) { rale.rals("open").add(); } var $par2_ = rale.rald(2); $par2_.rals("open").add(); if(rui.client.os("mobile")){ this.leftMenu(false); }};rafe.ramt.rasl.rasm=false;rafe.ramt.rasl.ranv=false;rafe.ramt.rasl.prototype.refreshLazyload=function(){ rafe.ramt.rasl.ranv=XRender.lazyload(rafe.ramt.rasl.rasm).bind(".rui-event-lazyload"); }; rafe.ramt.rasl.prototype.content = function(selector) { rafe.ramt.rasl.rasm=selector; this.refreshLazyload(); ranh = rafe.ranh(selector); ranh.rals("raav").add(); this.ratq = ranh; this.resize(); }; rafe.ramt.rasl.prototype.action = function(url) { rami.ranv.rahd(url); return false;};rafe.ramt.rasl.prototype.resize = function(callback) { ravb = $("#" + this.ramt.ragm).innerHeight(); rafe.ranh(".raal").ralm(ravb); if (rui.client.os("mobile") || this.ratd == "default") { } else { rafe.ranh(".raam").rafn().css("top", ravb); var width = rafe.ranh(".raam").raln(); if (!$("body").hasClass("rui-open-menu")) { width = $("#" + this.ramt.ragm).height(); } $(".raav").css("marginLeft", width); }};rafe.ramt.rasl.prototype.hide = function() { $(".cd-header,.cd-nav-dashboard").hide(); $(".cd-header-clear").remove(); $(".cd-content-dashboard").css("marginLeft", 0);};rafe.ramt.rasl.prototype.setInnerMaxWidth = function(maxWidth) { var header=$("#" + this.ramt.ragm); header.find(".w-full").css("maxWidth",maxWidth);}; rafe.ramt.rasl.prototype.leftMenu = function(ravd) { var rave = $("body"); var ravf = function() { }; var ravg=rui.client.os("mobile"); var ratk=$(".raam"); var ravh=$(".raav"); var raln = ratk.width(); if (rave.hasClass("rui-open-menu")&&!ravd) { rave.removeClass("rui-open-menu"); rave.addClass("rui-close-menu"); ratk.find(".open").removeClass("open"); if(ravg){ ratk.animate({ "left": -1*raln}, 500, "swing", function() { ravf(); }); }else{ var ravi=ratk.css("top"); ratk.css("width", ravi); ravh.css("marginLeft", ravi); ravf(); } } else if(!rave.hasClass("rui-open-menu")){ rave.addClass("rui-open-menu"); rave.removeClass("rui-close-menu"); raln = ratk.width(); ravh.css("marginLeft",ravg?0:raln); ratk.css("left",0); setTimeout(function() { ravf(); }, 500); }};rafe.ramt.rasl.prototype.updateNavs = function(fun) { $(".cd-nav-item").each(function() { fun($(this)); });}; rafe.ramt.rasl.prototype.bindJsonStr = function(str) { this.bindJson(JSON.parse(str));};rafe.ramt.rasl.prototype.bindJson = function(navs,clean) { var raho=this; if(clean==null) this.rati.rame(""); for (var rahs = 0; rahs < navs.length; rahs++) { var ravk = navs[rahs]; var ravl = new ratm(); ravl.ratn(ravk); this.rati.rahe(ravl.rato().rafn()); if (rahs == 0) { ravl.ranh.rals("first").add(); } else if (rahs == navs.length - 1) { ravl.ranh.rals("last").add(); } var ravm = "<em class='raas'><i class='fa fa-plus plus'></i><i class='fa fa-minus minus'></i></em>"; var $subMenuClicker=function(ralq) { var rava = ralq.rald(); var ravd = rava.rals("open").exist(); if (ravd) { rava.rals("open").remove(); } else { raho.leftMenu(true); rava.rals("open").add(); } }; if (ravk["subNavs"]) { var ravn=ravl.rato().ralz("a", 0); ravn.rahe(ravm); ravn.ralv("href").val($udJV0_); ravn.ralv("onclick").val(""); ravn.ralo($subMenuClicker); var ravo = ravk["subNavs"]; for (var raqv = 0; raqv < ravo.length; raqv++) { var ravq = new ratm(); ravq.ratn(ravo[raqv]); ravl.rahe(ravq.rato().rafn()); if (ravo[raqv]["subNavs"]) { var $svnNav2Btn_=ravq.rato().ralz("a", 0); $svnNav2Btn_.rahe(ravm); $svnNav2Btn_.ralv("href").val($udJV0_); $svnNav2Btn_.ralv("onclick").val(""); $svnNav2Btn_.ralo($subMenuClicker); var $subs2_ = ravo[raqv]["subNavs"]; for (var rahv = 0; rahv < $subs2_.length; rahv++) { var $subView2_ = new ratm(); $subView2_.ratn($subs2_[rahv]); ravq.rahe($subView2_.rato().rafn()); } } } } } if(rui.client.os("mobile")){ var ravs=$("<a href='javascript:void(0);' data='"+this.ramt.ragm+"'><span class=\"raaw\"><i class=\"fa fa-close\"></i>关闭</span></a>"); this.rati.rafn().parent().append(ravs); ravs.click(function(){ XRender("#"+$(this).attr("data")).widget().leftMenu(false); }); } this.resize(); this.refreshLazyload(); };ratm = rafe.rals.rafz();ratm.prototype = { raga: function() {}, ratn: function(rafl) { if (rafl == "_contorl" && rui.client.os("mobile")) { this.ravt = "<i class='fa fa-chevron-left'></i>"; this.ravv = "&nbsp;"; this.raof = "#"; this.rafg = "menu"; } else if (rafl == "_contorl") { } else { this.ravt = rafl["title"]; this.rafg = rafl["name"]; this.raof = rafl["href"] ? rafl["href"] : "#"; this.ravw = rafl["open"] ? rafl["open"] : false; this.ravv = rafl["icon"]; this.ravy = rafl["subNavs"]; } }, rato: function() { if (this.ranh == false) { var rafo = this.rafg == "menu" ? "menu" : ""; rafo += this.ratd == rass ? "" : " "; var $iconLv2Style_ = ""; var ravz = this.rafg == "menu" ? "" : "raay"; var rawa=""; if (this.ravv == "") { $iconLv2Style_ = "raaz"; } else { rawa="<span class=\"raba raaz \" ><i class=\"" + this.ravv + "\"></i></span>"; } var ranv="rui-event-lazyload"; if (this.raof.length < 5 ||this.raof.has("javascript") ) { ranv = ""; } var rame = "<li class='" + rafo + "'><a class=\""+ranv+"\" title=\"" + this.ravt + "\" id=\"nav_" + this.rafg + "\" href=\"" + this.raof+ "\">" +rawa+"<span class=\"lab " + $iconLv2Style_ + "\"><label>" + this.ravt + "</label></span></a><div class='clearfix'></div></li>"; var ranh = rafe.ranh(rame); if (this.ravw) { var rawb = ranh.ralz("a", 0); rawb.ralv("target").val("_blank"); rawb.ralv("href").val(this.ravw); } this.ranh = ranh; } return this.ranh; }, rahe: function(raqs) { if (!this.ranh.rals("children").exist()) { this.ranh.rals("children").add(); this.rawd = rafe.ranh("<ul></ul>"); this.ranh.rahe(this.rawd.rafn()); } this.rawd.rahe(raqs); }, ranh: false, rawd: false, ravt: "", rafg: "", raof: "", ravv: ""};raib.rahe("rui-admin-header", rafe.ramt.rasl);$(window).scroll(function(){ var scan=91; var rawe=$(".rabb"); if($(window).scrollTop()>=scan) { for(var rahs=0;rahs<rawe.length;rahs++){ var raqo=$(rawe[rahs]); var rava=$("#"+raqo.attr("target")); rava.attr("width",rava.width()); if(!rava.hasClass("rabd")){ rava.attr("top",$(".raab").height()+Number('"@row.span"'.change("px",""))); rava.addClass("rabd"); } raqo.css("height",rava.height()+Number('"@row.span"'.change("px",""))).css("display","block").html("&nbsp;"); rava.css("width", rava.attr("width")); rava.css("top",rava.attr("top")+"px"); } $("body").addClass("rui-fixed"); }else{ $("body").removeClass("rui-fixed"); for(var rahs=0;rahs<rawe.length;rahs++){ var raqo=$(rawe[rahs]); raqo.hide(); var rava=$("#"+raqo.attr("target")); rava.css("top","initial").css("width","initial"); } } });rawf={};rafe.raoq=function(className){ var layoutView=false; if(typeof className =='string'){ if(rawf[className]==null){ rawf[className]=$(className).prop("outerHTML")+""; $(className).remove(); } layoutView=$(rawf[className]); }else{ layoutView=$(className.prop("outerHTML")); } return { raom:className, raoq:layoutView, rawg:false, rawh:function(){ var SCRIPT_REGEX = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi; this.layout=(this.layout+"").replace(SCRIPT_REGEX, ''); return this; }, setAdapter:function(iAdapter){ this.rawg=iAdapter; return this; }, replace:function(json){ var html=this.raoq.prop("outHTML"); for(var raqk in json){ var raly=json[raqk]; html.change("@{"+$key+"}",raly); } this.raoq=$(html); return this; }, html:function(){ return this.raoq.prop("outHTML"); }, object:function(){ return this.raoq; }, bind:function(rafm){ for(var raqk in rafm){ var raly=rafm[raqk]; this.raoq.find("[data-name='"+raqk+"']").html(raly); this.raoq.find("[name='"+raqk+"']").html(raly); if(this.rawg!=false){ this.rawg(this.raoq,key,rafm); } } var ragn=["href","title","id","value","class"]; for(var raqo=0;raqo<ragn.length;raqo++){ var raqq=ragn[raqo]; var raqnhref_=this.raoq.find("["+ raqq+"]"); for(var rahs=0;rahs<raqnhref_.length;rahs++){ var raqs=$(raqnhref_[rahs]).attr(raqq); if(raqs!=null&& raqs!=""){ raqt =raqs.match(/\{[\s\S]*?\}/ig); if(raqt==null)raqt=[]; for(var raqv=0;raqv<raqt.length;raqv++){ var raqw=raqt[raqv].change('{',""); raqw=raqw.change('}',""); raqs=raqs.change(raqt[raqv],rafm[raqw]); } $(raqnhref_[rahs]).attr(raqq,raqs); } } } return this; }, _display:"block", display:function(value){ this._display=value; return this; }, appendTo:function(parent){ $(parent).append( this.raoq); rami.ragw(this.raoq); }, prependTo:function(parent){ $(parent).prepend($(this.raoq)); rami.ragw(this.raoq); } };};rafe.ramt.rawi = rafe.rals.rafz();rafe.ramt.rawi.prototype = { raga: function(rasy) { var jq = rasy.rafn(); var rawk = jq.children(); var ratv = $("<div class='rabe'></div>"); var rawl = $("<div class='rabf'></div>"); for (rahs = 0; rahs < rawk.length; rahs++) { rawm = $("<div class='rabg'></div>"); rawm.append(rawk[rahs]); rawl.append(rawm); } ratv.append(rawl); jq.html("").append(ratv); }};rafe.ramt.rafo.rawi = "rui-row"; raib.rali(rafe.ramt.rafo.rawi, rafe.ramt.rawi);rafe.ramt.rawn = rafe.rals.rafz();rafe.ramt.rawn.prototype = { raoq: false, raqn: false, ranh: false, rawo: false, rawq: false, raga: function(rasy, ramt) { this.rawo = "rui-list-" + ramt.ragm; var raws = $.parseHTML("<div>" + rasy.rafn().children().eq(0).prop("outerHTML") + "</div>"); this.raoq = $(raws).addClass("rabh"); this.raqn = $("<div></div>").addClass(this.rawo); rasy.rame(""); rasy.rafn().addClass(rami.ramk.ramm); rasy.rahe(this.raqn); this.rawq = rafe.rawt("rui-list", this.raqn); }, rawv: 0, showLoading: function() { this.rawv = 0; $("." + this.rawo).find(".rabh").remove(); this.rawq.raww(); }, hideLoading: function(rawy) { this.rawq.rawz(rawy); }, append: function(json) { this.hideLoading(); this.rawv++; json["index"] = this.rawv; rafe.raoq(this.raoq).bind(json).appendTo("." + this.rawo); }, appends: function(jsons) { for (var rahs = 0; rahs < jsons.length; rahs++) { this.append(jsons[rahs]); } }, prepend: function(json) { rafe.raoq("." + this.raya).bind(json).prependTo("." + this.rawo); }, set: function() { }};rafe.ramt.rafo.rawn = "rui-list"; raib.raov(rafe.ramt.rafo.rawn, rafe.ramt.rawn);raib.raoz("rui.list.index", function() { var widget = new rui.widget("rui.list.index"); widget.setJQRender(function(jqObject, model) { var index = Number(jqObject.attr("value")); var macColors = rafe.rayb.magicc('"@color"'.split(";")[0]); if (index > 3) index = 3; var indexView = $("<b data-name='index'></b>").css("backgroundColor", macColors[index]); jqObject.html(indexView).addClass("rabi"); return indexView; }); return widget;});raib.raow("rui.tabs", function() { var widget = new rui.widget("rui.tabs"); widget.active = function(name) { $("#ruiTabHandle" + name).click(); }; widget.setJQRender(function(rafn, model) { var rayd = rafn.children("div"); var rawk = []; for (rahs = 0; rahs < rayd.length; rahs++) { var raqs = {}; raqs["name"] = $(rayd[rahs]).attr("data-name"); raqs["title"] = $(rayd[rahs]).attr("data-title"); var rame=$(rayd[rahs]); rame.find("script").remove(); raqs["html"] = rame; rawk.push(raqs); } rayd.remove(); var panel = $("<div class='rabk'></div>"); var tabs = $("<span class='rabl'></span>"); rafn.append(tabs); rafn.append(panel); for (rahs = 0; rahs < rawk.length; rahs++) { raqs = rawk[rahs]; var handle = "rabm-" + rahs; var link = $("<a>" + raqs["title"] + "</a>"); link.attr("id", "ruiTabHandle" + raqs["name"]); link.attr("target", handle); if (rahs == 0) link.addClass("active"); tabs.append(link); link.click(function() { var fChild = panel.children(".rabm").eq(0); var target = $(this); target.parent().find("a").removeClass("active"); target.addClass("active"); panel.children(".rabm").hide(); panel.children("." + target.attr("target")).show(); }); if (rahs != 0) { raqs["html"].hide(); } panel.append(raqs["html"].addClass(handle).addClass("rabm")); } panel.append("<div class=\"clearfix\"></div>"); return panel; }); widget.setTitle = function(title, icon) { this.view.find(".title").html(title); if (icon != null) { this.view.find(".icon").replaceWith(icon); } }; return widget;}); raib.raoz("rui.panel.survey", function() { var widget = new rui.widget("rui.panel.survey"); widget.active = function(name) { this.view.find(".rabn").removeClass("active"); this.view.find(".rabn-" + name).addClass("active"); }; widget.setJQRender(function(rafn, model) { var rayd = rafn.children("a"); var rawk = []; for (rahs = 0; rahs < rayd.length; rahs++) { var raqs = {}; raqs["name"] = $(rayd[rahs]).attr("data-name"); raqs["unit"] = $(rayd[rahs]).attr("data-unit"); raqs["href"] = $(rayd[rahs]).attr("href"); raqs["title"] = $(rayd[rahs]).html(); rawk.push(raqs); } rayd.remove(); var panel = $(rafn.prop("outerHTML")).removeClass("rui-panel-survey"); panel.attr("data-render", "rui-panel"); panel.removeAttr("id"); panel.addClass("rui-table-layout"); var table = $("<table cellspacing='0' cellpadding='0' class='rui-ml rui-mb'><tr></tr></table>"); panel.append(table); for (rahs = 0; rahs < rawk.length; rahs++) { var a = $("<a class='rui-ml rabn rabn-" + rawk[rahs].name + "'>" + rawk[rahs].title + "<span><label name='" + rawk[rahs].name + "' class='rui-fs-24'>--</label>" + rawk[rahs].unit + "</span>" + "</a>"); a.attr("href", rawk[rahs].href); table.find("tr").append($("<td></td>").append(a)); } rafn.append(panel); rami.ragw(rafn); rafn.children("h3").remove(); return panel; }); widget.setTitle = function(title, icon) { this.view.find(".title").html(title); if (icon != null) { this.view.find(".icon").replaceWith(icon); } }; return widget;});raye = function(tit) { var rayf = $("<label></label>"); rayf.append("<i></i>"); rayf.append(tit); return rayf;};rafe.ramt.rayg = rafe.rals.rafz();rafe.ramt.rayg.prototype = { raga: function(rasy, ramo) { var target = rasy.rafn() ; target.addClass(rami.ramk.ramm); if (target.hasClass("fixed")) { target.after("<div class='rabb' target='" + ramo.ragm + "'></div>"); } target.attr("id", ramo.ragm); target.addClass("rabo"); var rayh = target.attr("data-fix-height"); if (rayh != null && rayh != "") { var rayi = ramo.ragm; setInterval(function() { $("#" + rayi).height($(rayh).height()).css("overflow","hidden"); }, 1000); } var title = $("<h3></h3>"); if (target.children("h3").length > 0) { title = target.children("h3").eq(0); title.remove(); } title.addClass("rabq"); var options = $("<span class='rabs'><span>"); options.html(title.html()); var titleLabel = $("<label></label>"); if (target.attr("data-icon")) { titleLabel.append("<i class='" + target.attr("data-icon") + "'>&nbsp;</i>"); } else { titleLabel.append("<i class='icon rabt'>&nbsp;</i>"); } titleLabel.append("<font class='title' >" + target.attr("data-title") + "</font>"); title.html(""); title.append(titleLabel); var h4 = target.children("h4"); if (h4.length > 0) { h4 = h4.eq(0); h4.find("a").each(function() { options.append($(this).prop("outerHTML")); }); var h4View = $("<h4></h4>").addClass("h3"); h4Title = raye(h4.attr("data-title")); h4View.append(h4Title); h4View.append(options); h4View.css("marginBottom", 16); h4.replaceWith(function() { return h4View; }); } else { title.append(options); } var bodyHtml = target.html(); var body = $("<div class='rabv'></div>"); body.append(bodyHtml); target.html(""); if (target.attr("data-title") != "disabled" && target.attr("data-title") != null) { target.html("").append(title); } target.append(body); target.append("<div class='clearfix'></div>"); rami.ragw(target); this.raqe = target; }, raqe: false, append: function(html) { var list = this.raqe.find(".cd-auto-content"); if (!list.hasClass("cd-auto-list")) { list.addClass("cd-auto-list"); list.prepend("<div class='cd-auto-children'></div>"); } list.find(".cd-auto-children").append(htm); }, setTitle: function(title, icon) { this.raqe.find(".title").html(title); if (icon != null) { this.raqe.find(".icon").replaceWith(icon); } }, rasa: "input,INPUT,textarea,TEXTAREA,select,SELECT", set: function(data) { var raqz = []; raqz = $.merge(raqz, this.raqe.find("[name]")); raqz = $.merge(raqz, this.raqe.find("[data-name]")); for (var rahs = 0; rahs < raqz.length; rahs++) { var rasb = $(raqz[rahs]); var rasd = rasb.attr("name") ? rasb.attr("name") : rasb.attr("data-name"); if (rasd == null) continue; if (this.rasa.indexOf(rasb.get(0).tagName) != -1) { rasb.val(data[rasd]); rasb.trigger("change"); } else { rasb.html(data[rasd]); } } },};raib.rali("rui-panel", rafe.ramt.rayg);rafe.ramt.rayk = rafe.rals.rafz();rafe.ramt.rayk.prototype = { rayl: false, ramo: false, raym:true, raga: function(rasy, ramo) { this.ramo = ramo; this.rayl = $("<div class='rabw'></div>"); var raho = this; this.rayl.click(function() { if(raho.raym) { $(this).parent().hide(); $("body").css("overflow-y","auto"); } }); var rayn = $("<div></div>").attr("id", ramo.ragm); rayn.addClass(rami.ramk.ramm); rayn.addClass("rui-modal raby" ); rayn.append(this.rayl); var rayo = $("<div></div>").addClass("rabz"); rayo.append(rasy.rafn()); rayn.append(rayo); $("body").append(rayn); this.raqe = rayn; rami.ragw(rayn, true); rayn.find("[data-event='rui.modal.close']").click(function() { if(raho.raym){ raho.hide(); $("body").css("overflow-y","auto"); } }); }, raqe: false, afterView: function(fun) { fun(this.raqe); }, lockShow:function(data){ this.raym=false; this.show(data); }, fullShow:function(data,callback){ var rave= this.raqe.find(".rabz"); rave.width( $(window).width()); rave.height($(window).height()); var $checkPanel0_= rave.children(".rabo"); if($checkPanel0_.length>0){ $checkPanel0_.height($(window).height()); var $panel0BodyHeight_=$(window).height()-$checkPanel0_.find(".rabq").height(); $checkPanel0_.find(".rabv").height($panel0BodyHeight_); } this.show(data,callback); }, show: function(data,callback) { $("body").css("overflow-y","hidden"); this.raqe.show(); if (data != null) { var rasa = "input,INPUT,textarea,TEXTAREA,select,SELECT"; var raqz = this.raqe.find("[data-name]"); for (var rahs = 0; rahs < raqz.length; rahs++) { var rasb = $(raqz[rahs]); var rasd = rasb.attr("name") ? rasb.attr("name") : rasb.attr("data-name"); if (rasd == null) continue; if (rasa.indexOf(rasb.get(0).tagName) != -1) { rasb.val(data[rasd]); rasb.trigger("change"); } else if (rasb.get(0).tagName == "IMG" || rasb.get(0).tagName == "IFRAME") { rasb.attr("src", data[rasd]); } else { rasb.html(data[rasd]); } } } if(callback!=null) callback(data); this.fixed(); }, fixed: function() { var rayq = $(window).height() / 2; var rays = this.raqe.find(".rabz").height() / 2; this.raqe.find(".rabz").css("marginTop", rayq - rays); }, hide: function(title) { this.raqe.hide(); }};raib.rahe("rui-modal", rafe.ramt.rayk);rafe.raso = {};rafe.raso.alert = function(message, title) { var rafl = {}; rafl["message"] = message; if (title != null) rafl["title"] = title; rui("#rui_modal_alert").widget( "rui-modal", "<div data-render='rui.panel' data-title='提示' ><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><div style='padding: 16px 32px 32px 32px;' data-name='message'></div></div>") .show(rafl);};rafe.raso.check = function(message, checkListener,cancelListener) { var rafl = {}; rafl["message"] = message; rui("#rui_modal_check").widget( "rui-modal", "<div data-render='rui.panel'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><div style='padding:16px 32px;' data-name='message'></div>" + "<span class='rada'><a class='rui-ant-button primary'>确认</a>&nbsp;&nbsp;&nbsp;<a data-event='rui.modal.close' class='rui-ant-button cancel'>取消</a></span>" + "</div>") .show(rafl); var sureBtn=$("#rui_modal_check").find(".primary"); sureBtn.unbind("click").click(function() { checkListener(); }); var cancelBtn=$("#rui_modal_check").find(".cancel"); if(cancelListener!=null){ cancelBtn.unbind("click").click(function() { cancelListener(); }); } };rafe.raso.hideCheck = function() { rui("#rui_modal_check").widget().hide();};rafe.openCoder = function() { rafe.rakm("com/syntaxhighlighter/styles/shCore.css"); rafe.rakm("com/syntaxhighlighter/styles/shThemeDefault.css"); rafe.raki("com/syntaxhighlighter/shCore.js", function() {}); rafe.raki("com/syntaxhighlighter/shBrushBash.js", function() {}); rafe.raki("com/syntaxhighlighter/shBrushCSharp.js", function() {}); rafe.raki("com/syntaxhighlighter/shBrushJava.js", function() {}); rafe.raki("com/syntaxhighlighter/shBrushJScript.js", function() {}); rafe.raki("com/syntaxhighlighter/shBrushPhp.js", function() {});};if (rafe.raiw("coder")) { rafe.openCoder();}rafe.ramt.rayt = rafe.rals.rafz();rafe.ramt.rayt.prototype = { rayv: false, rayw: false, raqe: false, rayy: false, rayz: false, raga: function(rasy, ramo) { var rahl = rasy.rafn(); var ravt = rahl.attr("data-title"); var scp = rahl.find("script"); this.rayw = (scp.text() + "").change("\\<\\!\\[CDATA\\[", ""); this.rayw = this.rayw.change("\\]\\]\\>", ""); scp.remove(); this.rayv = rahl.find("code").html(); rahl.find("code").remove(); var raza = rahl.html(); this.raqe = rasy.rafn().html(""); var razb = $("<div></div>").attr("id", ramo.ragm).addClass("radb"); var rayy = $("<div class='radd'></div>"); rayy.append($.parseHTML(this.rayv)); razb.append(rayy); var raho = this; rayy.find("[data-coder-event='click']").click(function() { $("body").append("<script>" + raho.rayw + "</script>"); }); if (rayy.find("[data-coder-event='load']").length > 0) { rayy.append("<span class='loading'><i class=' fa fa-cog fa-spin'></i>控件加载中,请稍后...<span>"); setTimeout(function() { rayy.find(".loading").remove(); $("body").append("<script>" + raho.rayw + "</script>"); }, 2000); } var razd = $("<div class='rade'><div class='radf'><label>" + ravt + "</label></div></div>"); razd.append("<div class='radg'>" + raza + "</div>"); this.rayz = $("<div class='radh'></div>"); razd.append(this.rayz); var raze = $("<div class='radi'></div>"); var razf = $("<a><i class='fa fa-code'></i>查看代码</a>"); razf.attr("target", ramo.ragm); var instance = this; razf.click(function() { if (instance.showCode() == "open") { $(this).html("<i class='fa fa-code'></i>隐藏代码"); } else { $(this).html("<i class='fa fa-code'></i>查看代码"); } }); raze.append(razf); razd.append(raze); razb.append(razd); this.raqe.replaceWith(razb); return razb; }, showCode: function() { var razg = this.rayz; if (razg.attr("status") == "inited") { if (razg.is(":hidden")) { razg.show(); return "open"; } else { razg.hide(); return "close"; } } razg.attr("status", "inited"); razg.html("<i class='fa fa-cog fa-spin'></i>"); var razh = $("<pre class='brush:js'>" + this.rayw + "</pre>"); razg.show().append(razh.hide()); SyntaxHighlighter.highlight(); setTimeout(function() { razg.find("i").remove(); razh.show(); }, 1000); return "open" }, set: function() { }};raib.rahe("rui-coder", rafe.ramt.rayt);rafe.rawt = function(razi, rald) { var rawq = { raqn: $("<div class='"+razi+"-loading'><a><i class='fa fa-refresh fa-spin'></i>&nbsp;正在加载数据,请稍后...</a></div>"), raww: function() { this.raqn.show(); }, rawz: function(rawy) { if(rawy!=null){ this.raqn.find("a").html(rawy); }else this.raqn.hide(); } }; if (rald != null) { rald.append(rawq.raqn); } return rawq;}; rafe.ramt.raqs = rafe.rals.rafz();rafe.ramt.raqs.razk = function(razl) { raod = $(razl).children(raks); rawn = []; for (var rahs = 0; rahs < raod.length; rahs++) { var razm = $(raod[rahs]); rawn.push({ "ravt": razm.html(), "rafg": razm.attr("name"), "rahd": razm.attr("href"), "ralo": razm.attr("onclick"), "razn": razm.attr("data-unit"), "ravv": razm.attr("data-icon") }); } return rawn;};rafe.razo = function(num, decimal) { num = num.toString(); var index = num.indexOf('.'); if (index !== -1) { num = num.substring(0, decimal + index + 1); } else { num = num.substring(0); } return parseFloat(num).toFixed(decimal);};rafe.ramt.razq = rafe.rals.rafz();rafe.ramt.razq.prototype = { raqn: false, raqe: false, rafo: "", raga: function(rasy) { rahl = rasy.rafn(); if (rahl.hasClass(rafe.ramt.rafo.razq)) { this.rafo = rafe.ramt.rafo.razq; rahl.addClass("grid"); } if (rahl.hasClass(rafe.ramt.rafo.rakm)) { this.rafo = rafe.ramt.rafo.rakm; var razs = rahl.prev(); if (razs.length == 0) rahl.addClass("radk"); } var rawk = rafe.ramt.raqs.razk(rahl); rahl.html("<div class='radl'></div><em class='clearfix'></em>"); this.raqe = rahl.children("div").eq(0); var raln = rafe.razo(100 / rawk.length, 4) + "%"; for (var rahs = 0; rahs < rawk.length; rahs++) { rawk[rahs]["width"] = raln; rawk[rahs]["index"] = rahs; this.rahe(rawk[rahs]); } }, razt: function(raqs, cell) { cell.addClass("radm"); cell.append("<span class='radn'><em><label>" + raqs["ravt"] + "</label></em></span>"); var data = $("<span class='rado'></span>"); if (raqs["ravv"] != null) { data.append("<i class='i'>&nbsp;</i>"); cell.addClass("clean-grid-icon"); cell.find(".radn").prepend("<em class='i index-" + raqs["index"] + "'><i class='" + raqs["ravv"] + "'></i></em>"); } data.append("<label class='radq' name='" + raqs["rafg"] + "' >--</label><em>" + raqs["razn"] + "</em>"); cell.append(data); }, razv: function(raqs, cell) { if (raqs["ravt"] == "") { cell.append("<span class='rads'><span>"); return; } cell.append("<span class='radt'><em class='i index-" + raqs["index"] + "'><i class='" + raqs["ravv"] + "'></i></em></span>"); cell.append("<span class='radv'><em><label>" + raqs["ravt"] + "</label></em></span>"); }, rahe: function(raqs) { var action = raqs["rahd"]; var ralo = raqs["ralo"]; var panel = $("<a class='radw'></a>"); panel.css("width", raqs["width"]); if (raqs["index"] == 0) { panel.addClass("first"); } var cell = $("<div></div>"); if (action && action != "") { panel.attr("href", action); } if (ralo && ralo != "") { panel.attr("onclick", ralo); } if (this.rafo == rafe.ramt.rafo.razq) { this.razt(raqs, cell); } if (this.rafo == rafe.ramt.rafo.rakm) { this.razv(raqs, cell); } panel.append(cell); this.raqe.append(panel); }};rafe.ramt.rafo.razq = "rui-row-grid";raib.rahe(rafe.ramt.rafo.razq, rafe.ramt.razq);rafe.ramt.rafo.rakm = "rui-row-link";raib.rahe(rafe.ramt.rafo.rakm, rafe.ramt.razq);raib.raoz("rui.table.layout.item", function() { var widget = new rui.widget("rui.table.layout.item"); widget.reload = function() {}, widget.title = ""; widget.setLayout("<a class='rui-table-layout-item'><span><label>@{title}</label></span><span name='@{name}'>&nbsp;</span></a>"); return widget;});raib.raow("rui.table.layout", function() { var box = new rui.widget("rui.table.layout"); box.setJQRender(function(ths, model) { var table = $(ths.prop("outerHTML")).removeClass("rui-table-layout"); var main = $("<div class='rui-table-layout'></div>").addClass(table.attr("class")); if (ths.attr("data-title") != null) { main.append("<label class='rui-table-layout-title'>" + ths.attr("data-title") + "</label>"); } ths.replaceWith(main); main.append(table); var items = table.find("td"); for (var i = 0; i < items.length; i++) { var item = $(items[i]); var name = item.attr("data-name") ? item.attr("data-name") : item.attr("name"); var itemBox = false; var renderName = false; if (typeof name != "undefined") { renderName = item.attr("data-render") == null ? "rui.table.layout.item" : item.attr("data-render"); var itemBox = $("<div></div>"); itemBox.attr("title", item.html()); itemBox.attr("name", name); item.html("").append(itemBox); } else { itemBox = item.children().eq(0); renderName = itemBox.attr("data-render"); } if (renderName) { renderName = renderName.split("?")[0].replace(/\./g, "-"); item.removeAttr("data-name name data-render"); var ramt = rami.ramw.ramz(itemBox.attr("id") ? itemBox.attr("id") : null); var ranh = rafe.ranh(itemBox); var ranl =new raib.ranm[renderName](ranh, ramt); rami.ranb(ramt.ragm).ramq(ranl); } } return main; }); return box;});raib.raoz("rui.map", function() { var html = "<div class='rady' style='height:@{height}'></div>"; var map = new rui.widget("rui.map"); map.setPoint = function( lng,lat,zoom) { this.view.find(".rady").css("height", this.view.parent().height() + "px"); var mMapId = this.mapId; var timesamp = (new Date).getTime(); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t=" + timesamp, function(d) { var map = new BMap.Map(mMapId); var pt1 = new BMap.Point(lng, lat); map.centerAndZoom(pt1, zoom); $("#" + mMapId).css("background", "none"); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); }); }; mapId: false, map.setLayout(html, function(view, model) { this.mapId = this.view.attr("id") + "_handle"; this.view.find(".rady").attr("id", this.mapId); }); return map;});raib.raoz("rui.checkbox", function() { var rame = "<div class='radz' >" +"<input valuetype='@{valuetype}' type='hidden' name='@{name}' class='val' >" +"<a href='javascript:void(0);'><span><i class='fa fa-square-o'></i></span><span>@{title}</span></a></div>"; var razw = new rui.widget("rui.checkbox"); razw.razy=function(razz){ }; razw.change=function(rago){ razw.razy=rago; }; razw.checked=function(){ var raqo= this.view.find("a"); var rbaa=this.view.find(".val"); rbaa.val(1); var rahs=raqo.find("i"); raqo.addClass("checked"); rahs.removeClass("fa-square-o").addClass("fa-check-square"); razw.razy(true); }; razw.setLayout(rame, function(view, model) { var input=view.find(".val"); var valueType=input.attr("valuetype"); view.find("a").click(function(){ var raqo=$(this); var rahs=raqo.find("i"); if(raqo.hasClass("checked")){ raqo.removeClass("checked"); rahs.removeClass("fa-check-square").addClass("fa-square-o"); razw.razy(false); input.val(valueType=="bool"?"false":0); }else{ raqo.addClass("checked"); rahs.removeClass("fa-square-o").addClass("fa-check-square"); razw.razy(true); input.val(valueType=="bool"?"true":1); } }); }); return razw;});raib.raoz("rui.metro.input", function() { var widget = new rui.widget("rui.metro.input"); widget.setLayout("<a>Metro Input@{name}</a>"); return widget;});raib.raoz("rui.upload.excel", function() { var inputWidget = $("<span><a class='rui-ant-button'><i class='fa fa-plus'></i>上传</a></span>"); inputWidget.append("<span style='display:none;'><form><input accept='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel' name='file' type='file' class='raea'></form></span>"); var widget = new rui.widget("rui.upload.excel"); widget.input = false; widget.reload = function() {}, widget.url = false, widget.getUrl = function() { return widget.url; }, widget.callback = false; widget.getCallback = function() { return widget.callback; }; widget.setUpload = function(url, callback) { widget.url = url; widget.callback = callback; }; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { view.find(".raea").change(function() { if (widget.getUrl()) { var form = new FormData($(this).parent()[0]); $(this).val(""); $.ajax({ url: widget.getUrl(), type: 'POST', cache: false, data: form, processData: false, contentType: false, dataType: "json", success: function(data) { widget.getCallback(data); if (rafe.rasq["rui.upload.excel"] != null) { rafe.rasq["rui.upload.excel"](data); } } }); } else { var files = view.find(".raea").prop('files'); var reader = new FileReader(); reader.readAsDataURL(files[0]); reader.onload = function(e) { var base64 = this.result.substring(this.result.indexOf(',') + 1); widget.event("upload", base64); } } }); view.find("a").click(function() { view.find(".raea").click(); }); }); return widget;});if (rafe.raiw("table")) { rafe.rakm("com/jquery/datatables/css/jquery.dataTables.min.css"); rafe.raki("com/jquery/datatables/js/jquery.dataTables.min.js", function() {}); }rafe.ramt.rbab = {}; rafe.ramt.rbad = rafe.rals.rafz();rafe.ramt.rbad.prototype = { raol: false, ramo: false, rawq:false, showLoading:function(){ this.rawq.raww(); }, hideLoading:function(){ this.rawq.rawz(); }, raga: function(rasy, rbae) { this.ramo = rbae; this.raol = rasy.rafn(); this.raol.addClass(rami.ramk.ramm); this.rawq = rafe.rawt("rui-table", this.raol); this.rawq.rawz(); var rbaf = this.raol.attr("class"); rafe.ramt.rbab[rbae.ragm] = { rbag: this.raol.data(), rafl: [], rbah: function(rbai) { if (rbai < this.rafl.length) { return this.rafl[rbai]; } else return {}; }, rbak: function(rawi) { this.rafl.push(rawi); }, setting: function(name, value) { if (value == null) { return this.rbag[name]; } else { this.rbag[name] = value; } } }; this.raol.addClass("raeb table table-striped simple") .attr("id", rbae.ragm); var rbal = $("<tbody></tbody>"); this.raol.append(rbal); var raqz = this.raol.find("th"); var rbam = []; for (var rahs = 0; rahs < raqz.length; rahs++) { var rban = $(raqz[rahs]); var rahw = { "name": rban.attr("data-name") }; rahw["rbao"] = rban.attr("data-table-render") == null ? "" : rban.attr("data-table-render"); rahw["label"] = rban.text(); rahw["render"] = function(rafl, rafo, rbaq, rbas) { var rbat = rafe.ramt.rbab[rbae.ragm].columns[rbas.col]; if (rbat["rbao"] == "") { return "<span name='" + rbat["name"] + "' data-render='rui.text'></span>" } else { var rbav=rbat["rbao"].split("?"); var rawi="<input name='" + rbat["name"] + "' data-render='" +rbav[0] +"'"; if(rbav.length>1){ var strs = decodeURI(rbav[1]).split("&"); for (var raqv = 0; raqv < strs.length; raqv++) { var rbaw=strs[raqv].split("="); rawi+="data-"+rbaw[0]+"='"+rbaw[1]+"' "; if(rbaw[0]=="title"){ rawi+=rbaw[0]+"='"+rbaw[1]+"' "; } } } return rawi+" >"; } }; rbam.push(rahw); } rafe.ramt.rbab[rbae.ragm].columns = rbam; if (rui.client.os("mobile")) { this.rbay(); this.raol.addClass(rbaf); } else { var rbag = rafe.ramt.rbad.rbaz(rbae.ragm); this.raol.DataTable(rbag); this.raol.parent().addClass(rbaf); if (rafe.ramt.rbab[rbae.ragm].setting("mode") == "ajax") { var rbba = this.raol.parent().find(".dataTables_paginate"); rbba.before("<div class='raed'>跳至<input class='raee' value=1>页</div>"); this.raol.parent().find(".raee").attr("target", rbae.ragm).bind("keyup", function() { $(this).val($(this).val().replace(/[\D]/g, "")); rui("#" + $(this).attr("target")).widget().page($(this).val()); }); this.raol.parent().find(".dataTables_length").insertBefore(rbba); } else { this.raol.parent().find(".dataTables_length").hide(); } } }, page: function(val) { if (Number(val) == 0) { val = 1; $(this).val(1); } var number = Number(val) - 1; this.raol.DataTable().page(number).draw(false); }, get: function(rama) { if (rama == null) rama = -1; var rawe = this.raol.find(rui.client.os("mobile") ? ".raef" : "tbody tr"); var rawn = []; for (var rahs = 0; rahs < rawe.length; rahs++) { var raqs = {}; var rbbb = $(rawe[rahs]).find("[name]"); for (var raqv = 0; raqv < rbbb.length; raqv++) { var rbbd = $(rbbb[raqv]); raqs[rbbd.attr("name")] = rbbd.val(); } rbbe={}; $.extend(rbbe, raqs); if (rahs == rama) { return rbbe; } rawn.push(rbbe); } return rawn; }, data:function(){ var rawe = this.raol.find(rui.client.os("mobile") ? ".raef" : "tbody tr"); var rawn = []; for (var rahs = 0; rahs < rawe.length; rahs++) { var raqs = {}; var rbbb = $(rawe[rahs]).find("[name]"); for (var raqv = 0; raqv < rbbb.length; raqv++) { var rbbd = $(rbbb[raqv]); raqs[rbbd.attr("name")] = rbbd.html(); } rawn.push(raqs); } return rawn; }, removeControl:function(){ this.raol.parent().find(".dataTables_length,.dataTables_paginate,.dataTables_info").remove(); }, set: function(list) { rafe.ramt.rbab[this.ramo.ragm].rafl=[]; this.raol.DataTable().clear().draw(); for (var i = 0; i < list.length; i++) { this.append(list[i]); } }, getTh: function() { var rbbf=this.raol.find("thead th"); var rbbg={}; for (var rahs = 0; rahs < rbbf.length; rahs++) { var raqs=$(rbbf[rahs]); rbbg[raqs.attr("data-name")]=raqs.html(); } return rbbg; }, appends:function(ds){ for(var i=0;i<ds.length;i++){ this.append(ds[i]); } }, append: function(data) { rafe.ramt.rbab[this.ramo.ragm].rbak(data); if (rui.client.os("mobile")) { var raqs = this.rbbh(this.raol.find(".raef").length); this.raol.find(".raeg").append(raqs); this.rbbi(raqs, data); } else this.raol.DataTable().row.add(data).draw(false); }, remove:function(index){ this.raol.DataTable().rows( '.index-'+index ) .remove() .draw(); }, row:function(index){ return { row: this.raol.find( '.index-'+index ), child:function(html,fun){ rbbk= this.row.children("td").length; this.row.after("<tr class='table-child-"+index+" content'><td colspan='"+rbbk+"'>"+html+"</td></tr>"); }, showChild:function(){ this.row.parent().find(".table-child-"+index).show(); }, hideChild:function(){ this.row.parent().find(".table-child-"+index).hide(); } }; }, refresh: function() { this.raol.DataTable().reload(); }, setRowRender: function(fun) { rafe.ramt.rbab[this.ramo.ragm].setting("rowRender", fun); }, postBody: function(url, params, callback) { var ragm = this.ramo.ragm; rafe.ramt.rbab[ragm].setting("url", url); rafe.ramt.rbab[ragm].setting("params", params); rafe.ramt.rbab[ragm].setting("rbbltype_", "raw"); rafe.ramt.rbab[ragm].setting("ajaxCallBack", callback); if (rui.client.os("mobile")) { this.rbbm(); }else{ this.raol.DataTable().ajax.reload(); } }, ajax: function(url, params, callback) { var ragm = this.ramo.ragm; rafe.ramt.rbab[ragm].setting("url", url); if (typeof params == "function") { callback = params; } else { rafe.ramt.rbab[ragm].setting("params", params); } if (callback != null) { rafe.ramt.rbab[ragm].setting("ajaxCallBack", callback); } if (rui.client.os("mobile")) { this.rbbm(); } else { this.raol.DataTable().draw(false); } }};raib.rahe("rui-table", rafe.ramt.rbad);rafe.ramt.rbad.prototype.refresh = function(panelSelector) { var rbad = rami.ranb(this.ramo.ragm).ralz(); var rbbn = rafe.ramt.rbab[this.ramo.ragm]; var rbbo = rbbn.setting("params") ? rbbn.setting("params") : {}; rbbn.setting("params", rbbo); if (rui.client.os("mobile")) { this.rbbm(); } else { rbad.raol.DataTable().draw(false); }};rafe.ramt.rbad.prototype.rowClickListener = false;rafe.ramt.rbad.prototype.setRowClickListener = function(fun) { rowClickListener = fun; var widget = $("#" + this.ramo.ragm); widget.find(rui.client.os("mobile") ? ".raef" : "tbody").on('click', rui.client.os("mobile") ? "div" : "tr", function() { $(this).parent().find(".active").removeClass("active"); $(this).addClass("active"); fun($(this).attr("data-index"), $(this)); }); }; rafe.ramt.rbad.prototype.rowAppend = function(rama,trHTML) { var widget = $("#" + this.ramo.ragm); widget.find("tbody tr").eq(rama).after(trHTML); }; rafe.ramt.rbad.prototype.rbay = function() { var rbbq = $("<div><div class='raeg'></div></div>").attr("id",this.ramo.ragm); var rbbs = $("<a class='raeh'>点击加载更多</a>").attr("target", this.ramo.ragm); rbbs.click(function() { var rbbt = $(this).attr("target"); var rbbo = rafe.ramt.rbab[rbbt].setting("params"); if (rbbo == null) { rbbo = {}; } var rail = rbbo["start"]; if (rail == null) { rbbo["start"] = 1; } else { rbbo["start"] = Number(rail) + 1; } rafe.ramt.rbab[rbbt].setting("params", rbbo); rui("#" + rbbt).widget().rbbm(); }); if (rafe.ramt.rbab[this.ramo.ragm].setting("mode") == "ajax") { rbbq.append(rbbs); } this.raol.replaceWith(rbbq); this.raol=$("#"+this.ramo.ragm); };rafe.ramt.rbad.prototype.rbbm = function() { var rbbt=this.ramo.ragm; var rbad = rafe.ramt.rbab[ rbbt]; var rafl = rbad.setting("params") ? rbad.setting("params") : {}; if (rafl["start"] == null) rafl["start"] = 0; var raho = this; if (!rbad.setting("url")) { return; } var rbbv = rbad.setting("rbbltype_"); $.ajax({ type: 'post', cache: false, dataType: 'json', contentType: 'application/json', data: rbbv ? JSON.stringify(rafl) : rafl, url: rbad.setting("url"), success: function(rags) { if (rags.data.length == 0) { $(".raeh").addClass("nodata").html("没有更多数据了~~"); } if (rafl["start"] == 0) { raho.raol.find(".raeg").html(""); } for (var rahs = 0; rahs < rags.data.length; rahs++) { var rbbw = rags.data[rahs]; if (rbad.setting("rowRender")) { rbbw = rbad.setting("rowRender")(rags); } rafe.ramt.rbab[raho.ramo.ragm].rbak(rbbw); rags.data[rahs]["_rui_index"] = rahs; var rawi = raho.rbbh($("#" + raho.ramo.ragm).find(".raef").length); raho.raol.find(".raeg").append(rawi); raho.rbbi(rawi, rags.data[rahs]); raid = rami.ranb(rbbt).ralz(); var rant = $(rawi).attr("data-index", rahs).addClass("index-"+ rahs).find("[data-render]"); if (raid.rowClickListener) { $(rawi).unbind("click").on('click', 'tr', function() { raid.rowClickListener($(this).attr("data-index"), $(this)); }); } } if (rbad.setting("ajaxCallBack")) { rbad.setting("ajaxCallBack")(rags); } }, error: function() {} });};rafe.ramt.rbad.prototype.rbbi = function(rawi, rafl) { var rant = rawi.find("[data-render]"); for (rahs = 0; rahs < rant.length; rahs++) { var obj = $(rant[rahs]); var render = obj.attr("data-render"); var renderName = render.split("?")[0]; renderName = renderName.replace(/\./g, "-"); var ramt = rami.ramw.ramz(obj.attr("id")); ramt.data = {}; if (render.split("?").length > 1) { ramt.raka = render.split("?")[1]; } var ranh = rafe.ranh(obj); if (raib.ranm[renderName] == null) { obj.html("未配置:" + renderName); } else { var ranl = new raib.ranm[renderName](ranh, ramt); ranl.set(rafl); rami.ranb(ramt.ragm).ramq(ranl); } } };rafe.ramt.rbad.prototype.rbbh = function(rama) { var rbby = rafe.ramt.rbab[this.ramo.ragm].columns; var rawi = $("<div></div>").addClass("raef").attr("data-index", rama); if (this.rowClickListener) { rawi.unbind("click").click(function() { this.rowClickListener($(this).attr("data-index"), $(this)); }); } for (var rahs = 0; rahs < rbby.length; rahs++) { var rbbz = rbby[rahs]; if (rbbz["rbao"] == "") rbbz["rbao"] = "rui.text"; var rbda = $("<div class='raei'><span class='raek'><label>" + rbbz["label"] + "</label></span></div>"); var ranl = $("<span class='rael'><input name='" + rbbz["name"] + "' data-render='" + rbbz["rbao"] + "'></span>"); rbda.append(ranl); rawi.append(rbda); } return rawi;};rafe.ramt.rbad.rbaz = function(rbbt) { var rbdb = function(raqk, rbdd) { if (rbdd) { return rbdb(raqk) == rbdd; } else { return rafe.ramt.rbab[rbbt].setting(raqk); } }; var rbag = { "searchDelay": 3600, "autoWidth": false, "orderMulti": true, "processing": true, "destroy": true, "pagingType": "full_numbers", "ruiDrawCount": 0, "drawCallback": function(settings) {} }; rbag["language"] = { "lengthMenu": " _MENU_条/页", "-zeroRecords": "没有找到记录", "zeroRecords": "&nbsp;", "info": "共 <span class='totaldis'>_TOTAL_ </span>条记录", "infoEmpty": "无记录", "infoFiltered": "", "search": "", "processing": "<a class='rui-table-loading'>正在加载数据,请稍后...</a>", "paginate": { "first": "<i class='fa fa-angle-double-left'></i>", "previous": "<i class='fa fa-angle-left'></i>", "next": "<i class='fa fa-angle-right'></i>", "last": "<i class='fa fa-angle-double-right'></i>", "paginate": "<span class='btn-pager'>末页</span>" } }; rbag["columns"] = rafe.ramt.rbab[rbbt].columns; rbag["serverSide"] = rbdb("mode", "ajax"); rbag["paging"] == !rbdb("page", "disabled"); if (rbdb("length")) { disLength = rbdb("length"); } else if (rbdb("mode") == "ajax") { disLength = 12 } else { disLength = 100000; } rbag["lengthMenu"] = [disLength, 25, 50]; rbag["ordering"] = rbdb("order", "enabled"); if (rbdb("unsort")) { var columnDefs = []; var disColumsNumbers = rbdb("unsort").split(","); for (var i = 0; i < disColumsNumbers.length; i++) { columnDefs.push({ "orderable": false, "targets": disColumsNumbers[i] }) } setting["columnDefs"] = columnDefs; } rbag["createdRow"] = function(row, data, index) { data["_rui_index"] = index; data["getIndex"] =function(){ return index; }; data["index"] = index + 1; raid = rami.ranb(rbbt).ralz(); if (rbdb("rowRender")) { data = rbdb("rowRender")(data); } var rant = $(row).attr("data-index", index).addClass("index-"+index).find("[data-render]"); if (raid.rowClickListener) { $(row).unbind("click").on('click', 'tr', function() { raid.rowClickListener($(this).attr("data-index"), $(this)); }); } for (rahs = 0; rahs < rant.length; rahs++) { var obj = $(rant[rahs]); var render = obj.attr("data-render"); var renderName = render.split("?")[0]; renderName = renderName.replace(/\./g, "-"); var ramt = rami.ramw.ramz(obj.attr("id")); ramt.data = data; var ranh = rafe.ranh(obj); if (raib.ranm[renderName] == null) { obj.html("未配置:" + renderName); } else { var ranl = new raib.ranm[renderName](ranh, ramt); ranl.set(data); rami.ranb(ramt.ragm).ramq(ranl); } } }; rbag["ajax"] = function(data, callback, settings) { if (rbdb("url")) { var rafl = rbdb("params") ? rbdb("params") : {}; rafl = $.extend(data, rafl); var rbbv = rbdb("rbbltype_"); $.ajax({ type: 'post', cache: false, dataType: 'json', contentType: 'application/json', data: rbbv ? JSON.stringify(rafl) : rafl, url: rbdb("url"), success: function(rags) { callback(rags); rafe.ramt.rbab[rbbt].rafl = rags["data"]; if (rbdb("ajaxCallBack")) { rbdb("ajaxCallBack")(rags); } $(".rui-table-" + rbbt).removeClass("fa-spin"); }, error: function() {} }); } else { if (typeof this.ruiTableVDrawCount == "undefined") { this.ruiTableVDrawCount = 1; } this.ruiTableVDrawCount++; var res = {}; res["draw"] = this.ruiTableVDrawCount; res["iTotalRecords"] = 0; res["length"] = 0; res["recordsFiltered"] = 0; res["recordsTotal"] = 0; res["data"] = []; callback(res); } }; return rbag;};rafe.ramt.rbad.prototype.appendToPanel = function(panelSelector) { if (rui.client.os("mobile")) return; var rbad = rami.ranb(this.ramo.ragm).ralz(); var rbde = $(panelSelector).find(".rabs"); var rbdf = $("<a href='javascript:void(0);'><i class='rui-table-" + rbad.ramo.ragm + " fa fa-refresh'></i>刷新</a>"); rbde.append(rbdf); rbdf.unbind("click").click(function() { $(this).find(".fa-refresh").addClass("fa-spin"); rbad.refresh(); }); };raib.raoz("rui.table.link", function() { var widget = new rui.widget("rui.table.link"); widget.reload = function() {}; widget.setLayout( "<a class='rui-table-link-pri' target='_blank' href='@{href}?@{name}={@{name}}' >查看&nbsp;<i class='fa fa-angle-double-right'></i></a>", function(view) { view.addClass("rui-table-link"); if(rui.client.os("mobile")){ view.find(".rui-table-link-pri").addClass("rui-ant-button primary") .removeClass("rui-table-link-pri"); } }); return widget;});raib.raoz("rui.table.datalink", function() { var widget = new rui.widget("rui.table.datalink"); widget.reload = function() {}; widget.setLayout( "<a class='rui-table-link value-{@{name}}' rui-javascript='@{javascript}' rui-args='@{args}' target='_blank' href='@{href}?@{name}={@{name}}' ><font label='@{label}' name='@{name}'></font></a>", function(view,predata) { view = view.children("a").eq(0); var label = view.find("font"); var icon=predata["icon"]; if (label.attr("label") != "undefined" && !(label.attr("label") + "").has('{')) { label.html(label.attr("label")).removeAttr("name"); if(icon){ if(icon=="dialog"){ label.prepend("<i class='fa fa-clone'>"); label.append("&nbsp;"); }else{ label.append("&nbsp;"); label.append("<i class='fa fa-angle-double-right'>"); } } } var arg = view.attr("rui-args"); var js = view.attr("rui-javascript"); if (arg != null && js != null) { var args = arg.split(","); js = "javascript:" + js + "('"; for (var i = 0; i < args.length; i++) { js += args[i] + "','"; } js += "0');"; view.attr("href", js); view.removeAttr("target"); view.unbind("click").click(function() { if ($(this).hasClass("value-0")) { return false; } }); } }); return widget;}); rui("widget.extends",function(){ var ruiExtendsNavbar=new rui.widget("rui.navbar"); ruiExtendsNavbar.setJQRender(function(jqObject,model){ var initAS=jqObject.children("a"); jqObject.children("a").remove(); var tmp=jqObject.html(); var link={}; var lineLen=0; for(var i=0;i<initAS.length;i++){ lineLen++; var initA=$(initAS[i]); link["line"+i]={"title":initA.html(),"href":initA.attr("href")?initA.attr("href"):"javascript:void(0);"}; } var rbdg=$("<div><span class=\"rui-menu-control\">"+ "<a class=\"rui-open-menu-control\"><i class=\"fa fa-outdent close\" ></i><i class=\"fa fa-indent open\"></i></a>"+ "</span></div>"); jqObject.html(rbdg); jqObject.append(tmp); var linkHTML=$("<span></span>").addClass("ronri-rais-profile-msg"); var index=0; for(var name in link ){ index++; var rbdh=(index<lineLen)?"<i class=\"dot\">/</i>":""; var rbdi=(index==lineLen)?"active":""; linkHTML.append("<a class='"+rbdi+"' href='"+link[name].href+"'>"+link[name].title+rbdh+"</a>"); } rbdg.append(linkHTML); var rbdk=$("<span class=\"rui-navbar-control-pri\"><a href='javascrpit:void(0);'><i class='fa fa-chevron-left'></i>&nbsp;返回</a></span>"); rbdk.click(function(){ mHeader.back(); }); rbdg.find(".rui-menu-control").click(function(){ model.getWidget().event("changeMenu"); }); }); return ruiExtendsNavbar;}); rui("widget.extends",function(){ var ronriRaisProfile= new rui.widget("ronri.rais.profile"); ronriRaisProfile.setJQRender(function(jqObject,value){ var initAS=jqObject.children("a"); var messages={}; var messagesLen=0; for(var i=0;i<initAS.length;i++){ messagesLen++; var initA=$(initAS[i]); messages[initA.attr("name")?initA.attr("name"):initA.attr("data-name")]={"title":initA.html(),"href":initA.attr("href")?initA.attr("href"):"javascript:void(0);"}; } var userHTML=$("<span>"+ "<p class='h2'>欢迎您! <font name='user_nickname'>--</font></p>"+ "<p>上次登录于<font name='last_login_time'>--</font></p>"+ "</span>"); jqObject.html(userHTML); var msgHTML=$("<span></span>").addClass("ronri-rais-profile-msg"); var index=0; for(var name in messages ){ index++; var rbdl=(index==messagesLen)?"last":""; msgHTML.append("<a href='"+messages[name].href+"'><label>"+messages[name].title+"</label><em class='"+rbdl+"' name='"+name+"' >--</em></a>") } jqObject.append(msgHTML); if(jqObject.parent().hasClass("rui-navbar")){ jqObject.parent().addClass("ronri-rais-profile-group"); } return jqObject; }); return ronriRaisProfile;});var baiduMapTheme = [ { "featureType": "background", "elementType": "all", "stylers": { "color": "#ffffff", } } ];function ComplexCustomOverlay(point,data){ this._point = point; this.data=data; }rui("widget.extends",function(){ var html="<div class='raem' style='height:@{height}'></div>"; var map= new rui.widget("rui.areamap"); map.setAgrisAreaPoints=function(areas,onclick){ var legs=$("<div class='raen'></div>"); for (var i = 0; i < areas.length; i++) { var area=areas[i]; var link=$("<a href='javascript:void(0);' data='"+area.code+"'><i style='background-color:"+area.fillcolor+"'></i>"+area["name"]+"<span>"+area["count"]+"家</span></a>"); link.click(function(){ onclick($(this).attr("data")); }); legs.append(link); } this.view.append(legs); var mMapId=this.mapId; var timesamp=(new Date).getTime(); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t="+timesamp,function(d){ ComplexCustomOverlay.prototype = new BMap.Overlay(); ComplexCustomOverlay.prototype.initialize = function(iMap){ this._map = iMap; var span=this._span=document.createElement("span"); $(span).css({ 'position':'absolute', 'zIndex':BMap.Overlay.getZIndex(this._point.lat), 'display':'block', 'width':'100px', 'color':'#fff', 'text-shadow':'3px 2px 4px #000', 'text-align':'center', 'font-size':'12px', 'cursor':'pointer'}); this._span.innerHTML=this.data.name+"<br><font style='font-size:16px;margin-top:2px;'>"+this.data.count+"</font>"; iMap.getPanes().labelPane.appendChild(span); var tag=this.data; $(span).click(function(){ onclick(tag.code); }); return span; }; ComplexCustomOverlay.prototype.draw = function(){ var pixel = this._map.pointToOverlayPixel(this._point); this._span.style.left = pixel.x - 50+'px'; this._span.style.top = pixel.y -14+'px'; }; BMap.Polygon.prototype.tags={}; var map = new BMap.Map(mMapId); var zoom =7; var pt1 =new BMap.Point(119.981362,31.815842); map.centerAndZoom(pt1, zoom); $("#"+mMapId).css("background","none"); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); var pointArray = []; var colors=["","","","","","","","",""]; for (var i = 0; i < areas.length; i++) { var area=areas[i]; var ply = new BMap.Polygon(area.region_area, {strokeWeight:1, strokeColor: area.fillcolor, strokeOpacity:1,fillOpacity:1, fillColor: area.fillcolor}); ply.tags=area.code; ply.addEventListener('click', function (e) { onclick(e.target.tags); }); map.addOverlay(ply); var points=area.region_area.split(";"); for(var p=0;p<points.length;p++){ var point=(points[p]+"").split(","); if(point.length>1){ pointArray.push(new BMap.Point(Number(point[0]),Number(point[1]))); } } var myCompOverlay = new ComplexCustomOverlay(new BMap.Point(Number(area.longitude),Number(area.latitude)),area); map.addOverlay(myCompOverlay); } map.setViewport(pointArray); }); }; mapId:false, map.setLayout(html, function(view,model){ this.mapId=this.view.attr("id")+"_handle"; this.view.find(".raem").attr("id",this.mapId); }); return map;});rui("widget.extends",function(){ var widget=new rui.widget("rui-agris-table-region"); widget.reload=function(){ var regionCode=this.view.find("input").val(); rui.agris.regionBindView(this.view,regionCode,true); }; widget.setLayout("<input type='hidden' name='@{name}'>",function(view){ view.addClass("rui-table-inline"); }); return widget;}); rui("widget.extends",function(){ var widget=new rui.widget("rui-agris-table-region_short"); widget.reload=function(){ var regionCode=this.view.find("input").val(); rui.agris.regionBindView(this.view,regionCode,false); }; widget.setLayout("<input type='hidden' name='@{name}'>",function(view){ }); return widget;}); rui.agris={}; rui.agris.gRegion={};rui.agris.regions=[];rui.agris.region=function(code){ var instance= { code:"32", name:"江苏省", lng:"118.750220", lat:"32.065468", zoom:7, get:function(costomCode){ var ls=rui.agris.regions; for(var i=0;i<ls.length;i++){ var item=ls[i]; if(item["c"]==code&&costomCode==null){ this.code=item["c"]; this.name=item["n"]; }else if(item["c"]== costomCode){ return {"code":item["c"],"name":item["n"]}; } } }, parents:function(){ var list=[]; var code=this.code+""; for(var i=2;i<14;i=i+2) { if(i<=code.length){ var pCode=code.substring(0,i); if(this.get(pCode)!=null) list.push(this.get(pCode)); } } return list; }, path:function(sp){ var labs=""; if(sp==null)sp="/"; var pars=this.parents(); for(var i=0;i<pars.length-1;i++){ labs+=pars[i]["name"]+sp; } return labs+=this.name; }, children:function(){ var ls=rui.agris.regions; var rs=[]; for(var i=0;i<ls.length;i++){ var item=ls[i]; if(item["p"]==this.code&&(""+item["p"]).length<12){ rs.push(item); } } return rs; }, bind:function(id){ app.region.bindData(id,this.children() ); }, parse:function(jqView){ } }; instance.get(); return instance; }; rui.agris.regionBindView=function(view, code,isfull ){ var city=code.length>2?code.substring(0,4):code; var loadRegionsComp=function(){ var labs=""; if(code=="self"){ view.html("本级");return; } if(code=="sum"){ view.html("合计");return; } if(isfull){ if(code.length>=4){ labs+=rui.agris.region(code.substring(0,4)).name } if(code.length>=6){ labs+="»"+rui.agris.region(code.substring(0,6)).name } if(code.length>=8){ labs+="»"+rui.agris.region(code.substring(0,8)).name } if(code.length>=10){ labs+="»"+rui.agris.region(code).name } }else labs+= rui.agris.region(code).name; if(view.is("input"))view.val(labs); else view.html(labs); view.attr("title",labs); }; if(rui.agris.gRegion[city+""]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } };rui.agris.pushRegionApi=function(code){ return "/trace/dict/push_city_to_gRegion/"+code+".js";};rui.agris.parseRegion=function(code, callback ){ rui.agris.parseRegionPath(code,callback,true); };rui.agris.parseRegionPath=function(code, callback,nameOnly ){ var city=code.length>2?code.substring(0,4):code; var loadRegionsComp=function(){ callback(nameOnly==null?rui.agris.region(code).path("-"):rui.agris.region(code).name); }; if(rui.agris.gRegion[city+""]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } }; rafe.rakm("com/jquery/drppicker/drppicker.min.css");rafe.raki("com/jquery/drppicker/drppicker.min.js");if (rafe.raiw("tree")) { rafe.rakm("cn/treejs/release/zTree_v3/css/zTreeStyle/zTreeStyle.css", JSLoader.packageRoot()); rafe.raki("cn/treejs/release/zTree_v3/js/jquery.ztree.core.min.js", function() {}, JSLoader.packageRoot()); rui("widget.extends", function() { var widget = new rui.widget("rui.ant.tree"); widget.tree = false; widget.clickListener = function(d) { console.log(d); }; widget.setClickListener = function(fun) { widget.clickListener = fun; }; widget.reload = function(data) { var jsonVal=data[this.predata["name"]]; var json =typeof jsonVal =="object"?jsonVal: $.parseJSON(jsonVal); widget.tree = $("<div class='ztree'></div>").attr("id", "tree_" + this.predata["name"]); widget.view.html(""); widget.view.append(widget.tree); var setting = { data: { simpleData: { enable: true } }, callback: { onClick: function(event, id, item, c) { if (widget.clickListener) { widget.clickListener({"value":item["id"],"parent":item["pId"],"text":item["name"]}); } } } }; var zNodes = []; var appendItem = function(item) { zNodes.push({ "id": item["value"], "pId": item["parent"], "name": item["text"] }); if (item["items"]&&item["items"].length > 0) { for (i = 0; i < item["items"].length; i++) { appendItem(item["items"][i]); } } }; for (i = 0; i < json.length; i++) { appendItem(json[i]); } $.fn.zTree.init(widget.tree, setting, zNodes); }, widget.setLayout("<div><textarea id='@{id}' name='@{name}' style='display:none;'></textarea></div>", function(view) { }); return widget; });}rafe.rakm("com/jquery/css/jquery-ui.min.css");rafe.rakm("com/jquery/css/jquery-ui-timepicker-addon.css");rafe.raki("com/jquery/jquery-ui.min.js", function() { rafe.raki("com/jquery/jquery-ui-timepicker-addon.js"); var regional_zh = { closeText: '关闭', prevText: '<上月', nextText: '下月>', currentText: '今天', monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月' ], monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12' ], dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'], dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'], dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'], weekHeader: '周', dateFormat: 'yy-mm-dd', firstDay: 1, isRTL: false, showMonthAfterYear: true, changeYear: true, changeMonth: true, yearSuffix: '', yearRange:'c-5:c' }; if ($.datepicker != null) { $.datepicker.setDefaults(regional_zh); }}); rui("widget.extends", function() { var widget = new rui.widget("rui.text"); widget.reload = function() { var span= this.view.find("span"); span.attr("title",span.html()); }, widget.title = ""; widget.setLayout("<span data-name='@{name}' name='@{name}'></span>", function(view) { if (this.getParam("float") == "right") { view.css("float", "right"); } }); return widget;}); rui("widget.extends", function() { var widget = new rui.widget("rui.ant.ratebar"); widget.reload = function(data) { }, widget.setLayout("<a class='rui-table-layout-item rui-ant-ratebar'><input type='hidden' id='val_@{name}' name='@{name}' ><span><label>@{text}</label></span><span><div id='bar_@{name}'></div></span><span name='@{name}'>--</span>%</a>", function(view,predata) { $( "#val_"+predata["name"] ).change(function(){ $( "#bar_"+predata["name"] ).progressbar({ value: Number($(this).val())}); }); }); return widget;});rui("widget.extends", function() { var form = new rui.widget("rui.ant.form"); form.data = function() { return {}; }; form.submitFun = function(data) { console.log(data); }; form.submit = function(fun, data) { if (data != null) { this.view.find(".primary").click(); } else form.submitFun = fun; }; form.setSubmitButtonLabel=function(title){ this.view.find(".primary").html("<label>"+title+"</label>"); }; form.shrink = function() { this.view.addClass("rui-ant-form-shrink"); var inputs = this.view.find("div."+rami.ramk.ramm); for (var i = 3; i < inputs.length; i++) { $(inputs[i]).hide(); } }; form.open = function() { this.view.removeClass("rui-ant-form-shrink"); var inputs = this.view.find("div."+rami.ramk.ramm); for (var i = 3; i < inputs.length; i++) { $(inputs[i]).show(); } }; form.resetParams = {}; form.init = function(data) { this.resetParams = data; rui("#" + form.ramo.id).widget().set(data); form.resetParams = rui("#" + form.ramo.id).widget().get(); }; form.showLoading = function() { var ragt = $("#" + form.ramo.id); var rawb = ragt.find(".raeo"); rawb.find("i").show().addClass("fa-spinner"); }; form.hideLoading = function() { var ragt = $("#" + form.ramo.id); var rawb = ragt.find(".raeo"); rawb.find("i").hide().removeClass("fa-spinner"); }; form.processButton = function(title, isCheckRequired) { var btn = $("<a class='rui-ant-button primary raeo'><i class='fa fa-pulse' style='margin-right:4px'></i><label>" + title + "</label></a>"); btn.find("i").hide(); btn.click(function() { var data = form.ramo.getWidget().get(); if (isCheckRequired) { var isSubmit = true; for (var key in data) { var item = form.view.find("[name='" + key + "']"); if (item.attr("data-role") != "required") continue; var widget = rui("#" + item.attr("target")).widget(); if (item.val() == "" || item.val() == null) { widget.event("error"); isSubmit = false; } if(widget.event("check")==false){ isSubmit = false; } } form.submitFun(isSubmit ? data : false); } else { form.submitFun(data); } }); return btn; }; form.loginForm = function(jqObject) { var raze = $("<div class='rui-mtb'></div>"); raze.css("text-align", "center"); raze.append(form.processButton("立即登录", true)); jqObject.append(raze); }; form.filterForm = function(jqObject) { var filterOpt = $("<div class='rui-ant-filter-buttons'></div>"); filterOpt.append(form.processButton("查询", false)); var resetBtn = $("<a class='rui-ant-button'><label>重置</label></a>"); resetBtn.attr("target", this.ramo.id) .click(function() { rui("#" + $(this).attr("target")).widget().set(form.resetParams); }); filterOpt.append(resetBtn); var showBtn = $("<a><i class='fa fa-chevron-down'></i><label>展开</label></a>"); showBtn.attr("target", this.ramo.id); showBtn.click(function() { var ths = $(this); var wdg = rui("#" + ths.attr("target")).widget(); if (ths.hasClass("open")) { ths.removeClass("open"); ths.html("<i class='fa fa-chevron-down'></i><label>展开</label>"); wdg.event("shrink"); } else { ths.addClass("open"); wdg.event("open"); ths.html("<i class='fa fa-chevron-up'></i><label>收起</label>"); } }); filterOpt.append(showBtn); jqObject.append(filterOpt); }; form.defaultForm = function(jqObject) { var bottom = $("<div ></div>"); jqObject.append(bottom); bottom.append(form.processButton("提交", true)); bottom.css("text-align", "center"); }; form.setJQRender(function(jqObject, model) { var type = jqObject.attr("data-type"); jqObject.addClass(type); if (type == "login") { this.loginForm(jqObject); } else if (type == "filter") { this.filterForm(jqObject); } else { this.defaultForm(jqObject); } return jqObject; }); return form;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span class='raes'><input class='handler' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.input"); widget.reload = function() {}, widget.extend=function(type){ var parent=this.view.find(".raes"); var mSelect= $("<select class='raet'></select>"); parent.append(mSelect); return { select:mSelect, append:function(text,value){ this.select.append("<option value='"+value+"'>"+text+"</option>"); }}; }; widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view,predata) { if(predata["hint"]!=null){ view.find(".handler").attr("placeholder",predata["hint"]); } if(this.predata["icon"]!=null){ view.find(".handler").addClass("input-icon").after("<i class='"+this.predata["icon"]+"'></i>"); } if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' placeholder='请输入正整数' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'><em class='rui-ant-input-unit'>@{after}</em></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.int"); widget.limit=function(limit){ widget.view.find("input").attr("maxlength",limit); }; widget.reload = function() {}, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;}); rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' maxlength='11' placeholder='请输入11位手机号' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.mobile"); widget.reload = function() {}, widget.check=function(){ var input= widget.view.find("input"); var msg=""; if(input.val().length!=11){ msg="请输入手机号码长度不正确"; } if(input.val()==""){ msg="手机号码不能为空"; } if(msg!=""){ return rui.antInputErrBind(this.view,msg); } return true; }, widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui.antInputErrBind=function(view,msg){ view.find(".error-label").remove(); view.addClass("rui-ant-input-error"); view.append("<span class='error-label'>"+msg+"</span>"); view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); return false;};rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' maxlength='4' placeholder='请输入4位验证码' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'><em class='rui-ant-input-unit'><a>获取验证码</a></em></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.getcode"); widget.reload = function() {}, widget.check=function(){ var input= widget.view.find("input"); var msg=""; if(input.val().length!=4){ msg="验证码长度有误"; } if(input.val()==""){ msg="验证码不能为空"; } if(msg!=""){ return rui.antInputErrBind(this.view,msg); } return true; }, widget.sendCodeFun=false; widget.sendCode=function(fun){ widget.sendCodeFun=fun; }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { this.view.find("a").attr("href","javascript:void(0)").click(function(){ var t=$(this); if(t.hasClass("disabled")){return ; } t.addClass("disabled"); t.html(60); if(widget.sendCodeFun)widget.sendCodeFun(); var handle=setInterval(function(){ t.html(Number(t.html())-1); if(t.html()=="1"){ clearInterval(handle); t.html("获取验证码"); t.removeClass("disabled"); } },1000); }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input type='number' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.number"); widget.reload = function() {}, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.date"); widget.reload = function(data) { this.find("input").datepicker("setDate", data[this.predata["name"]]); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var target = this.view.find("input"); var format = typeof this.predata.format == "undefined" ? "yy-mm-dd" : this.predata.format; if (format.has(":")) { target.datetimepicker({ controlType: 'select', oneLine: true, timeFormat: format }); } else { target.datepicker({ dateFormat: format,    onClose: function(selectedDate) {}   }); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input class='date begin' name='begin_@{name}' placeholder='起始日期' data-role='@{role}' readonly type='@{type}' target='@{id}' ><em class='date'>~</em><input name='end_@{name}' placeholder='截至日期' class='date end' data-role='@{role}' readonly type='@{type}' target='@{id}' ><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.rangedate"); widget.yearRange=function(beforeYear,afterYear){ var limit="c-"+beforeYear+":c"+afterYear; var begin = this.view.find("input.begin"); begin.find("input").datepicker("yearRange", limit); var end = this.view.find("input.end"); end.find("input").datepicker("yearRange", limit); }; widget.reload = function(data) { var begin = this.view.find("input.begin"); begin.datepicker("setDate",new Date().format("yyyy-01-01")); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var begin = this.view.find("input.begin"); begin.datepicker({ dateFormat: "yy-mm-dd", onClose: function(selectedDate) { if(selectedDate!=""){ end.datepicker("option", "minDate", selectedDate);} } }); var end = this.view.find("input.end"); end.datepicker({ dateFormat: "yy-mm-dd", onClose: function(selectedDate) { if(selectedDate!=""){ begin.datepicker("option", "maxDate", selectedDate); } } }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.datetime"); widget.reload = function(data) { this.find("input").datetimepicker("setDate", data[this.predata["name"]]); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var target = this.view.find("input"); target.datetimepicker({ controlType: 'select', timeFormat: "HH:mm:ss", dateFormat: "yy-mm-dd" }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span ><input class='input' type='hidden' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'><span class='items'></span></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.checkbox"); widget.reload = function() { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.updateValue = function() { var val = ""; var items = this.view.find(".checkbox:checked"); for (var i = 0; i < items.length; i++) { val += $(items[i]).val() + ","; } if (val.length > 0) { val = val.substr(0, val.length - 1); } this.view.find(".input").val(val); }, widget.append = function(text, value) { var item = $("<label class='raev'></label>"); item.append("<input class='checkbox checkbox-" + value + "' value='" + value + "' type='checkbox'>"); item.append(text); this.view.find(".items").append(item); item.unbind("change").change(function() { widget.updateValue(); }); }; widget.appends = function(tvs) { for (var i = 0; i < tvs.length; i++) { widget.append(tvs[i]["text"], tvs[i]["value"]); } }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } this.view.find(".input").change(function() { var vals = $(this).val().split(","); $(this).parent().find(".checkbox").prop("checked", false); for (var i = 0; i < vals.length; i++) { $(this).parent().find(".checkbox-" + vals[i]).prop("checked", true); } }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><textarea row=6 data-role='@{role}' target='@{id}' name='@{name}'></textarea></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.text"); widget.reload = function() { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML")); return widget;});rui("widget.extends", function() { var widget = new rui.widget("rui.ant.image"); widget.reload = function() {}, widget.title = ""; widget.setLayout("<div class='raey' ><span><input type='hidden' name='@{name}' ><img style='height:@{height}'></span><span><label>@{title}</label></span></div>", function(view, reload) { view.find("input").change(function() { $(this).parent().find("img").attr("src", $(this).val()); }); view.click(function() { var url = $(this).parent().find("input").val(); var widget = rui("#ruiAntImageDialog").widget( "rui-modal", "<div data-render='rui.panel' data-title='查看图片'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><img style='height:500px' data-name='image'></div>"); widget.show({ "image": url }); }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span ><select data-role='@{role}' target='@{id}' name='@{name}'></select><i disabled class='icon fa fa-chevron-down'></i> </span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.select"); widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + widget.title + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.reset=function(){ this.view.find("select").html(""); }; widget.append = function(text, value) { if (text == null) { this.view.find("select").append("<option >请选择</option>"); } else this.view.find("select").append("<option value='" + value + "'>" + text + "</option>"); }; widget.appendHTML = function(html) { this.view.find("select").append(html); }; widget.appends = function(tvs, isClear) { if (isClear) this.view.find("select").html(""); for (var i = 0; i < tvs.length; i++) { this.view.find("select").append("<option value='" + tvs[i]["value"] + "'>" + tvs[i]["text"] + "</option>"); } }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { widget.title = predata["title"]; view.find("select").on("change", function() { try { $(this).selectmenu("refresh", true); } catch (e) { } }); view.find("select").selectmenu(); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row rui-ant-input'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span class='rui-ant-upload-box'><a class='item rui-ant-upload-addbtn'><i class='fa fa-plus'></i>上传</a></span></span>"); inputWidget.append("<input type='file' class='rui-ant-upload-handle'>"); inputWidget.append("<input type='hidden' class='rui-ant-upload-value' name='@{name}' target='@{id}' data-role='@{role}' >"); var widget = new rui.widget("rui.ant.upload"); widget.input = false; widget.setLimit=function(limit){ widget.view.addClass("limit-"+limit); }; widget.reload = function(data) { var inp=widget.view.find(".rui-ant-upload-value"); if(inp.val()!=""){ var files=inp.val().split(","); for(var i=0;i<files.length;i++){ widget.appendFile(files[i]); } } }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请上传至少一张图片</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.append = function(url, base64) { var src = (base64 == null) ? url : "data:image/jpeg;base64," + base64; var imgs = this.view.find(".rui-ant-upload-box"); if(this.view.hasClass("limit-1")){ imgs.find(".img").remove(); } imgs.prepend("<span class='item img'><img class='img-value' width=60 height=60 data-src='" + url + "' src='" + src + "'><em><i class='fa fa-close'></i></em></span>"); imgs.find(".img").unbind("click").click(function() { $(this).remove(); }); var datasrcs = imgs.find(".img-value"); var srcs = ""; for (var i = 0; i < datasrcs.length; i++) { var src=$(datasrcs[i]).attr("data-src"); if(src!=null&&src!=""){ srcs += src + ","; } } this.view.find(".rui-ant-upload-value").val(srcs); }; widget.files={}; widget.appendFile=function(url,preFile){ var files = this.view.find(".rui-ant-upload-box"); var fileName=""; if(preFile)fileName=(preFile.name.replace(new RegExp(/( )/g),"")).split(".")[0]; else fileName=rui.param("name","",url); if(!url){ widget.files[fileName]=preFile; files.prepend("<span class='item file preupload-"+fileName+"'>"+fileName+"<em>上传中&nbsp;<i class='fa fa-circle-o-notch fa-spin'></i></em></span>"); }else{ if(fileName=="")return; if(!widget.files[fileName]){ widget.files[fileName]={"name":fileName}; files.prepend("<span class='item file preupload-"+fileName+"'>"+fileName+"<em>&nbsp</em></span>"); } var fileOpt=files.find(".preupload-"+fileName).attr("data-src",url).find("em"); fileOpt.html("<a target='_block' href='"+url+"'>查看</a>"); fileOpt.append("&nbsp;"); var delBtn=$("<a href='javascript:void(0)'>删除</a>"); fileOpt.append(delBtn); delBtn.unbind("click").click(function() { $(this).parent().parent().remove(); }); } var datasrcs = this.view.find(".file"); var srcs = ""; for (var i = 0; i < datasrcs.length; i++) { srcs += $(datasrcs[i]).attr("data-src") +"?name="+fileName+ ","; } if(srcs!="") srcs=srcs.substring(0,srcs.length-1); this.view.find(".rui-ant-upload-value").val(srcs); }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { if(typeof predata["types"]!="undefined"){ view.addClass("rui-ant-upload-files"); }else{ view.addClass("rui-ant-upload-images"); } view.find(".rui-ant-upload-handle").change(function() { var files = view.find(".rui-ant-upload-handle").prop('files'); if(files.length>0){ var file=files[0]; if(typeof predata["types"]!="undefined"){ widget.appendFile(false,file); } var reader = new FileReader(); reader.readAsDataURL(file); reader.onload = function(e) { widget.event("upload", this.result.substring(this.result.indexOf(',') + 1),file); } } }); view.find(".rui-ant-upload-addbtn").click(function() { view.find(".rui-ant-upload-handle").click(); }); }); return widget;}); rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input placeholder='请选择' readonly data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-map-marker'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.baidu.location"); widget.reload = function(data) { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view,predata) { this.view.unbind("click").click(function(){ selectBaiduPoint(predata); }); }); return widget;}); selectBaiduPoint = function(predata) { var initLng=119.981362; var initLat=31.815842; var initZoom=7; var inputData=rui("#"+predata["id"]).widget().get(); input=inputData[predata["name"]]; if(input){ var ps=input.split(","); if(ps.length==2){ var zs=ps[1].split("|"); initLng=Number(ps[0]); if(zs.length==2){ initZoom=Number(zs[1]); initLat=Number(zs[0]); }else{ initLat=Number(ps[1]); } } } var rafl = {}; rafl["lng"] = initLng; rafl["lat"] = initLat; rafl["zoom"] = initZoom; rui("#rui_modal_baidu_point").widget( "rui-modal", "<div data-render='rui.panel' class='rui-modal-baidu-point' data-title='坐标拾取'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3>" + "<div id='rui_modal_baidu_point_map' style='width:500px;height:380px;'></div>"+ "<div class='control'>经度<input data-name='lng' id='rui_modal_baidu_point_map_lng'>纬度<input data-name='lat' id='rui_modal_baidu_point_map_lat'>缩放<input data-name='zoom' id='rui_modal_baidu_point_map_zoom'></div>"+ "<span class='rada'><a class='rui-ant-button primary'>确认</a>&nbsp;&nbsp;&nbsp;<a data-event='rui.modal.close' class='rui-ant-button'>取消</a></span>" + "</div>").show(rafl,function(data){ $("#rui_modal_baidu_point_map").replaceWith("<div id='rui_modal_baidu_point_map' style='width:500px;height:380px;'></div>"); var timesamp = (new Date).getTime(); var zoomVal=Number(data["zoom"]); var latVal=Number(data["lat"]); var lngVal=Number(data["lng"]); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t=" + timesamp, function(d) { var map = new BMap.Map("rui_modal_baidu_point_map"); var pt1 = new BMap.Point(lngVal,latVal ); map.centerAndZoom(pt1, zoomVal); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); map.addEventListener("click", function(e){ map.clearOverlays(); var marker = new BMap.Marker(e.point); $("#rui_modal_baidu_point_map_lng").val(e.point.lng.toFixed(6)); $("#rui_modal_baidu_point_map_lat").val(e.point.lat.toFixed(6)); $("#rui_modal_baidu_point_map_zoom").val(map.getZoom()); map.addOverlay(marker); }); map.addOverlay(new BMap.Marker(pt1)); }); }); $("#rui_modal_baidu_point").find(".primary").unbind("click").click(function() { var val= $("#rui_modal_baidu_point_map_lng").val()+","+ $("#rui_modal_baidu_point_map_lat").val()+"|"+ $("#rui_modal_baidu_point_map_zoom").val(); var reset={}; reset[predata["name"]]=val; rui("#"+predata["id"]).widget().set(reset); rui("#rui_modal_baidu_point").widget().hide(); });}; XRender.extend("layout", function() { var widget = new XRender.layout("rui.layout.adlogin"); widget.setJQRender(function(view){ var layouts=view.children(); if(layouts.length!=2){ alert("rui.layout.adlogin只支持两个子元素"); } if(rui.client.os("mobile")){ for(var i=0;i<layouts.length;i++){ var layout=$(layouts[i]); if(layout.find("form").length>0){ }else{ layout.remove(); view.append(layout); } } }else{ view.css("display","inline-table"); view.css("width","100%"); view.css("tableLayout","fixed"); layouts.css("display","table-cell"); } }); return widget;}); rui("widget.extends",function(){ var inputWidget=$("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item'>@{title}</label></span>"); inputWidget.append("<span><span><span class='agris-filter-items'><a class='primary rui-agris-filter-selbtn'>添加&nbsp;<i class='fa fa-plus'></i></a></span><input type='hidden' class='name' name='@{name}_names' ><input type='hidden' target='@{id}' data-role='@{role}' type='@{type}' id='@{id}_tar' class='value' name='@{name}_ids'>" +"</span></span>"); inputWidget.find(".lab").append("<font style='color:red;'>*</font>"); var widget=new rui.widget("rui.agris.filter"); widget.reload=function(){ }; widget.filter=function(title){ console.log(title) ;}; widget.setFilter=function(fun){ this.filter=fun; }; widget.refresh=function(){ var nameView= this.view.find(".name"); var valView=this.view.find(".value"); var names=nameView.val().split(","); var ids=valView.val().split(","); for(var i=0;i<ids.length;i++){ if(ids[i]=="")continue; var itemObject=$("<a href='javascript:void(0);' text='"+names[i]+"' data='"+ids[i]+"'>"+names[i]+"</a>"); itemObject.append("&nbsp;"); itemObject.addClass("value-"+ids[i]); itemObject.addClass("rui-agris-filter-value"); itemObject.append("<i class='fa fa-close'></i>"); itemObject.click(function(){ var t=$(this); t.remove(); widget.refreshVal(); }); widget.view.find(".agris-filter-items").prepend(itemObject); } }; widget.changeLis=false; widget.setLimit=function(limit){ this.predata["limit"]=limit; this.view.find(".rui-agris-filter-selbtn").html("请选择"); }; widget.change=function(changeFun){ widget.changeLis=changeFun; }; widget.refreshVal=function(){ var vals= this.view.find(".rui-agris-filter-value"); var inp=this.view.find(".value"); var inp_name=this.view.find(".name"); var data=""; var txts=""; for(var i=0;i<vals.length;i++){ data+=$(vals[i]).attr("data")+","; txts+=$(vals[i]).attr("text")+","; } if(data.length>0){ data=data.substr(0,data.length-1); txts=txts.substr(0,txts.length-1); } inp.val(data); inp_name.val(txts); }; widget.append=function(text,value){ this.view.find(".list").append("<li><a href='javascript:void(0);' text='"+text+"' data='"+value+"'>"+text+"</a></li>"); this.view.find(".list a").unbind("click").click(function(){ widget.view.find(".value-"+$(this).attr("data")).remove(); var itemObject=$($(this).prop("outerHTML")); itemObject.append("&nbsp;"); itemObject.addClass("value-"+value); itemObject.append("<i class='fa fa-close'></i>"); itemObject.addClass("rui-agris-filter-value"); if(widget.predata["limit"]&&widget.predata["limit"]==1){ widget.view.find(".rui-agris-filter-value").remove(); } widget.view.find(".agris-filter-items").prepend(itemObject); itemObject.click(function(){ var t=$(this); t.remove(); widget.refreshVal(); }); widget.refreshVal(); if( widget.changeLis){ widget.changeLis(itemObject.attr("text"), itemObject.attr("data")); } $(".rui-widget-close-dialog-pri,.rui-agirs-filter").hide(); }); }; widget.error=function(){ this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>"+this.predata["title"] +"</span>"); this.view.click(function(){ $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"),function(view,model){ view.find(".primary").click(function(){ rui.widgetMaskDialog(); var div= rui_agirs_filter.getDialog(model.id); view.find(".agris-filter-items").parent().append(div); div.find(".keyword").change(function(){ widget.filter($(this).val()); }); widget.filter(""); }); }); return widget; }); rui_agirs_filter=function(target,text,value){ };rui_agirs_filter.getDialog=function(target){ $(".rui-agirs-filter").remove(); var box=$("<div class='rui-agirs-filter ui-widget-content rui-dialog-close-handle '></div>").attr("target","input#"+target); box.addClass("rui-agris-region-"+target); var header=$("<div class='rui-agirs-region-header'></div>"); header.append("<input class='keyword' placeholder='请输入关键字' >"); var rbox=$("<div class='rui-agirs-region-body '></div>"); body=$("<ul class='list'></ul>"); rbox.append(body); rbox.append("<div class='clearfix'></div>") ; box.append(header); box.append(rbox); return box; }; rui("widget.extends",function(){ var inputWidget=$("<div class='rui-ant-row raeq'></div>"); inputWidget.append("<span class='lab'><label class='lab-item'>@{title}</label></span>"); inputWidget.append("<span><span><input type='hidden' target='@{id}' data-role='@{role}' type='@{type}' id='@{id}_tar' class='value' name='@{name}'>" +"<input class='display ' readonly placeholder='点击选择' id='@{id}_dis' ></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget=new rui.widget("rui.agris.region"); widget.reload=function(){ }; widget.error=function(){ this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入"+this.predata["title"] +"</span>"); this.view.click(function(){ $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"),function(view,model){ view.find(".value").change(function(){ rui.agris.regionBindView($("#"+model.id+"_dis"), $(this).val(),false); }); view.unbind("click").click(function(){ var mInp=$("#"+model.id+"_tar"); rui.widgetMaskDialog(function(){ $(".rui-agirs-region-dialog").remove(); }); var t=$(this); var div=rui_agirs_region.getRegionWidget(mInp.val(),model.id); t.parent().append(div); rui_agirs_region.resize(); rui_agirs_region.getRegionItems(mInp.val()); }); }); return widget; }); rui_agirs_region=function(field,model){ field.replaceWith(box); start.unbind("click").click(function(){ var mInp=$("#"+$(this).attr("target")); var t=$(this); var div=rui_agirs_region.getRegionWidget(mInp.val(),model.id); t.parent().append(div); rui_agirs_region.getRegionItems(mInp.val()); });};rui_agirs_region.resize=function(){ $(".rui-agirs-region-header").scrollLeft( $(".rui-agirs-region-header")[0].scrollWidth);}; rui_agirs_region.getRegionWidget=function(region_code,target){ $(".rui-agirs-region").remove(); var arr=["国家","省份","城市","区县","街镇","村"]; var arrId=["region_0","region_2","region_4","region_6","region_8","region_10"]; var box=$("<div class='rui-agirs-region ui-widget-content rui-agirs-region-dialog'></div>").attr("target","input#"+target); box.addClass("rui-agris-region-"+target); var header=$("<div class='rui-agirs-region-header'></div>"); var foot=$("<div class='rui-agirs-region-footer '><a class='rui-ant-button primary submit' target='"+target+"' >确定</a><a class='rui-ant-button cancel'>取消</a></div>"); foot.find(".submit").click(function(){ var id=$(this).attr("target"); var code=$(".rui-agris-region-"+id).attr("data"); $("#"+target+"_tar").val(code); $(".rui-agirs-region").remove(); rui.agris.regionBindView($("#"+id+"_dis"),code,false); }); foot.find(".cancel").click(function(){ $(".rui-agirs-region").remove(); }); var start=(G_REGION_CODE+"").length; for(var i=start;i<12;i+=2){ var itemRegion=arrId[i/2]; var tab=$("<a class='sel-region'>"+arr[i/2]+"</a>"); tab.addClass(arrId[i/2]); if(i>region_code.length){ tab.hide(); }else{ tab.addClass("active"); var itemCode=region_code.substring(0,i); tab.attr("data",itemCode); rui.agris.regionBindView(tab,itemCode ,false); } header.append(tab); } var rbox=$("<div class='rui-agirs-region-body'></div>"); body=$("<ul></ul>"); rbox.append(body); rbox.append("<div class='clearfix'></div>") ; box.append(header); box.append(rbox); box.append(foot); return box; };rui_agirs_region.resize=function(){ };rui_agirs_region.getRegionItems=function(code){ for(var i=code.length;i<12;i+=2){ $(".rui-agirs-region").find(".region_"+i).hide(); } var tab= $(".rui-agirs-region").find(".region_"+((code+"").length)); rui.agris.regionBindView(tab,code,false); tab.parent().find(".active").removeClass("active"); tab.addClass("active").attr("data",code).show(); rui_agirs_region.resize(); $(".rui-agirs-region").attr("data",code); var p=$(".rui-agirs-region-body").find("ul"); p.html(""); p.append("<li><a class='sel-region active' data='"+code+"'>本级</a></li>"); var loadRegionsComp=function(){ var ds=rui.agris.region(code).children(); for(var i=0;i<ds.length;i++){ p.append("<li><a class='sel-region' data='"+ds[i]["c"]+"'>"+ds[i]["n"]+"</a></li>"); } $(".rui-agirs-region").find("a.sel-region").unbind("click").click(function(){ var t=$(this); if(t.hasClass("evt"))return; t.parent().parent().find(".active").removeClass("active"); t.addClass("active"); var code=t.attr("data"); rui_agirs_region.getRegionItems(code) }); }; var city=code.substring(0,4); if(rui.agris.gRegion[city]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } };rafe.ramt.rbdn = rafe.rals.rafz();rafe.ramt.rbdn.prototype = { raqn: false, raga: function(rasy) { this.raqn = $("<div>&nbsp;</div>"); rasy.append(this.raqn); }};if (rafe.raiw("lib-highchart")) { rafe.rakl("/bin/com.highcharts.code/highcharts.js", function() { Highcharts.setOptions({ global: { useUTC: false } }); rafe.rakl("/bin/com.highcharts.code/highcharts-3d.js"); rafe.rakl("/bin/com.highcharts.code/wordcloud.js"); });}rafe.ramt.rbdo = rafe.rals.rafz();rafe.ramt.rbdo.prototype = { raqz: {}, ramt: false, rbdq: false, rbds: false, rbdn: false, raga: function(rasy, ramt) { if(ruiLibSampleColor){ Highcharts.getOptions().plotOptions.pie.colors=ruiLibSampleColor; } this.ramt = ramt; var table = rasy.rafn(); var fields = table.find("th"); var thisFields = {}; for (var i = 0; i < fields.length; i++) { var th = $(fields[i]); thisFields[th.attr("data-name")] = { "render": th.attr("data-render"), "title": th.html(), "name": th.attr("data-name") }; } this.raqz = thisFields; var tableClass = table.attr("class"); table.replaceWith("<div id='" + this.ramt.ragm + "' class=' "+rami.ramk.ramm+" " + tableClass + " rui-build' ></div>"); table = $("#" + this.ramt.ragm); var chart = $("<div class='rbdm' style='width:100%;height:100%;'></div>"); chart.attr("id", this.ramt.ragm + "_chart"); table.append(chart); this.rbdn = new rafe.ramt.rbdn(chart); return table; }, resize: function() { var width = $("#" + this.ramt.ragm).parent().width(); var height = $("#" + this.ramt.ragm).parent().height(); if (typeof this.rbdq.reflow == "function") this.rbdq.reflow(); if (typeof this.rbdq.setSize == "function") this.rbdq.setSize(width, height, false); }, themeColors: ["#1ABB9C"], setColors: function(colors) { this.themeColors = colors; return this; }, hideTitle: function() { this.params["title"] = { text: null, labels: { enabled: false } }; this.params["subtitle"] = { text: null, labels: { enabled: false } }; return this; }, setMargin: function(margion) { this.params["chart"]["margin"] = [0, 0, 0, 0]; return this; }, simple: function(mData) { this.hideTitle(); this.setMargin(0); this.setColors(); this.params["series"] = mData; var name = this.target.selector; this.chart = Highcharts.chart(name.replace("#", ""), this.params); }, sampleAreaChart: function(list) { var rbdt = []; var rbdv = false; for (var rahs in this.raqz) { var rasb = this.raqz[rahs]; if (rasb.render == "rui-render-time") { rbdv = rasb; } } for (var rahs in this.raqz) { var rasb = this.raqz[rahs]; if (rasb.render == "rui-render-number") { var rbdw = []; for (var raqv = 0; raqv < list.length; raqv++) { var raqs = list[raqv]; rbdw.push([new Date(raqs[rbdv.name]).getTime(), Number(raqs[rasb.name])]) } rbdt.push({ "name": rasb.title, "data": rbdw }); } } var rbdy = this.ramt.ragm; this.rbdq = ruiLibSampleAreaChart(rbdy, rbdt); this.rbdq.reflow(); }, samplePieChart: function(list) { var keys = Object.keys(this.raqz); var xField = this.raqz[keys[0]]; var yField1 = this.raqz[keys[1]]; var data = []; for (var rahs = 0; rahs < list.length; rahs++) { var item = list[rahs]; var itemObject = { "name": item[xField.name] }; if (rahs == 0) { itemObject.sliced = true; itemObject.selected = true; } itemObject.y = Number(item[yField1.name]); data.push(itemObject); } this.rbdq = ruiLibSamplePieChart(this.ramt.ragm, data); this.rbdq.reflow(); }, sampleRingChart: function(main, total, title, color) { main = Number(main); total = Number(total); var data = []; data.push(["Full", total-main]); data.push(["Main", main]); var cover = total==0?0: (main * 100 / total); cover = ((cover + "").split(".").length > 1) ? cover.toFixed(2) : cover; $("#" + this.ramt.ragm).append("<a class='rui-lib-highchart-ring'><span><em style='color:" + color + "'>" + cover + "</em>%</span><label>" + title + "</label></a>"); this.rbdq = ruiLibSampleRingChart(this.ramt.ragm, data, color); this.resize(); }, riverui: function() { this.rbdq = ruiLibHChartRiverui(this.ramt.ragm, [{ allowPointSelect: false, name: '', data: [100, 50, 100, 50, 100] }]); this.rbdq.reflow(); }, sampleHotWords: function(mData) { this.rbdq = ruiLibSampleHotWordsChart(this.ramt.ragm, mData); this.rbdq.reflow(); }};rafe.ramt.rafo.rbdo = "rui-lib-highchart";raib.rahe(rafe.ramt.rafo.rbdo, rafe.ramt.rbdo);ruiLibSampleChart = { chart: { type: 'column', backgroundColor: 'rgba(0,0,0,0)' }, tooltip: { enabled: false }, xAxis: { labels: { enabled: false }, lineWidth: 0, tickWidth: 0 }, yAxis: { labels: { enabled: false }, title: { enabled: false }, gridLineWidth: 0 }, plotOptions: { labels: { enabled: false }, enabled: false }, legend: { enabled: false },};ruiLibSampleHotWordsChart = function(id, data) { return Highcharts.chart(id, { credits: false, exporting: false, chart: { type: 'wordcloud', margin: [0, 0, 0, 0] }, plotOptions: { series: {}, wordcloud: { rotation: { from: 0, orientations: 2, to: 0 } } }, series: [{ data: data }], title: { enabled: false, text: '' } });};ruiLibSampleRingChart = function(id, data, color) { Highcharts.getOptions().plotOptions.pie.colors= ['#eeeeee', color]; return Highcharts.chart(id + "_chart", { colors: ['#eeeeee', color], credits: { enabled: false }, exporting: { enabled: false }, chart: { type: 'pie', margin: [0, 0, 0, 0], padding: [0, 0, 0, 0], plotBackgroundColor: null, plotBorderWidth: 0, plotShadow: false, "backgroundColor": "rgba(0,0,0,0)" }, title: { enabled: false, text: '' }, tooltip: { enabled: false }, plotOptions: { pie: { dataLabels: { enabled: false }, startAngle: 0, endAngle:360, center: ['50%', '50%'], size: '100%' } }, series: [{ innerSize: '90%', data: data }] });};ruiLibHChartRiveruiTick = true;ruiLibHChartRiverui = function(id, data) { return Highcharts.chart(id, { credits: { enabled: false }, exporting: { enabled: false }, title: { text: '' }, subtitle: { text: '' }, chart: { type: 'areaspline', backgroundColor: 'rgba(0,0,0,0)', margin: [0, 0, 0, 0], events: { load: function() { var series = this.series[0]; setInterval(function() { ruiLibHChartRiveruiTick = !ruiLibHChartRiveruiTick; series.addPoint([ruiLibHChartRiveruiTick ? 100 : 50], true, true); }, 500); } } }, xAxis: { labels: { enabled: false } }, yAxis: { min: 0, max: 180, title: { enabled: false }, labels: { enabled: false }, gridLineWidth: 0 }, colors: ['#00bcd4'], tooltip: { enabled: false }, legend: { enabled: false }, plotOptions: { series: { states: { hover: { enabled: false } } }, areaspline: { fillOpacity: 1, marker: { enabled: false } } }, series: data });};ruiLibSampleChart = function(id, data) { data.credits = { enabled: false }; data.exporting = { enabled: false }; data.title = { text: '' }; data.tooltip = { enabled: false }; data.legend = { enabled: false }; data.subtitle = { text: '' }; return Highcharts.chart(id, data);};ruiLibSampleAreaChart = function(id, data) { return ruiLibSampleChart(id, { chart: { backgroundColor: 'rgba(0,0,0,0)', type: 'area' }, xAxis: { type: 'datetime', dateTimeLabelFormats: { millisecond: '%H:%M:%S.%L', second: '%H:%M:%S', minute: '%H:%M', hour: '%H:%M', day: '%m-%d', week: '%m-%d', month: '%Y-%m', year: '%Y' } }, yAxis: { gridLineWidth: 1, title: { enabled: false } }, colors: ['#1ABB9C'], plotOptions: { area: { pointStart: 1940, fillOpacity: 0.1, lineWidth: 1, marker: { enabled: false, symbol: 'circle', radius: 1, states: { hover: { enabled: true } } } } }, series: data });};ruiLibSampleColor=false;ruiLibSamplePieChart = function(id, data) { if(!ruiLibSampleColor){ ruiLibSampleColor=Highcharts.getOptions().plotOptions.pie.colors; } Highcharts.getOptions().plotOptions.pie.colors =raez.ragw.magicc("#29a176"); return ruiLibSampleChart(id, { chart: { type: 'pie', backgroundColor: 'rgba(0,0,0,0)', options3d: { enabled: true, alpha: 45, beta: 0 } }, plotOptions: { pie: { allowPointSelect: true, cursor: 'pointer', depth: 12, dataLabels: { enabled: true, format: '{point.name}' } } }, series: [{ type: 'pie', name: '', data: data }] });};