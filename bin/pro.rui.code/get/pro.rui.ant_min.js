var hexcase = 0; var b64pad = ""; var chrsz = 8; function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); } function core_md5(x, len){ x[len >> 5] |= 0x80 << ((len) % 32); x[(((len + 64) >>> 9) << 4) + 14] = len; var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; for(var i = 0; i < x.length; i += 16) { var olda = a; var oldb = b; var oldc = c; var oldd = d; a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936); d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586); c = md5_ff(c, d, a, b, x[i+ 2], 17, 606105819); b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330); a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897); d = md5_ff(d, a, b, c, x[i+ 5], 12, 1200080426); c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341); b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983); a = md5_ff(a, b, c, d, x[i+ 8], 7 , 1770035416); d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417); c = md5_ff(c, d, a, b, x[i+10], 17, -42063); b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162); a = md5_ff(a, b, c, d, x[i+12], 7 , 1804603682); d = md5_ff(d, a, b, c, x[i+13], 12, -40341101); c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290); b = md5_ff(b, c, d, a, x[i+15], 22, 1236535329); a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510); d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632); c = md5_gg(c, d, a, b, x[i+11], 14, 643717713); b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302); a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691); d = md5_gg(d, a, b, c, x[i+10], 9 , 38016083); c = md5_gg(c, d, a, b, x[i+15], 14, -660478335); b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848); a = md5_gg(a, b, c, d, x[i+ 9], 5 , 568446438); d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690); c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961); b = md5_gg(b, c, d, a, x[i+ 8], 20, 1163531501); a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467); d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784); c = md5_gg(c, d, a, b, x[i+ 7], 14, 1735328473); b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734); a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558); d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463); c = md5_hh(c, d, a, b, x[i+11], 16, 1839030562); b = md5_hh(b, c, d, a, x[i+14], 23, -35309556); a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060); d = md5_hh(d, a, b, c, x[i+ 4], 11, 1272893353); c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632); b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640); a = md5_hh(a, b, c, d, x[i+13], 4 , 681279174); d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222); c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979); b = md5_hh(b, c, d, a, x[i+ 6], 23, 76029189); a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487); d = md5_hh(d, a, b, c, x[i+12], 11, -421815835); c = md5_hh(c, d, a, b, x[i+15], 16, 530742520); b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651); a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844); d = md5_ii(d, a, b, c, x[i+ 7], 10, 1126891415); c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905); b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055); a = md5_ii(a, b, c, d, x[i+12], 6 , 1700485571); d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606); c = md5_ii(c, d, a, b, x[i+10], 15, -1051523); b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799); a = md5_ii(a, b, c, d, x[i+ 8], 6 , 1873313359); d = md5_ii(d, a, b, c, x[i+15], 10, -30611744); c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380); b = md5_ii(b, c, d, a, x[i+13], 21, 1309151649); a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070); d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379); c = md5_ii(c, d, a, b, x[i+ 2], 15, 718787259); b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551); a = safe_add(a, olda); b = safe_add(b, oldb); c = safe_add(c, oldc); d = safe_add(d, oldd); } return Array(a, b, c, d);}function md5_cmn(q, a, b, x, s, t){ return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);}function md5_ff(a, b, c, d, x, s, t){ return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);}function md5_gg(a, b, c, d, x, s, t){ return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);}function md5_hh(a, b, c, d, x, s, t){ return md5_cmn(b ^ c ^ d, a, b, x, s, t);}function md5_ii(a, b, c, d, x, s, t){ return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);}function core_hmac_md5(key, data){ var bkey = str2binl(key); if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz); var ipad = Array(16), opad = Array(16); for(var i = 0; i < 16; i++) { ipad[i] = bkey[i] ^ 0x36363636; opad[i] = bkey[i] ^ 0x5C5C5C5C; } var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz); return core_md5(opad.concat(hash), 512 + 128);}function safe_add(x, y){ var lsw = (x & 0xFFFF) + (y & 0xFFFF); var msw = (x >> 16) + (y >> 16) + (lsw >> 16); return (msw << 16) | (lsw & 0xFFFF);}function bit_rol(num, cnt){ return (num << cnt) | (num >>> (32 - cnt));}function str2binl(str){ var bin = Array(); var mask = (1 << chrsz) - 1; for(var i = 0; i < str.length * chrsz; i += chrsz) bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32); return bin;}function binl2str(bin){ var str = ""; var mask = (1 << chrsz) - 1; for(var i = 0; i < bin.length * 32; i += chrsz) str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask); return str;}function binl2hex(binarray){ var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef"; var str = ""; for(var i = 0; i < binarray.length * 4; i++) { str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) + hex_tab.charAt((binarray[i>>2] >> ((i%4)*8 )) & 0xF); } return str;}function binl2b64(binarray){ var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; var str = ""; for(var i = 0; i < binarray.length * 4; i += 3) { var triplet = (((binarray[i >> 2] >> 8 * ( i %4)) & 0xFF) << 16) | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 ) | ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF); for(var j = 0; j < 4; j++) { if(i * 8 + j * 6 > binarray.length * 32) str += b64pad; else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); } } return str;}(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory(global):typeof define==="function"&&define.amd?define(factory):factory(global)})(typeof self!=="undefined"?self:typeof window!=="undefined"?window:typeof global!=="undefined"?global:this,function(global){"use strict";global=global||{};var _Base64=global.Base64;var version="2.5.1";var buffer;if(typeof module!=="undefined"&&module.exports){try{buffer=eval("require('buffer').Buffer")}catch(err){buffer=undefined}}var b64chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var b64tab=function(bin){var t={};for(var i=0,l=bin.length;i<l;i++)t[bin.charAt(i)]=i;return t}(b64chars);var fromCharCode=String.fromCharCode;var cb_utob=function(c){if(c.length<2){var cc=c.charCodeAt(0);return cc<128?c:cc<2048?fromCharCode(192|cc>>>6)+fromCharCode(128|cc&63):fromCharCode(224|cc>>>12&15)+fromCharCode(128|cc>>>6&63)+fromCharCode(128|cc&63)}else{var cc=65536+(c.charCodeAt(0)-55296)*1024+(c.charCodeAt(1)-56320);return fromCharCode(240|cc>>>18&7)+fromCharCode(128|cc>>>12&63)+fromCharCode(128|cc>>>6&63)+fromCharCode(128|cc&63)}};var re_utob=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;var utob=function(u){return u.replace(re_utob,cb_utob)};var cb_encode=function(ccc){var padlen=[0,2,1][ccc.length%3],ord=ccc.charCodeAt(0)<<16|(ccc.length>1?ccc.charCodeAt(1):0)<<8|(ccc.length>2?ccc.charCodeAt(2):0),chars=[b64chars.charAt(ord>>>18),b64chars.charAt(ord>>>12&63),padlen>=2?"=":b64chars.charAt(ord>>>6&63),padlen>=1?"=":b64chars.charAt(ord&63)];return chars.join("")};var btoa=global.btoa?function(b){return global.btoa(b)}:function(b){return b.replace(/[\s\S]{1,3}/g,cb_encode)};var _encode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(u){return(u.constructor===buffer.constructor?u:buffer.from(u)).toString("base64")}:function(u){return(u.constructor===buffer.constructor?u:new buffer(u)).toString("base64")}:function(u){return btoa(utob(u))};var encode=function(u,urisafe){return!urisafe?_encode(String(u)):_encode(String(u)).replace(/[+\/]/g,function(m0){return m0=="+"?"-":"_"}).replace(/=/g,"")};var encodeURI=function(u){return encode(u,true)};var re_btou=new RegExp(["[À-ß][-¿]","[à-ï][-¿]{2}","[ð-÷][-¿]{3}"].join("|"),"g");var cb_btou=function(cccc){switch(cccc.length){case 4:var cp=(7&cccc.charCodeAt(0))<<18|(63&cccc.charCodeAt(1))<<12|(63&cccc.charCodeAt(2))<<6|63&cccc.charCodeAt(3),offset=cp-65536;return fromCharCode((offset>>>10)+55296)+fromCharCode((offset&1023)+56320);case 3:return fromCharCode((15&cccc.charCodeAt(0))<<12|(63&cccc.charCodeAt(1))<<6|63&cccc.charCodeAt(2));default:return fromCharCode((31&cccc.charCodeAt(0))<<6|63&cccc.charCodeAt(1))}};var btou=function(b){return b.replace(re_btou,cb_btou)};var cb_decode=function(cccc){var len=cccc.length,padlen=len%4,n=(len>0?b64tab[cccc.charAt(0)]<<18:0)|(len>1?b64tab[cccc.charAt(1)]<<12:0)|(len>2?b64tab[cccc.charAt(2)]<<6:0)|(len>3?b64tab[cccc.charAt(3)]:0),chars=[fromCharCode(n>>>16),fromCharCode(n>>>8&255),fromCharCode(n&255)];chars.length-=[0,0,2,1][padlen];return chars.join("")};var _atob=global.atob?function(a){return global.atob(a)}:function(a){return a.replace(/\S{1,4}/g,cb_decode)};var atob=function(a){return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g,""))};var _decode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(a){return(a.constructor===buffer.constructor?a:buffer.from(a,"base64")).toString()}:function(a){return(a.constructor===buffer.constructor?a:new buffer(a,"base64")).toString()}:function(a){return btou(_atob(a))};var decode=function(a){return _decode(String(a).replace(/[-_]/g,function(m0){return m0=="-"?"+":"/"}).replace(/[^A-Za-z0-9\+\/]/g,""))};var noConflict=function(){var Base64=global.Base64;global.Base64=_Base64;return Base64};global.Base64={VERSION:version,atob:atob,btoa:btoa,fromBase64:decode,toBase64:encode,utob:utob,encode:encode,encodeURI:encodeURI,btou:btou,decode:decode,noConflict:noConflict,__buffer__:buffer};if(typeof Object.defineProperty==="function"){var noEnum=function(v){return{value:v,enumerable:false,writable:true,configurable:true}};global.Base64.extendString=function(){Object.defineProperty(String.prototype,"fromBase64",noEnum(function(){return decode(this)}));Object.defineProperty(String.prototype,"toBase64",noEnum(function(urisafe){return encode(this,urisafe)}));Object.defineProperty(String.prototype,"toBase64URI",noEnum(function(){return encode(this,true)}))}}if(global["Meteor"]){Base64=global.Base64}if(typeof module!=="undefined"&&module.exports){module.exports.Base64=global.Base64}else if(typeof define==="function"&&define.amd){define([],function(){return global.Base64})}return{Base64:global.Base64}});if(typeof rafb=="undefined"){ rafb={};}rbee="data-imports";rbef="data-root";rafb.rafd=function(rafe,raff){ setTimeout(rafe,raff); };rafb.rafg={ rafh:[], rafi:function(rafe){ rafb.rafg.rafh.push(rafe); }, rafk:function(){ for(var rafl=0;rafl< rafb.rafg.rafh.length;rafl++){ rafb.rafg.rafh[rafl](); } }};rafb.rafm=function(){ rafb.rafg.rafk();};rafb.rafnsec_=100000;rafb.rafo=function(){ if(!$(rafq).hasClass("rui-prefix-pri")){ $(rafq).addClass("rui-prefix-pri").append("<a class='rui-prefix-dialog-pri'><em></em></a>"); $(".rui-app").css("display","block"); } rafb.rafnsec_--; if(rafs<=1||rafb.rafnsec_<0 ){ rafb.rafm(); }else{ rafb.rafd(rafb.rafo,100); } }; raft=function(rafv,$attrName){	var rafw = document.getElementsByTagName("script");	for (var i=0; i< rafw.length;i++) { var rafy =rafw[i]; if (rafy && rafy.getAttribute("src") && rafy.getAttribute("src").indexOf(rafv+".")>-1) { return rafy.getAttribute($attrName);	}	} return ""; };rafb.rafz=[]; rafb.raga=function(ragb){ return rafb.rafz.indexOf(ragb)!=-1;};var rafz =raft( 'pro.rui.ant_min',rbee); if(rafz!=null){	ragd=rafz.split(","); for(var i=0;i<ragd.length;i++){ rafb.rafz.push(ragd[i]);	} }else{ rafb.rafz=[];} rage=function(ragf,ragg,ragh) {	var ragi = document.head || document.getElementsByTagName($udHead)[0] || document.documentElement;	var ragk=document.createElement(ragl); ragk.type = ragm; var rbeg =raft( 'pro.rui.ant_min',rbef); if(ragh==null){ragh=rbeg==null?'/bin/pro.rui.lib/':rbeg;} ragk.src = ragh+ragf; ragk.charset="utf-8"; try{ ragi.append(ragk);}catch(e){ragi.appendChild(ragk);} if(ragg){ document.addEventListener ? ragk.addEventListener("load", function(){ ragg(); },false): ragk.onreadystatechange = function() { if (new RegExp("/loaded|complete/").test(ragk.readyState)) { ragk.onreadystatechange = null; ragg(); } }; }}; rafs=0; rafb.ragn=function(ragf,ragg,ragh){ var rago=hex_md5(ragf); var $urls=ragf.split(","); rafs++; rage(ragf,function(){ rafs--; if(ragg)ragg(); },ragh); };rafb.ragq=function(ragf,ragg){ var rago=hex_md5(ragf); var $urls=ragf.split(","); rafs++; rage(ragf,function(){ rafs--; if(ragg)ragg(); },""); }; rafb.rags=function(ragf,ragh){ if(ragh==null)ragh='/bin/pro.rui.lib/'; var rags = document.createElement(ragt); rags.type='text/css'; rags.rel = 'stylesheet'; rags.href = ragh+ ragf+"?a=1";	var ragi= document.getElementsByTagName(ragv)[0]; ragi.insertBefore(rags, ragi.firstChild); }; if(typeof JSLoader=="undefined"){ JSLoader={ importPackage:rafb.ragq, import:rafb.ragn, link:rafb.rags, hasPlug:rafb.raga, append:rafb.rafg.rafi }; JSLoader.packageRoot=function(sub){ if(sub==null)sub=""; return "http://storage.getlink.link/package/"+sub; };}else{ alert("ERR_Import[jsloader]");}$(function(){ rafb.rafo(); }); $(window).on('scroll.elasticity', function (e) {	e.preventDefault(); }).on('touchmove.elasticity', function (e) { e.preventDefault(); }); if(typeof ragw!="undefined"){ alert(ragw+"变量被占用,无法加载..."); } rafq="body";ragv="head";ragy="a";ragl="script";ragt="link";ragm="text/javascript";ragz="pri.header";raha="default";rahb=null;$udJV0_="javascript:void(0);";rahd=$;ragw=function(rahe,rahf){ if(rahf==null){ rahf=$(rahe); } var dom= { rahg:rahf.length>0, rahh:rahe, rahi:function(){ return rahf; }, rahk:function(lim){ if(lim==null)lim=1; var rahl=rahf.parent(); for(var rafl=1;rafl<lim;rafl++){ rahl=rahl.parent(); } return ragw("",rahl); }, rahm:function(rahn){ rahf.after(rahn); }, raho:function(ragb,rahq){ rahf.css(ragb,rahq); }, rafi:function(rahn){ rahf.append(rahn); }, rahs:function(rahn){ rahf.prepend(rahn); }, raht:function(rahv){ return rahf.prop(rahv); }, rahw:function(rahv){ if(rahv==rahb){ return rahf.height(); }else return rahf.height(rahv); }, rahy:function(rahv){ if(rahv==rahb){ return rahf.width(); }else return rahf.width(rahv); }, rahz:function(rafe){ rahf.unbind("click").click(function(){ var raia=ragw("",$(this)); rafe(raia); }); }, raib:function(raid){ return { remove:function(){ rahf.removeClass(raid); }, add:function(){ rahf.addClass(raid); }, exist:function(){ return rahf.hasClass(raid); } } }, raie:function(raif){ return { remove:function(){ rahf.removeAttr(raif); }, val:function(raig){ if(raig==rahb){ return rahf.attr(raif); }else rahf.attr(raif,raig); }, exist:function(){ return rahf.val()!=null; } } }, raih:function(rahe,raii){ var raik= rahf.find(rahe); if(raik.length==1){ return ragw("",$(raik[0])); }else if(raik.length>1){ var arr=[]; for(var rafl=0;rafl<raik.length;rafl++){ arr.push(ragw("",$(raik[rafl]))); } return raii==rahb?arr:arr[raii]; } return ragw(""); }, rail:function(rahe){ return rahf.find(rahe).length; }, raim:function(mHTML){ if(mHTML==null){ return rahf.html(); }else{ rahf.html(mHTML); } }, rain:function(rahn){ rahf.replaceWith(rahn); }, raig:function(raio){ if(mVal_==null){ return rahf.val(); }else{ rahf.val(mVal_); } } }; return dom;}; UIDom=function(selector,obj){ var ins=ragw(selector,obj); return { object:function(){ return ins.rahf; }, class:function(item){ return ins.raib(item); }, attr:function(item){ return ins.raie(item); }, get:function(selector,$i){ var objs= $ins.raiq($selector); if(objs.length==1){ return ragw("",$($objs[0])); }else if($objs.length>1){ var arr=[]; for(var rafl=0;rafl<objs.length;rafl++){ arr.push(ragw("",$(objs[rafl]))); } return i==null?arr:arr[raii]; } }, getCount:function(selector){ return ins.raiq(selector).length; }, html:function(mHTML){ return ins.raim(mHTML); }, replace:function(newObj){ ins.rain(newObj); }, val:function(mVal){ return ins.raig(mVal); } }; }; if(typeof rais!="undefined"){ alert(rais+"变量被占用,无法加载..."); } rais={ rait: function() { return function() { this.raiv.apply(this, arguments); }; } }; rais.raiw={};rais.raiw.raiy="rui-table-layout-item";rais.raiw.raiz="raaa"; rais.raiw.rafq="body";rakaNul_=null;rais.rakb={};rais.rakb.rakd=rais.rait();rais.rakb.rakd.prototype={ raiv:function(){ }, rake:false, rakf:false, rakg:false, $url:false, rakh:function(rahf){ this.rakg=rahf; }, raih:function(){ return this.rakg; }, raki:function(){ return "rakk"+this.rakl; }, };rais.rakb.rakd.prototype.param=function(name){ if(this.ragf){ var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = this.ragf.match(reg); if (r != null) return unescape(r[2]); return false; }else{ return false; } }; rais.rakm={}; rais.rakm.rakn=1;rais.rakm.rako=function(rake){ rais.rakm.rakn++; var rakq= "rui_uiid_"+ rais.rakm.rakn; var rakd=new rais.rakb.rakd(); rakd.rake= rake==rakaNul_?rakq:rake; rais.rakm[rakd.rake]=rakd; return rais.raks(rakd.rake); };rais.raks=function(rake){	return rais.rakm[rake]; };rais.rakt=function(rake){	return typeof rais.raks(rake)=="object";};rais.raks.rakv=function(){ for(var ragb in rais.rakm) {	if(typeof rais.raks(ragb).raih== "undefined" )continue;	var rakk= rais.raks(ragb).raih();	if(typeof rakk.resize != "undefined" ){	rakk.resize();	}	} };rais.tag={};rais.clearByTag=function(rakw){ var tags=rais.tag[rakw]; if(tags!=null){	for(var i=0;i<tags.length;i++){	delete rais.rakm[tags[i]];	} } };rais.raky=function(ragb,rakz,rala){	var rakk=false;	if(rakz.raie("id").exist()){ var rake=rakz.raie("id").val(); var ralb=rakz.rahi().hasClass(rais.raiw.raiz); if(rais.rakt(rake)&&!ralb){ delete rais.rakm[rake]; }else if(rais.rakt(rake)){ return; } rakk=rais.rakm.rako(rake);	}else{	rakk=rais.rakm.rako();	} if(rala!=null){ if(rais.tag[rala]==null)rais.tag[rala]=[]; rais.tag[rala].push(rakk.rake); }	var rald=new rale.ralf[ragb](rakz,rakk); rais.raks(rakk.rake).rakh(rald); }; rais.ralg=function(rahk,rala){	if(rahk==null) rahk=rais.raiw.rafq ;	var ralh=function(ragb){ var rali=ragw(rahk).raih("."+ragb); if(rali.rahg&&!Object.isArray(rali)){ rais.raky( ragb,rali,rala); }else if(Object.isArray(rali))	for(var ralk=0;ralk<rali.length;ralk++){ rais.raky( ragb,rali[ralk],rala);	}	};	for(var ragb in rale.$renders1_){	ralh(ragb);	}	for(var ragb in rale.$renders2_){	ralh(ragb);	}	for(var ragb in rale.$renders3_){	ralh(ragb);	} }; rafb.rafg.rafi(function(){	rais.ralg(); });rais.rall=function(target,allrenders){	var ralm=allrenders==null?target.children("[data-render]"):target.find("[data-render]");	for(var rafl=0;rafl<ralm.length;rafl++){ var obj=$(ralm[rafl]); if(rais.rakt(obj.attr("id"))){ continue ;	} var nameVal={}; var eleValueTags="input,areatext,select"; var eleValue=obj.prop("tagName"); if(obj.attr("data-name")!=null){	nameVal[obj.attr("data-name")]=eleValueTags.indexOf(eleValue) >= 0?obj.val():obj.html(); } var childNv=obj.find("name,data-name,data"); for(var rafl=0;rafl<childNv.length;rafl++){	var item=childNv[rafl];	nameVal[item.attr("data-name")]=eleValueTags.indexOf(eleValue) >= 0?item.val():item.html(); } var render= obj.attr("data-render"); render=render.replace(/\./g,"-"); var renderName=render.split("?")[0]; var rakk=rais.rakm.rako(obj.attr("id")!=null?obj.attr("id"):null); var rakz=ragw(obj); if(rale.ralf[renderName]!=null){	var rald=new rale.ralf[renderName](rakz,rakk);	rald.set(nameVal);	rais.raks(rakk.rake).rakh(rald); }	}}; rais.raln={};rais.raln.ralo={};rais.raln.ralq=false;rais.raln.rals=function(ralq){	rais.raln.ralq=ralq;	var ralt= {	ralv:false,	rafo:function(){},	bind:function(ralw){	this.ralv=true;	var raly=rahd(ralw);	for(var rafl=0;rafl<raly.length;rafl++){	var ralz=rahd(raly[rafl]);	var rama=ralz.attr("href"); ralz.attr("onclick","rais.raln.rafg('"+rama+"');return false;"); }	}	};	setTimeout(function(){ if(!ralt.ralv){	ralt.rafo(); }	},100); return ralt; };rais.raln.rafg=function(ragf){ if(ragf.substring(0,4)=="java")return;	var ramb=rais.raln.ralq;	rais.clearByTag("ramd"); rahd(ramb).html("").removeClass("lazyload-init"); history.pushState({},"",ragf); rahd.ajax({	                type: "get",	                url: ragf,	                data: {},	                dataType: "html",	                success: function (res) {	                   var raim=rahd($.parseHTML(res,true));	var rame=raim.find(ramb).html();	if(rame==null||rame==""){	for( rafl=0;rafl<raim.length;rafl++){	var ramf=$(raim[rafl]);	if((ramf.attr("class")+"").has(ramb.replace(".",""))||ramb=="#"+ramf.attr("id")){	rame=ramf.html();	}	}	}	var ramg=(location.href+"").md5();	if(rais.raln.ralo[ramg]==null){	rais.raln.ralo[ramg]=rame;	}	rahd(ramb).html(rame);	                }  }); return false; }; $(document).ready(function(e) {	if (window.history && window.history.pushState) { $(window).on('popstate', function () {	var ramh=rahd(rais.raln.ralq); setTimeout(function(){ var ramg=(location.href+"").md5(); ramh.removeClass("lazyload-init").html(rais.raln.ralo[ramg]);	},1); });	} });if(typeof rale!="undefined"){ alert(rale+"变量被占用,无法加载..."); } rale={}; rale.raib={ rait: function() { return function() { this.raiv.apply(this, arguments); }; } }; rale.rakb = rale.raib.rait();rale.rakb.prototype = { rami: false, rakd: false, ramk: false, raiv: function(raml) { this.rami = raml.change("\\.", "-"); }, ramm: false, ramn: false, setJQRender: function(renderFun) { this.ramk = renderFun; }, setLayout: function(layout, callback) { this.ramm = "<div>" + layout + "</div>"; this.ramn = callback; }, view: false, predata: {}, event: function(name) { this.rakd.event(name, "__args", arguments); }, getParam: function(name) { return this.rakd.getParam(name); }};rale.ramo=function(rake){ var rahf=$(rake); var rake=rake.change("#",""); if(rais.raks(rake)&& rahf.hasClass(rais.raiw.raiz)){ return rais.raks(rake).raih(); }else{ return false; } };rale.ralf={}; rale.$renders1_={}; rale.$renders2_={};rale.$renders3_={}; rale.rahs=function(ragb,rald){ rale.ralf[ragb]=rald; rale.$renders1_[ragb]=rald; };rale.rafi=function(ragb,rald){ rale.ralf[ragb]=rald; rale.$renders2_[ragb]=rald;};rale.ramq=function(ragb,rald){ rale.ralf[ragb]=rald; rale.$renders3_[ragb]=rald; }; rale.rams=function(rami,$render){ rale.rahs(rami.replace(/\./g,"-") ,rale.ramt($render)); }; rale.ramv=function(rami,$render){ rale.rafi(rami.replace(/\./g,"-") ,rale.ramt($render)); }; rale.ramt=function(ramw){ var ramy= rale.raib.rait(); ramy.prototype={ raiv:function(ramz,rakk){ if(typeof this.ralh !="undefined"){ this.ralh(ramz.rahi(),rakk); } } }; ramy.prototype.rana=false; ramy.prototype.ramw=ramw; ramy.prototype.rald=function(){ if(typeof this.ramw=="function" ){ this.ramw= this.ramw(); } return this.ramw; }; ramy.prototype.ralh= function(ranb,rakk){ if(ranb.hasClass(rais.raiw.raiy)|| ranb.hasClass(rais.raiw.raiz) ){ return ; } ranb.attr("id",rakk.rake); ranb.addClass(rais.raiw.raiz); var name= ranb.attr("name"); if(name==null){name=ranb.attr("data-name");} this.model={ getParam:function(name){ return rakk.param(name); }, getWidget:function(){ return rale.ramo("#"+this.id); }, id:rakk.rake, name:name==null?"":name, events:[], event:function(name,order,rand){ if(order!="__args"){ rand=arguments; } if(rand.length==1){ this.events[name](rand[1]); } else if(rand.length==2){ this.events[name](rand[1],rand[2]); } else if(rand.length==3){ this.events[name](rand[1],rand[2],rand[3]); } else if(rand.length==4){ this.events[name](rand[1],rand[2],rand[3],rand[4]); } else this.events[name](); } }; this.rald().rakd=this.model; if(this.rald().ramm){ var layout= this.rald().ramm; var rane=ranb.data(); rane["title"]=ranb.attr("title"); rane["text"]=ranb.text(); rane["type"]=ranb.attr("type"); rane["name"]=this.model.name; rane["id"]=this.model.id; rane["query"]=function(name){ var renders=this.render.split("?"); if(renders.length>1){ var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = renders[1].match(reg); if (r != null) return unescape(r[2]); } return false; }; if(rane.render!=null&&rane.render.split("?").length>1){ var ranf = rane.render.split("?")[1].split("&"); for (var rafl=0;rafl<ranf.length;rafl++) { var rang = ranf[rafl].split("="); rane[rang[0]]=rang[1]; } } for(var ranh in rane){ layout=layout.change('@{'+ranh+'}', rane[ranh]); } rani =layout.match(/\>\{[\s\S]*?\}\</ig); if(rani==null)rani=[]; for(var rafl=0;rafl<rani.length;rafl++){ var ragb=rani[rafl].change(">{",""); ragb=ragb.change("}<",""); layout=layout.change(">{"+ragb+"}<","><data data-name='"+ragb+"'></data><"); } var rahf=$(layout); rahf.attr("id",rane["id"]); rahf.addClass( ranb.attr("class")); ranb.replaceWith(rahf); this.rald().view=rahf; this.rald().predata=rane; if( this.rald().ramn){ this.rald().ramn(rahf,rane); } this.rana=rahf; }else{ this.rana= this.rald().view= this.rald().ramk(ranb,this.model); } }; ramy.prototype.model=false; ramy.prototype.setEvent=function(name,fun){ this.model.events[name]=fun; }; ramy.prototype.event=function(name){ if(this.model.events[name]!=null){ this.model.event(name,"__args",arguments); return true; }else{ var rank=null; for(var rahi in this.rald()){ if(rahi==name){ var rand=arguments; if(rand.length==1){ rank=this.rald()[rahi](rand[1]); } else if(rand.length==2){ rank= this.rald()[rahi](rand[1],rand[2]); } else if(rand.length==3){ rank=this.rald()[rahi](rand[1],rand[2],rand[3]); } else if(rand.length==4){ rank=this.rald()[rahi](rand[1],rand[2],rand[3],rand[4]); } else{ rank=this.rald()[rahi](); } } } return rank; } }; ramy.prototype.set=function(data){ if(this.rald().ramm){ var ranl= this.rana; var ranm=["href","title","data","class" ]; for(var rann=0;rann<ranm.length;rann++){ var rano=ranm[rann]; var ranlhref_=ranl.find("["+ rano+"]"); ranlhref_.push(ranl); for(var rafl=0;rafl<ranlhref_.length;rafl++){ var ramf=$(ranlhref_[rafl]).attr(rano); if(ramf!=null&& ramf!=""){ ranq =ramf.match(/\{[\s\S]*?\}/ig); if(ranq==null)ranq=[]; for(var rans=0;rans<ranq.length;rans++){ var rant=ranq[rans].change('{',""); rant=rant.change('}',""); ramf=ramf.change(ranq[rans],data[rant]); } $(ranlhref_[rafl]).attr(rano,ramf); } } } } this.setJQObject(data); this.event("reload",data); }; ramy.prototype.ranv=function(){ var ranw=[]; ranw.push(this.rald().view); ranw=$.merge(ranw,this.rald().view.find("[name]")); ranw=$.merge(ranw,this.rald().view.find("[data-name]")); return ranw; }; ramy.prototype.rany="input,INPUT,textarea,TEXTAREA,select,SELECT"; ramy.prototype.setJQObject=function(data){ var ranw=this.ranv(); for(var rafl=0;rafl<ranw.length;rafl++){ var ranz=$( ranw[rafl]); var raoa=ranz.attr("name")?ranz.attr("name"):ranz.attr("data-name"); if(raoa==null)continue; if(this.rany.indexOf(ranz.get(0).tagName) != -1 ){ ranz.val(data[raoa]); ranz.trigger("change"); }else{ ranz.html(data[raoa]); } } }; ramy.prototype.get=function(){ var ranw=this.ranv(); var data={}; for(var rafl=0;rafl<ranw.length;rafl++){ var ranz=$(ranw[rafl]); var raoa=ranz.attr("name")?ranz.attr("name"):ranz.attr("data-name"); if(raoa==null)continue; if(this.rany.indexOf(ranz.get(0).tagName) != -1 ){ data[raoa]=ranz.val(); }else{ data[raoa]= ranz.html(); } } return data; }; ramy.prototype.resize=function(){ }; return ramy;}; if(typeof XRender=="undefined"){ raob={}; raob.rakb=function(raod,$arg1_){ var rake= raod.change("#",""); var raoe=rais.raks(rake)!=null&&$(raod).hasClass(rais.raiw.raiz); return { widget:function(render, html){ if(raoe){ return rais.raks(rake).raih(); }else{ if(render==null){ console.log(rake); } var raof=render.replace(/\\./g,"-"); rakk=rais.rakm.rako(rake); rakz=html==null?ragw(raod):ragw(false,$(html)); var rald=new rale.ralf[raof](rakz,rakk); rais.raks(rakk.rake).rakh(rald); return rais.raks(rakk.rake).raih(); } } }; }; XRender=function(raod,$arg1_){ if(typeof raod=="string"&&raod.has("#")){ return raob.rakb(raod,$arg1_); } else if(typeof(raod)=="function") { rafb.rafg.rafi(raod); } }; XRender.extend=function(type,render){ var rami=""; if(typeof render=="function" ){ rami= new render().rami; } else{ rami=render.rami; } if(type=="layout"){ rale.rahs(rami.replace(/\./g,"-") ,rale.ramt(render)); }else{ rale.rafi(rami.replace(/\./g,"-") , rale.ramt(render)); } }; XRender.widget=rale.rakb; XRender.layout=rale.rakb; XRender.lazyload=function(selector){ return rais.raln.rals(selector); }; }else{ alert("ERR_Import[XRender]");}XRender.core={};XRender.core.getListRender=function(package){ var widget = new rale.rakb(package); widget.ramm=false; widget.setJQRender(function(view){ widget.ramm=view.html(); view.html("<div class='css-list-src'></div>"); this.rana=view; }); widget.append=function(raog,raii){ var raim=this.ramm; for(var ranh in raog){ raim=raim.change("@{"+ ranh+'}',raog[ranh]); raim=raim.change('{'+ ranh+'}',raog[ranh]); 　　} this.rana.find(".css-list-src").append(raim); this.rana.find("img").each(function(){ var raoh=$(this); if( raoh.attr("data-src")){ raoh.attr("src",raoh.attr("data-src").split(",")[0]); raoh.removeAttr("data-src"); } }); this.rana.find(".clearfix").remove(); this.rana.find(".css-list-src").append("<div class='clearfix'></div>"); }; widget.appends=function(raoi,raok){ if(raok!=null){ this.rana.find(".css-list-src").html(""); } for(var rafl=0;rafl<raoi.length;rafl++){ this.append(raoi[rafl],rafl); } }; return widget;};if(typeof raol=="undefined"){ raol={};} if(typeof raol.raom!="undefined"){ alert("Util[RUI] is init!");}raol.raon="1";raol.raoo="2";raol.raom=function(){ };raol.raom.data=function(ragb,rahq,raot){ ragb=ragb.md5(); if(rahq==null){ var raov= $.cookie(ragb); if(raov==null||raov=="null")return false;else{ var raog= raol.raow(raov).val(); return raog.rahi; } }else{ var raog={}; raog.rakf=(typeof val =="object")?raol.raon:raol.raoo; raog.rahi=rahq; var raoy=raol.raow(raog).toString(); if(raot==null){ $.cookie(ragb,raoy, { expires: 7,path:"/" }); }else { var raoz = new Date(); raoz.setTime(raoz.getTime()+raot); $.cookie(ragb,raoy, { expires:raoz,path:"/" }); } } }; raol.raom.raqa=function(){ return (navigator.browserLanguage || navigator.language).toLowerCase(); }; raol.raom.raqb= function(){ var u = navigator.userAgent, app = navigator.appVersion; return { trident: u.indexOf('Trident') > -1, presto: u.indexOf('Presto') > -1, webKit: u.indexOf('AppleWebKit') > -1, gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, mobile: !!u.match(/AppleWebKit.*Mobile.*/), ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/), android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, iPhone: u.indexOf('iPhone') > -1 , iPad: u.indexOf('iPad') > -1, webApp: u.indexOf('Safari') == -1 };}(); raol.raom.os=function(type,callback){ if(callback==null){ return raol.raom.raqb[type]; }else{ var bol=raol.raom.raqb[type]; if(callback!=null) callback(bol); else return bol; } }; raqd={ rait: function() { return function() { this.raiv.apply(this, arguments); }; } }; raol.raom.$Global=raqd.rait();raol.raom.$Global.prototype={ raiv:function(raqe){ this.ragb=raqe; }, ragb:false, rahq:false, set:function(raqf){ if(this.rahq){ alert("全局变量不支持重载!"); }else{ this.rahq=raqf; } }, get:function(){ return this.rahq; } }; raol.raqg={}; raol.raom.global=function(name,value,check){ var raqh=raol.raqg[name]; if("undefined" == typeof raqh){ raol.raqg[name]=new raol.raom.$Global(name); } if(value!=null){ raol.raqg[name].set(value); }else{ return raol.raqg[name].get(); } }; if(typeof raol=="undefined"){ raol={};} if(typeof raol.raqi!="undefined"){ alert("Util[RUI] is init!");}raol.raqi={};raol.raqi.param=function(name,def,url) { if(def==null)def=""; var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r=null; if(url==null){ r =window.location.search.substr(1).match(reg); }else{ var urls=url.split("?"); if(urls.length>1){ r=urls[1].match(reg); } } if (r != null) return unescape(r[2]); return def; };raol.raqi.paramJSON=function(paramNames){ var param={}; param[paramNames]=raol.raqi.param(paramNames); return param; };raol.raqi.fragments=function(){ var url=location.href; var result = []; if(url.split("#").length<2)return {}; var query = url.split("#")[1]; var queryArr = query.split("&"); var obj = {}; queryArr.forEach(function(item){ var key = item.split("=")[0]; var value = item.split("=")[1]; obj[key] = value; }); return obj; };raol.raqi.changeArg=function(arg,arg_val,url){ var pattern=arg+'=([^&]*)'; var replaceText=arg+'='+arg_val; if(url==null) url=location.href; if(url.match(pattern)){ var tmp='/('+ arg+'=)([^&]*)/gi'; tmp=url.replace(eval(tmp),replaceText); return tmp; }else{ if(url.match('[\?]')){ return url+'&'+replaceText; }else{ return url+'?'+replaceText; } } }; if(typeof raol=="undefined"){ raol={};} if(typeof raol.raqk!="undefined"){ alert("Util[RUI] is init!");}raql={ rait: function() { return function() { this.raiv.apply(this, arguments); }; } }; raol.raqm= raql.rait();raol.raqm.prototype={ raiv:function(mId){this.rake=mId;}, rake:false, $funs1_:[], raog:false, ranm:"", append:function(rafe){ this.$funs1_.push({"rake":this.rake,"rafe":rafe}); }, run:function(raqn){ this.raog=raqn; for(var i=0;i<this.$funs1_.length;i++){ var arg= this.$funs1_[i]; if(arg.rake==this.rake)arg.rafe(raqn); } } }; raol.raqk={};raol.raqk.raw=function(url,data,callback){ $.ajax({ type: 'post', cache: false, dataType: 'json', contentType:'application/json', data: JSON.stringify(data), url: url, success: function(raqo) { callback( raqo ); }, error:function() { } }); };raol.raqk.raqq=function(cls){ return { clazz:cls, auth:function(){ this.append("rid", $("body").attr("data-rid")); this.append("token", $("body").attr("data-token")); return this; }, append:function(name,val){ var id="#"+this.clazz+"_"+name; if($(id).length > 0)$(id).remove(); var inp=$("<input id='"+id+"' name='"+name+"' type='hidden' >") .addClass(this.clazz) .val(val); $("body").append(inp); return this; }, post:function(url,back){ $("."+this.clazz).post(url,back); } } };raol.raow=function(data){if(typeof data =="string"){ data=JSON.parse(data);}return { val:function(){ return data; }, toString:function(){ return JSON.stringify(data); }, toColumn:function(){ var data={}; for(var key in ds){ var newKey=""; for(var i=0;i<key.length;i++){ var key1=key.charAt(i); if(key1 === key1.toUpperCase()){ newKey+="_"+key1.toLowerCase(); }else{ newKey+=key1; } } data[newKey]=ds[key]; } return data; } };}; if(typeof raol=="undefined"){ raol={};} if(typeof raol.raqs!="undefined"){ alert("Math[RUI] is init!");}raol.raqs={};raol.raqs.num =function(val,fixed){ var num=Number(val); if(isNaN(val)||(num+"")=="NaN"){ num=0; } if(fixed!=null){ num=Number(num.toFixed(fixed)); } return num; }; if(typeof raol=="undefined"){ raol={};} if(typeof raol.rall!="undefined"){ alert("Draw[RUI] is init!");}raol.rall={};raol.rall.magicc=function($mainColor){ var colors = []; for (i = 0; i < 5; i += 1) { colors.push(Highcharts.Color($mainColor).brighten((i - 3) / 7).get()); } for (i = 0; i < 5; i += 1) { colors.push(Highcharts.Color(colors[3]).brighten((i - 3) / 7).get()); } return colors; }; if(typeof raol=="undefined"){ raol={};} if(typeof raol.raqt!="undefined"){ alert("Main[RUI] is init!");}raol.raqv={ };raol.raqv["function"]=function(raqw,rafe){ if(typeof rafb!="function") rafb.rafg.rafi(rafe); };raol.raqt=function(raqw,$arg1_){ if(typeof(raqw)=="function"){ $arg1_=raqw; raqw="function"; } var raqy=raol.raqv[raqw]; if(raqy){ raqy(raqw,$arg1_); }else{ return XRender(raqw,$arg1_); } };raol.raqt.register=function(name,fun){ raol.raqv[name]=fun;};if(typeof raol=="undefined"){ raol={};} if(typeof raol.raqz!="undefined"){ alert("EventCore[RUI] is init!");}rasa={ rait: function() { return function() { this.raiv.apply(this, arguments); }; } }; raol.raqz=rasa.rait();raol.raqz.prototype={ ralt:{}, raiv:function(){ } };raol.raqz.prototype.set=function(name,fun) { if(fun==null)fun=function(){}; this.ralt[name]=fun;}; raol.raqz.prototype.push=function(name,fun) { if(typeof this.ralt[name] =="function"){ var $fun1_=this.ralt[name]; this.ralt[name]=[]; this.ralt[name].push($fun1_); }else if(typeof this.ralt[name] !="object") { this.ralt[name]=[]; } this.ralt[name].push(fun);};raol.raqz.prototype.get=function(name) { var rasb=this.ralt[name]; var rahf= { rand:[], $stoped:false, rasd:function(){ var rakg=this; setTimeout(function(){ if(rakg.$stoped){ }else{ rakg.rase(rakg.rand); } },100); }, exec:function(){ var rand=arguments; this.rase(rand); }, rase:function(rand){ this.$stoped=true; if(rand.length>4){ alert("Event[RUI]:不支持的参数数量>4"); } if(typeof rasb =="object"){ }else if(typeof rasb =="function"){ $fun1_=rasb; rasb=[]; rasb.push($fun1_); }else{ console.log("Event[RUI]:不支持的类型"); rasb=false; } if( rasb) for(var rafl=0;rafl<rasb.length;rafl++){ rafe=rasb[rafl]; if(rand.length==1){ rafe(rand[0]); } else if(rand.length==2){ rafe(rand[0],rand[1]); } else if(rand.length==3){ rafe(rand[0],rand[1],rand[2]); } else if(rand.length==4){ rafe(rand[0],rand[1],rand[2],rand[3]); } else{ rafe(); } } } }; var rand=arguments; for(var rafl=1;rafl<rand.length;rafl++){ rahf.rand.push(rand[rafl]); } rahf.rasd(); return rahf;}; if(typeof rui!="undefined"){ alert("initRui Error"); } rui=raol.raqt; rui.widget= rale.rakb;rui.util=raol.raqk; rui.json=raol.raow;rui.client=raol.raom;rui.request=raol.raqi;rui.class={ modules:{}, register:function(name,note){ if(note==null)note="init"; this.modules[name]=note; }, has:function(name){ return this.modules[name]!=null; } }; if(typeof raol.raqz!="undefined"){ rui.class.register("event","事件"); rui.class.Event=raol.raqz;}if(typeof raol.raqm!="undefined"){ rui.class.register("loader","加载器"); rui.class.Loader=raol.raqm; rui.class.register("loader","全局参数"); rui.class.Global=raol.raom.$Global;} if (!Object.keys) { Object.keys = function (rahf) { var rasf = [],rasg; for (rasg in rahf){ if (Object.prototype.hasOwnProperty.call(rahf, rasg)) { rasf.push(rasg); } } return rasf; };};Object.isArray = function (obj) { return Object.prototype.toString.call(obj)== '[object'+decodeURI("%20")+'Array]';};Date.prototype.format = function(rash){	var o = {	"M+" : this.getMonth()+1,	"d+" : this.getDate(),	"h+" : this.getHours(),	"m+" : this.getMinutes(),	"s+" : this.getSeconds(),	"q+" : Math.floor((this.getMonth()+3)/3),	"S" : this.getMilliseconds()	} ;	if(/(y+)/.test(rash)) {	rash = rash.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));	}	for(var k in o) {	if(new RegExp("("+ k +")").test(rash)) {	rash = rash.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));	}	}	return rash;	};Date.prototype.diff=function(startDate){ if(startDate==null)startDate=new Date(); var date3=this.getTime()-startDate.getTime(); var days=Math.floor(date3/(24*3600*1000)); var leave1=date3%(3600*1000); var hours=Math.floor(date3/(3600*1000)); var leave2=leave1%(3600*1000); var minutes=Math.floor(leave2/(60*1000)); var leave3=leave2%(60*1000) ; var seconds=Math.round(leave3/1000); if(hours<=0)hours="0"; if(minutes<=0)minutes="0"; if(seconds<=0)seconds="0"; if(hours<10)hours="0"+hours; if(minutes<10)minutes="0"+minutes; if(seconds<10)seconds="0"+seconds; var lab= hours+":"+minutes+":"+seconds+""; return lab;};String.prototype.has=function(rasi) {	return this.indexOf(rasi) != -1 ;	}; String.prototype.change=function(rask,rasl) {	return this.replace(new RegExp(rask,"g"),rasl); }; String.prototype.encodeSelector=function() {	var str=this.replace(new RegExp(".","g"),"_2_"); str=this.replace(new RegExp("#","g"),"_1_");	return str; }; String.prototype.decodeSelector=function() {	var str=this.replace(new RegExp("_2_","g"),"."); str=this.replace(new RegExp("_1_","g"),"#");	return str; }; String.prototype.trim=function() {	return this.replace(new RegExp(/(\s*$)/g,"g"),""); }; String.prototype.success=function() { return {"code":200,"data":this}; }; String.prototype.error=function() { return {"code":-500,"data":this};	};	String.prototype.md5=function() { return hex_md5(this); };	if(typeof raoq=="undefined"){ raoq={};} raoq.raib={ rait: function() { return function() { this.raiv.apply(this, arguments); }; } }; raoq.ragn=rafb.ragn; raoq.ragq=rafb.ragq; raoq.rags= rafb.rags; raoq.raga=rafb.raga; raoq.rakk={};raoq.rakk.rakf={}; raoq.rakz= ragw;raoq.dom= UIDom; raoq.rasm=new rui.class.Loader("rasn");rui.dict={};rui.dict["baseTV"]=[];rui.dict["baseTV"][0]={"text":"请选择","value":""};rui.dict["baseTV"][1]={"text":"是","value":"1"};rui.dict["baseTV"][2]={"text":"否","value":"0"};rui.dict["baseTV2"]=[];rui.dict["baseTV2"][0]={"text":"是","value":"1"};rui.dict["baseTV2"][1]={"text":"否","value":"0"}; JSLoader.append(function(){ setTimeout(function(){ raoq.rasm.run(); },300); setTimeout(function(){ $(rafq).removeClass("rui-prefix-pri"); $(".rui-prefix-dialog-pri").fadeOut(); },500); });rui.pages={};rui.register("function",function(raod,rafe){ if(typeof raoq.rakk.raso=="undefined"||raoq.rakk.raso.rasq==false){ raoq.rasm.append(rafe); }else{ var rass=$(raoq.rakk.raso.rasq); if(!$(rass).hasClass("lazyload-init")){ rais.ralg("#"+rass.attr("id"),"ramd"); $(rass).addClass("lazyload-init"); } rafe(); } }); rui.register("mode",function(order,$arg1_){ rui.client.global("mode",$arg1_); raoq.rakz(rafq).raib($arg1_).add(); });rui.register("widget.extends",function(order,$arg1_){ var rami=""; if(typeof $arg1_=="function" ){ rami= new $arg1_().rami; } else{ rami=$arg1_.rami; } if(rami=="rui-ant-form"){ rale.rahs(rami.replace(/\./g,"-") ,rale.ramt($arg1_)); }else rale.rafi(rami.replace(/\./g,"-") ,rale.ramt($arg1_)); } ); raoq.ragn("com/jquery/utils/moment.min.js"); if(raoq.raga("icon")) raoq.rags("com/fontawesome/css/font-awesome.one.css"); rui.rast={};rui.setCallback=function($name,$back){ raoq.rast[$name]=$back; }; rui.userdata=function(k,mTimeout){ return { json:function(obj){ return raol.raom.data(k,obj); }, string:function(v){ return this.json(v)} };}; rui.num=raol.raqs.num; rui.magicc=raol.rall.magicc; rui.raw=raol.raqk.raw; rui.param=raol.raqi.param;rui.paramJSON=raol.raqi.paramJSON; rui.fragments=raol.raqi.fragments;rui.changeArg=raol.raqi.changeArg;rui.modelToColumn=function(ds){ return rui.json(ds).toColumn(); }; rui.action=function($url,cheanthis){ if(cheanthis){ window.location.replace($url); }else{ window.location=$url; }};rui.widgetMaskDialog=function(callback){ var selector="rui-widget-close-dialog-pri"; $("."+selector).remove(); $("body").append($("<div class='"+selector+"'></div>")); $("."+selector).click(function(){ $(".rui-dialog-close-handle").remove(); $(this).remove(); if(callback)callback(); });}; ruiEvent= ruiEvent=new rui.class.Event();rui.setEvent=function(name,fun) { ruiEvent.set(name,fun); }; rui.pushEvent=function(name,fun) { ruiEvent.push(name,fun);};rui.event=function() { var rand=arguments; var $args1_=[]; for(var i=0;i<rand.length;i++){ $args1_.push(rand[i]); } ruiEvent.get(rand[0]).rase($args1_);}; $(function(){ rui.client.os("mobile",function(isMob){ $("body").addClass(isMob?"rui-mob":"rui-pc"); }); });rasv = "dashboard"; rasw = function(rakz, rasy) { var raib = rakz.raie('class').val(); if (raib == null) return ""; var rasz = raib.split(' '); for (var j = 0; j < rasz.length; j++) { if (rasz[j].lastIndexOf(rasy, 0) === 0) { return rasz[j]; } } return "";};raoq.rakk.raso = raoq.raib.rait();raoq.rakk.raso.prototype = { rakk: false, raiv: function(rata, rakk) { this.rakk = rakk; rata.raib("raab").add(); rata.raib(rais.raiw.raiz).add(); rata.rahm("<div class=\"raad\">&nbsp;</div>"); this.rakz = rata; this.html = this.rakz.raht('innerHTML'); rata.raim(""); var ratb = rasw(rata, "w-"); if (ratb != "") this.ratd = ratb; rata.raib(ratb).remove(); rate = rui.client.global("mode") ? rui.client.global("mode") : raha; this.ratf = rui.client.os("mobile") ? rasv : rate; this.raog["title"] = rata.raie("data-title").val(); this.raog["subtitle"] = rata.raie("data-subtitle").val(); this.raog["logo"] = rata.raie("data-logo").val(); if (rui.client.os("mobile")) { } else { this.ratg = this.rath(); this.rati = this.ratk(); } this.ratl = this.ratm(); if (this.ratf == rasv) { raoq.rakz(rafq).raib("raae").add(); if (rui.client.os("mobile")) { var ratn = new rato(); ratn.ratq("_contorl"); this.ratl.rafi(ratn.rats().rahi()); ratn.rats().rahi().click(function() { rui("#" + rakk.rake).widget("rui-admin-header").hideMenu(); }); } } this.rana = rata.rahi(); }, rakz: false, raim: false, ratf: "default", ratd: "w-main", raog: { title: "", subtitle: "", logo: false }, rati: false, ratg: false, ratl: false, ratt: false, get: function() {}, set: function() {}, setting:function(){ var raog={}; raog["menuHeight"]=$(".raaf").height(); raog["navHeight"]=$(".raab").height(); return raog; }};raoq.rakk.raso.prototype.ratk = function() { var rakz = raoq.rakz("<div class=\"raag top fixed-logo\" ></div>"); var ratv = raoq.rakz("<div></div>"); ratv.raib(this.ratd).add(); var ratw = false; if (this.ratf == rasv) { ratw = raoq.rakz("<span class=\"raah\"></span>"); } else { ratw = raoq.rakz("<span class=\"raah\">&nbsp;</span>"); ratw.rafi(this.raim); } ratv.rafi(ratw.rahi()); rakz.rafi(ratv.rahi()); this.rakz.rahs(rakz.rahi()); return ratw;};raoq.rakk.raso.prototype.rath = function() { var rakz = raoq.rakz("<div class='raai'></div>"); rakz.raib(this.ratd).add(); this.rakz.rafi(rakz.rahi()); var raty = raoq.rakz("<div></div>"); raty.raib("raak").add(); if (this.raog.logo) { var ratz = raoq.rakz("<span class='logo'></span>"); raty.rafi(ratz); ratz.rafi("<div><img src='" + this.raog["logo"] + "' style='height:100%;'></div>"); } rava = "<span><h1 class=\"raal\">"; if (this.raog["subtitle"]) { rava += "<em>" + this.raog["subtitle"] + "</em>"; } raty.rafi(rava + this.raog["title"] + "</h1></span>"); rakz.rafi(raty.rahi()); if (this.ratf != rasv) { rakz.rafi("<span class=\"tr\">&nbsp;</span>"); } return rakz;};raoq.rakk.raso.prototype.ratm = function() { var rakz = raoq.rakz("<div></div>"); rakz.raib(this.ratd).add(); this.rakz.rafi(rakz.rahi()); if (this.ratf == rasv) { var rahk = raoq.rakz("<div class=\"raaf\"></div>"); if (rui.client.os("mobile")) { var nav = rahk.rahi(); nav.width($("body").width()); nav.css("left", -1 * $("body").width()); } raoq.rakz(rafq).rafi(rahk.rahi()); var ravb = raoq.rakz("<ul class='raam'></ul>"); rahk.rafi(ravb.rahi()); return ravb; } else { var rahk = raoq.rakz("<div class=\"raan\"></div>"); var ravb = raoq.rakz("<ul class='raao raam'></ul>"); rahk.rafi(ravb.rahi()); rahk.rafi("<span class=\"clearfix\"></span>"); rakz.rafi(rahk.rahi()); return ravb; }}; raoq.rakk.raso.prototype.appendTopLogo = function(title, icon) { rakz = raoq.rakz("<a class='raaq raas'>" + title + "</a>"); if (icon != null) { rakz.rahs("<i class=\"" + icon + "\"></i>"); } this.rati.rahk().rahs(rakz.rahi());};raoq.rakk.raso.prototype.appendTopNav = function(html, id, href, icon, isPre) { rakz = false; if (id == null && href == null && icon == null) { rakz = raoq.rakz("<a class='raaq'>" + html + "</a>"); } else { rakz = raoq.rakz("<a class='raaq'>" + html + "</a>"); rakz.raie("id").val(id); rakz.raie("href").val(href == rahb ? $udJV0_ : href); } if (icon != null) { rakz.rahs("<span class='raat'><i class=\"" + icon + "\"></i></span>"); } if (rui.client.os("mobile")) { } else { if (isPre) this.rati.rahs(rakz.rahi()); else this.rati.rafi(rakz.rahi()); }};raoq.rakk.raso.prototype.prependTopNav = function(html, id, href, icon) { this.appendTopNav(html, id, href, icon, true);};raoq.rakk.raso.prototype.appendTopLogo = function(html, id, href) { rakz = false; if (id == null && href == null ) { rakz = raoq.rakz( html ); } else { rakz = raoq.rakz("<a class='raaq'>" + html + "</a>"); rakz.raie("id").val(id); rakz.raie("href").val(href == rahb ? $udJV0_ : href); } this.rati.rahi().parent().append("<span class='raav'>"+rakz.rahi().prop("outerHTML")+"</span>"); };raoq.rakk.raso.prototype.title = function(title) { this.rakz.raih(".raal").raim(title);};raoq.rakk.raso.prototype.active = function(name) { var rahk = $(".raaf"); rahk.find(".active").removeClass("active"); var ravd = raoq.rakz("#nav_" + name); ravd.raib("active").add(); var rahl = ravd.rahk(3); if (rahl.raib("children").exist()) { rahl.raib("open").add(); } var $par2_ = rahl.rahk(2); $par2_.raib("open").add(); $("#nav_" + name).parent().addClass("children open"); if(rui.client.os("mobile")){ this.leftMenu(false); }else{ this.leftMenu(true); } };raoq.rakk.raso.prototype.extend = function(name,raim) { var a= $("#nav_" + name); var item=a.parent(); item.addClass("children"); item.append("<ul class='raam'><li>"+raim+"</li></ul>"); var rave = "<em class='raaw'><i class='fa fa-plus plus'></i><i class='fa fa-minus minus'></i></em>"; a.append(rave); a.attr("href","javascript:void(0);"); a.unbind("click").click(function(){ var aP=$(this).parent(); var isOpen=aP.hasClass("open"); if(isOpen){ aP.removeClass("open"); }else{ aP.addClass("open"); } }); };raoq.rakk.raso.rasq=false;raoq.rakk.raso.raln=false;raoq.rakk.raso.prototype.refreshLazyload=function(){ raoq.rakk.raso.raln=XRender.lazyload(raoq.rakk.raso.rasq).bind(".rui-event-lazyload"); }; raoq.rakk.raso.prototype.content = function(selector) { raoq.rakk.raso.rasq=selector; this.refreshLazyload(); rakz = raoq.rakz(selector); rakz.raib("raay").add(); this.ratt = rakz; this.resize(); }; raoq.rakk.raso.prototype.action = function(url) { rais.raln.rafg(url); return false; };raoq.rakk.raso.prototype.resize = function(callback) { ravf = $("#" + this.rakk.rake).innerHeight(); raoq.rakz(".raad").rahw(ravf); if (rui.client.os("mobile") || this.ratf == "default") { } else { raoq.rakz(".raaf").rahi().css("top", ravf); var width = raoq.rakz(".raaf").rahy(); if (!$("body").hasClass("rui-open-menu")) { width = $("#" + this.rakk.rake).height(); } $(".raay").css("marginLeft", width); }};raoq.rakk.raso.prototype.hide = function() { $(".cd-header,.cd-nav-dashboard").hide(); $(".cd-header-clear").remove(); $(".cd-content-dashboard").css("marginLeft", 0);};raoq.rakk.raso.prototype.setInnerMaxWidth = function(maxWidth) { var header=$("#" + this.rakk.rake); header.find(".w-full").css("maxWidth",maxWidth);}; raoq.rakk.raso.prototype.leftMenu = function(ravg) { var ravh = $("body"); var ravi = function() { }; var ravk=rui.client.os("mobile"); var ratm=$(".raaf"); var ravl=$(".raay"); var rahy = ratm.width(); if (ravh.hasClass("rui-open-menu")&&!ravg) { ravh.removeClass("rui-open-menu"); ravh.addClass("rui-close-menu"); ratm.find(".open").removeClass("open"); if(ravk){ ratm.animate({ "left": -1*rahy}, 500, "swing", function() { ravi(); }); }else{ var ravm=ratm.css("top"); ratm.css("width", ravm); ravl.css("marginLeft", ravm); ravi(); } } else if(!ravh.hasClass("rui-open-menu")){ ravh.addClass("rui-open-menu"); ravh.removeClass("rui-close-menu"); rahy = ratm.width(); ravl.css("marginLeft",ravk?0:rahy); ratm.css("left",0); setTimeout(function() { ravi(); }, 500); }};raoq.rakk.raso.prototype.updateNavs = function(fun) { $(".cd-nav-item").each(function() { fun($(this)); });}; raoq.rakk.raso.prototype.bindJsonStr = function(str) { this.bindJson(JSON.parse(str));};raoq.rakk.raso.prototype.bindJson = function(navs,clean) { var rakg=this; if(clean==null) this.ratl.raim(""); for (var rafl = 0; rafl < navs.length; rafl++) { var ravn = navs[rafl]; var ravo = new rato(); ravo.ratq(ravn); this.ratl.rafi(ravo.rats().rahi()); if (rafl == 0) { ravo.rakz.raib("first").add(); } else if (rafl == navs.length - 1) { ravo.rakz.raib("last").add(); } var rave = "<em class='raaw'><i class='fa fa-plus plus'></i><i class='fa fa-minus minus'></i></em>"; var $subMenuClicker=function(raia) { var ravd = raia.rahk(); var ravg = ravd.raib("open").exist(); if (ravg) { ravd.raib("open").remove(); } else { rakg.leftMenu(true); ravd.raib("open").add(); } }; if (ravn["subNavs"]) { var ravq=ravo.rats().raih("a", 0); ravq.rafi(rave); ravq.raie("href").val($udJV0_); ravq.raie("onclick").val(""); ravq.rahz($subMenuClicker); var ravs = ravn["subNavs"]; for (var rans = 0; rans < ravs.length; rans++) { var ravt = new rato(); ravt.ratq(ravs[rans]); ravo.rafi(ravt.rats().rahi()); if (ravs[rans]["subNavs"]) { var $svnNav2Btn_=ravt.rats().raih("a", 0); $svnNav2Btn_.rafi(rave); $svnNav2Btn_.raie("href").val($udJV0_); $svnNav2Btn_.raie("onclick").val(""); $svnNav2Btn_.rahz($subMenuClicker); var $subs2_ = ravs[rans]["subNavs"]; for (var rasg = 0; rasg < $subs2_.length; rasg++) { var $subView2_ = new rato(); $subView2_.ratq($subs2_[rasg]); ravt.rafi($subView2_.rats().rahi()); } } } } } if(rui.client.os("mobile")){ var ravv=$("<a class='raaq' href='javascript:void(0);' data='"+this.rakk.rake+"'><span class=\"raaz\"><i class=\"fa fa-close\"></i>关闭</span></a>"); this.ratl.rahi().parent().append(ravv); ravv.click(function(){ XRender("#"+$(this).attr("data")).widget().leftMenu(false); }); } this.resize(); this.refreshLazyload(); };rato = raoq.raib.rait();rato.prototype = { raiv: function() {}, ratq: function(raog) { if (raog == "_contorl" && rui.client.os("mobile")) { this.ravw = "<i class='fa fa-chevron-left'></i>"; this.ravy = "&nbsp;"; this.rama = "#"; this.ragb = "menu"; } else if (raog == "_contorl") { } else { this.ravw = raog["title"]; this.ragb = raog["name"]; this.rama = raog["href"] ? raog["href"] : "#"; this.ravz = raog["open"] ? raog["open"] : false; this.ravy = raog["icon"]; this.rawa = raog["subNavs"]; } }, rats: function() { if (this.rakz == false) { var rakf = this.ragb == "menu" ? "menu" : ""; rakf += this.ratf == rasv ? "" : " "; var $iconLv2Style_ = ""; var rawb = this.ragb == "menu" ? "" : "raba"; var rawd=""; if (this.ravy == "") { $iconLv2Style_ = "rabb"; } else { rawd="<span class=\"rabd rabb \" ><i class=\"" + this.ravy + "\"></i></span>"; } var raln="rui-event-lazyload"; if (this.rama.length < 5 ||this.rama.has("javascript")) { raln = ""; } var raim = "<li class='" + rakf + "'>"; raim+="<a class=\"raaq "+raln+"\" title=\"" + this.ravw + "\" id=\"nav_" + this.ragb + "\" href=\"" + this.rama+ "\">" +rawd+"<span class=\"lab " + $iconLv2Style_ + "\"><label>" + this.ravw + "</label></span></a><div class='clearfix'></div></li>"; var rakz = raoq.rakz(raim); if (this.ravz) { var rawe = rakz.raih("a", 0); rawe.raie("target").val("_blank"); rawe.raie("href").val(this.ravz); } this.rakz = rakz; } return this.rakz; }, rafi: function(ramf) { if (!this.rakz.raib("children").exist()) { this.rakz.raib("children").add(); this.rawf = raoq.rakz("<ul class='raam'></ul>"); this.rakz.rafi(this.rawf.rahi()); } this.rawf.rafi(ramf); }, rakz: false, rawf: false, ravw: "", ragb: "", rama: "", ravy: ""};rale.rafi("rui-admin-header", raoq.rakk.raso);$(window).scroll(function(){ var scan=91; var rawg=$(".rabe"); if($(window).scrollTop()>=scan) { for(var rafl=0;rafl<rawg.length;rafl++){ var rann=$(rawg[rafl]); var ravd=$("#"+rann.attr("target")); ravd.attr("width",ravd.width()); if(!ravd.hasClass("rabf")){ ravd.attr("top",$(".raab").height()+Number('"@row.span"'.change("px",""))); ravd.addClass("rabf"); } rann.css("height",ravd.height()+Number('"@row.span"'.change("px",""))).css("display","block").html("&nbsp;"); ravd.css("width", ravd.attr("width")); ravd.css("top",ravd.attr("top")+"px"); } $("body").addClass("rui-fixed"); }else{ $("body").removeClass("rui-fixed"); for(var rafl=0;rafl<rawg.length;rafl++){ var rann=$(rawg[rafl]); rann.hide(); var ravd=$("#"+rann.attr("target")); ravd.css("top","initial").css("width","initial"); } } });rawh={};raoq.ramm=function(className){ var layoutView=false; if(typeof className =='string'){ if(rawh[className]==null){ rawh[className]=$(className).prop("outerHTML")+""; $(className).remove(); } layoutView=$(rawh[className]); }else{ layoutView=$(className.prop("outerHTML")); } return { rami:className, ramm:layoutView, rawi:false, rawk:function(){ var SCRIPT_REGEX = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi; this.layout=(this.layout+"").replace(SCRIPT_REGEX, ''); return this; }, setAdapter:function(iAdapter){ this.rawi=iAdapter; return this; }, replace:function(json){ var html=this.ramm.prop("outHTML"); for(var ranh in json){ var raig=json[ranh]; html.change("@{"+$key+"}",raig); } this.ramm=$(html); return this; }, html:function(){ return this.ramm.prop("outHTML"); }, object:function(){ return this.ramm; }, bind:function(raow){ for(var ranh in raow){ var raig=raow[ranh]; this.ramm.find("[data-name='"+ranh+"']").html(raig); this.ramm.find("[name='"+ranh+"']").html(raig); if(this.rawi!=false){ this.rawi(this.ramm,key,raow); } } var ranm=["href","title","id","value","class"]; for(var rann=0;rann<ranm.length;rann++){ var rano=ranm[rann]; var ranlhref_=this.ramm.find("["+ rano+"]"); for(var rafl=0;rafl<ranlhref_.length;rafl++){ var ramf=$(ranlhref_[rafl]).attr(rano); if(ramf!=null&& ramf!=""){ ranq =ramf.match(/\{[\s\S]*?\}/ig); if(ranq==null)ranq=[]; for(var rans=0;rans<ranq.length;rans++){ var rant=ranq[rans].change('{',""); rant=rant.change('}',""); ramf=ramf.change(ranq[rans],raow[rant]); } $(ranlhref_[rafl]).attr(rano,ramf); } } } return this; }, _display:"block", display:function(value){ this._display=value; return this; }, appendTo:function(parent){ $(parent).append( this.ramm); rais.rall(this.ramm); }, prependTo:function(parent){ $(parent).prepend($(this.ramm)); rais.rall(this.ramm); } };};raoq.rakk.rawl = raoq.raib.rait();raoq.rakk.rawl.prototype = { raiv: function(rata) { var jq = rata.rahi(); var rawm = jq.children(); var raty = $("<div class='rabg'></div>"); var rawn = $("<div class='rabh'></div>"); for (rafl = 0; rafl < rawm.length; rafl++) { rawo = $("<div class='rabi'></div>"); rawo.append(rawm[rafl]); rawn.append(rawo); } raty.append(rawn); jq.html("").append(raty); }};raoq.rakk.rakf.rawl = "rui-row"; rale.rahs(raoq.rakk.rakf.rawl, raoq.rakk.rawl);raoq.rakk.rawq = raoq.raib.rait();raoq.rakk.rawq.prototype = { ramm: false, ranl: false, rakz: false, raws: false, rawt: false, raiv: function(rata, rakk) { this.raws = "rui-list-" + rakk.rake; var rawv = $.parseHTML("<div>" + rata.rahi().children().eq(0).prop("outerHTML") + "</div>"); this.ramm = $(rawv).addClass("rabk"); this.ranl = $("<div></div>").addClass(this.raws); rata.raim(""); rata.rahi().addClass(rais.raiw.raiz); rata.rafi(this.ranl); this.rawt = raoq.raww("rui-list", this.ranl); }, rawy: 0, showLoading: function() { this.rawy = 0; $("." + this.raws).find(".rabk").remove(); this.rawt.rawz(); }, hideLoading: function(raya) { this.rawt.rayb(raya); }, append: function(json) { this.hideLoading(); this.rawy++; json["index"] = this.rawy; raoq.ramm(this.ramm).bind(json).appendTo("." + this.raws); }, appends: function(jsons) { for (var rafl = 0; rafl < jsons.length; rafl++) { this.append(jsons[rafl]); } }, prepend: function(json) { raoq.ramm("." + this.rayd).bind(json).prependTo("." + this.raws); }, set: function() { }};raoq.rakk.rakf.rawq = "rui-list"; rale.ramq(raoq.rakk.rakf.rawq, raoq.rakk.rawq);rale.ramv("rui.list.index", function() { var widget = new rui.widget("rui.list.index"); widget.setJQRender(function(jqObject, model) { var index = Number(jqObject.attr("value")); var macColors = raoq.raye.magicc('"@color"'.split(";")[0]); if (index > 3) index = 3; var indexView = $("<b data-name='index'></b>").css("backgroundColor", macColors[index]); jqObject.html(indexView).addClass("rabl"); return indexView; }); return widget;});rale.rams("rui.tabs", function() { var widget = new rui.widget("rui.tabs"); widget.active = function(name) { $("#ruiTabHandle" + name).click(); }; widget.setJQRender(function(rahi, model) { var rayf = rahi.children("div"); var rawm = []; for (rafl = 0; rafl < rayf.length; rafl++) { var ramf = {}; ramf["name"] = $(rayf[rafl]).attr("data-name"); ramf["title"] = $(rayf[rafl]).attr("data-title"); var raim=$(rayf[rafl]); raim.find("script").remove(); ramf["html"] = raim; rawm.push(ramf); } rayf.remove(); var panel = $("<div class='rabm'></div>"); var tabs = $("<span class='rabn'></span>"); rahi.append(tabs); rahi.append(panel); for (rafl = 0; rafl < rawm.length; rafl++) { ramf = rawm[rafl]; var handle = "rabo-" + rafl; var link = $("<a>" + ramf["title"] + "</a>"); link.attr("id", "ruiTabHandle" + ramf["name"]); link.attr("target", handle); if (rafl == 0) link.addClass("active"); tabs.append(link); link.click(function() { var fChild = panel.children(".rabo").eq(0); var target = $(this); target.parent().find("a").removeClass("active"); target.addClass("active"); panel.children(".rabo").hide(); panel.children("." + target.attr("target")).show(); }); if (rafl != 0) { ramf["html"].hide(); } panel.append(ramf["html"].addClass(handle).addClass("rabo")); } panel.append("<div class=\"clearfix\"></div>"); return panel; }); widget.setTitle = function(title, icon) { this.view.find(".title").html(title); if (icon != null) { this.view.find(".icon").replaceWith(icon); } }; return widget;}); rale.ramv("rui.panel.survey", function() { var widget = new rui.widget("rui.panel.survey"); widget.active = function(name) { this.view.find(".rabq").removeClass("active"); this.view.find(".rabq-" + name).addClass("active"); }; widget.setJQRender(function(rahi, model) { var rayf = rahi.children("a"); var rawm = []; for (rafl = 0; rafl < rayf.length; rafl++) { var ramf = {}; ramf["name"] = $(rayf[rafl]).attr("data-name"); ramf["unit"] = $(rayf[rafl]).attr("data-unit"); ramf["href"] = $(rayf[rafl]).attr("href"); ramf["title"] = $(rayf[rafl]).html(); rawm.push(ramf); } rayf.remove(); var panel = $(rahi.prop("outerHTML")).removeClass("rui-panel-survey"); panel.attr("data-render", "rui-panel"); panel.removeAttr("id"); panel.addClass("rui-table-layout"); var table = $("<table cellspacing='0' cellpadding='0' class='rui-ml rui-mb'><tr></tr></table>"); panel.append(table); for (rafl = 0; rafl < rawm.length; rafl++) { var a = $("<a class='rui-ml rabq rabq-" + rawm[rafl].name + "'>" + rawm[rafl].title + "<span><label name='" + rawm[rafl].name + "' class='rui-fs-24'>--</label>" + rawm[rafl].unit + "</span>" + "</a>"); a.attr("href", rawm[rafl].href); table.find("tr").append($("<td></td>").append(a)); } rahi.append(panel); rais.rall(rahi); rahi.children("h3").remove(); return panel; }); widget.setTitle = function(title, icon) { this.view.find(".title").html(title); if (icon != null) { this.view.find(".icon").replaceWith(icon); } }; return widget;});rayg = function(tit) { var rayh = $("<label></label>"); rayh.append("<i></i>"); rayh.append(tit); return rayh;};raoq.rakk.rayi = raoq.raib.rait();raoq.rakk.rayi.prototype = { raiv: function(rata, rakd) { var target = rata.rahi() ; target.addClass(rais.raiw.raiz); if (target.hasClass("fixed")) { target.after("<div class='rabe' target='" + rakd.rake + "'></div>"); } target.attr("id", rakd.rake); target.addClass("rabs"); var rayk = target.attr("data-fix-height"); if (rayk != null && rayk != "") { var rayl = rakd.rake; setInterval(function() { $("#" + rayl).height($(rayk).height()).css("overflow","hidden"); }, 1000); } var title = $("<h3></h3>"); if (target.children("h3").length > 0) { title = target.children("h3").eq(0); title.remove(); } title.addClass("rabt"); var options = $("<span class='rabv'><span>"); options.html(title.html()); var titleLabel = $("<label></label>"); if (target.attr("data-icon")) { titleLabel.append("<i class='" + target.attr("data-icon") + "'>&nbsp;</i>"); } else { titleLabel.append("<i class='icon rabw'>&nbsp;</i>"); } titleLabel.append("<font class='title' >" + target.attr("data-title") + "</font>"); title.html(""); title.append(titleLabel); var h4 = target.children("h4"); if (h4.length > 0) { h4 = h4.eq(0); h4.find("a").each(function() { options.append($(this).prop("outerHTML")); }); var h4View = $("<h4></h4>").addClass("h3"); h4Title = rayg(h4.attr("data-title")); h4View.append(h4Title); h4View.append(options); h4View.css("marginBottom", 16); h4.replaceWith(function() { return h4View; }); } else { title.append(options); } var bodyHtml = target.html(); var body = $("<div class='raby'></div>"); body.append(bodyHtml); target.html(""); if (target.attr("data-title") != "disabled" && target.attr("data-title") != null) { target.html("").append(title); } target.append(body); target.append("<div class='clearfix'></div>"); rais.rall(target); this.rana = target; }, rana: false, append: function(html) { var list = this.rana.find(".cd-auto-content"); if (!list.hasClass("cd-auto-list")) { list.addClass("cd-auto-list"); list.prepend("<div class='cd-auto-children'></div>"); } list.find(".cd-auto-children").append(htm); }, setTitle: function(title, icon) { this.rana.find(".title").html(title); if (icon != null) { this.rana.find(".icon").replaceWith(icon); } }, rany: "input,INPUT,textarea,TEXTAREA,select,SELECT", set: function(data) { var ranw = []; ranw = $.merge(ranw, this.rana.find("[name]")); ranw = $.merge(ranw, this.rana.find("[data-name]")); for (var rafl = 0; rafl < ranw.length; rafl++) { var ranz = $(ranw[rafl]); var raoa = ranz.attr("name") ? ranz.attr("name") : ranz.attr("data-name"); if (raoa == null) continue; if (this.rany.indexOf(ranz.get(0).tagName) != -1) { ranz.val(data[raoa]); ranz.trigger("change"); } else { ranz.html(data[raoa]); } } },};rale.rahs("rui-panel", raoq.rakk.rayi);raoq.rakk.raym = raoq.raib.rait();raoq.rakk.raym.prototype = { rayn: false, rakd: false, rayo:true, raiv: function(rata, rakd) { this.rakd = rakd; this.rayn = $("<div class='rabz'></div>"); var rakg = this; this.rayn.click(function() { if(rakg.rayo) { $(this).parent().hide(); $("body").css("overflow-y","auto"); } }); var rayq = $("<div></div>").attr("id", rakd.rake); rayq.addClass(rais.raiw.raiz); rayq.addClass("rui-modal rada" ); rayq.append(this.rayn); var rays = $("<div></div>").addClass("radb"); rays.append(rata.rahi()); rayq.append(rays); $("body").append(rayq); this.rana = rayq; rais.rall(rayq, true); rayq.find("[data-event='rui.modal.close']").click(function() { if(rakg.rayo){ rakg.hide(); $("body").css("overflow-y","auto"); } }); }, rana: false, afterView: function(fun) { fun(this.rana); }, lockShow:function(data){ this.rayo=false; this.show(data); }, fullShow:function(data,callback){ var ravh= this.rana.find(".radb"); ravh.width( $(window).width()); ravh.height($(window).height()); var $checkPanel0_= ravh.children(".rabs"); if($checkPanel0_.length>0){ $checkPanel0_.height($(window).height()); var $panel0BodyHeight_=$(window).height()-$checkPanel0_.find(".rabt").height(); $checkPanel0_.find(".raby").height($panel0BodyHeight_); } this.show(data,callback); }, show: function(data,callback) { $("body").css("overflow-y","hidden"); this.rana.show(); if (data != null) { var rany = "input,INPUT,textarea,TEXTAREA,select,SELECT"; var ranw = this.rana.find("[data-name]"); for (var rafl = 0; rafl < ranw.length; rafl++) { var ranz = $(ranw[rafl]); var raoa = ranz.attr("name") ? ranz.attr("name") : ranz.attr("data-name"); if (raoa == null) continue; if (rany.indexOf(ranz.get(0).tagName) != -1) { ranz.val(data[raoa]); ranz.trigger("change"); } else if (ranz.get(0).tagName == "IMG" || ranz.get(0).tagName == "IFRAME") { ranz.attr("src", data[raoa]); } else { ranz.html(data[raoa]); } } } if(callback!=null) callback(data); this.fixed(); }, fixed: function() { var rayt = $(window).height() / 2; var rayv = this.rana.find(".radb").height() / 2; this.rana.find(".radb").css("marginTop", rayt - rayv); }, hide: function(title) { this.rana.hide(); }};rale.rafi("rui-modal", raoq.rakk.raym);raoq.rayw = {};raoq.rayw.alert = function(message, title) { var raog = {}; raog["message"] = message; if (title != null) raog["title"] = title; rui("#rui_modal_alert").widget( "rui-modal", "<div data-render='rui.panel' data-title='提示' ><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><div style='padding: 16px 32px 32px 32px;' data-name='message'></div></div>") .show(raog);};raoq.rayw.check = function(message, checkListener,cancelListener) { var raog = {}; raog["message"] = message; rui("#rui_modal_check").widget( "rui-modal", "<div data-render='rui.panel'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><div style='padding:16px 32px;' data-name='message'></div>" + "<span class='radd'><a class='rui-ant-button primary'>确认</a>&nbsp;&nbsp;&nbsp;<a data-event='rui.modal.close' class='rui-ant-button cancel'>取消</a></span>" + "</div>") .show(raog); var sureBtn=$("#rui_modal_check").find(".primary"); sureBtn.unbind("click").click(function() { checkListener(); }); var cancelBtn=$("#rui_modal_check").find(".cancel"); if(cancelListener!=null){ cancelBtn.unbind("click").click(function() { cancelListener(); }); } };raoq.rayw.hideCheck = function() { rui("#rui_modal_check").widget().hide();}; rui.modal=raoq.rayw; raoq.openCoder = function() { raoq.rags("com/syntaxhighlighter/styles/shCore.css"); raoq.rags("com/syntaxhighlighter/styles/shThemeDefault.css"); raoq.ragn("com/syntaxhighlighter/shCore.js", function() {}); raoq.ragn("com/syntaxhighlighter/shBrushBash.js", function() {}); raoq.ragn("com/syntaxhighlighter/shBrushCSharp.js", function() {}); raoq.ragn("com/syntaxhighlighter/shBrushJava.js", function() {}); raoq.ragn("com/syntaxhighlighter/shBrushJScript.js", function() {}); raoq.ragn("com/syntaxhighlighter/shBrushPhp.js", function() {});};if (raoq.raga("coder")) { raoq.openCoder();}raoq.rakk.rayy = raoq.raib.rait();raoq.rakk.rayy.prototype = { rayz: false, raza: false, rana: false, razb: false, razd: false, raiv: function(rata, rakd) { var rahf = rata.rahi(); var ravw = rahf.attr("data-title"); var scp = rahf.find("script"); this.raza = (scp.text() + "").change("\\<\\!\\[CDATA\\[", ""); this.raza = this.raza.change("\\]\\]\\>", ""); scp.remove(); this.rayz = rahf.find("code").html(); rahf.find("code").remove(); var raze = rahf.html(); this.rana = rata.rahi().html(""); var razf = $("<div></div>").attr("id", rakd.rake).addClass("rade"); var razb = $("<div class='radf'></div>"); razb.append($.parseHTML(this.rayz)); razf.append(razb); var rakg = this; razb.find("[data-coder-event='click']").click(function() { $("body").append("<script>" + rakg.raza + "</script>"); }); if (razb.find("[data-coder-event='load']").length > 0) { razb.append("<span class='loading'><i class=' fa fa-cog fa-spin'></i>控件加载中,请稍后...<span>"); setTimeout(function() { razb.find(".loading").remove(); $("body").append("<script>" + rakg.raza + "</script>"); }, 2000); } var razg = $("<div class='radg'><div class='radh'><label>" + ravw + "</label></div></div>"); razg.append("<div class='radi'>" + raze + "</div>"); this.razd = $("<div class='radk'></div>"); razg.append(this.razd); var razh = $("<div class='radl'></div>"); var razi = $("<a><i class='fa fa-code'></i>查看代码</a>"); razi.attr("target", rakd.rake); var instance = this; razi.click(function() { if (instance.showCode() == "open") { $(this).html("<i class='fa fa-code'></i>隐藏代码"); } else { $(this).html("<i class='fa fa-code'></i>查看代码"); } }); razh.append(razi); razg.append(razh); razf.append(razg); this.rana.replaceWith(razf); return razf; }, showCode: function() { var razk = this.razd; if (razk.attr("status") == "inited") { if (razk.is(":hidden")) { razk.show(); return "open"; } else { razk.hide(); return "close"; } } razk.attr("status", "inited"); razk.html("<i class='fa fa-cog fa-spin'></i>"); var razl = $("<pre class='brush:js'>" + this.raza + "</pre>"); razk.show().append(razl.hide()); SyntaxHighlighter.highlight(); setTimeout(function() { razk.find("i").remove(); razl.show(); }, 1000); return "open" }, set: function() { }};rale.rafi("rui-coder", raoq.rakk.rayy);raoq.raww = function(razm, rahk) { var rawt = { ranl: $("<div class='"+razm+"-loading'><a><i class='fa fa-refresh fa-spin'></i>&nbsp;正在加载数据,请稍后...</a></div>"), rawz: function() { this.ranl.show(); }, rayb: function(raya) { if(raya!=null){ this.ranl.find("a").html(raya); }else this.ranl.hide(); } }; if (rahk != null) { rahk.append(rawt.ranl); } return rawt;}; raoq.rakk.ramf = raoq.raib.rait();raoq.rakk.ramf.razn = function(razo) { raly = $(razo).children(ragy); rawq = []; for (var rafl = 0; rafl < raly.length; rafl++) { var razq = $(raly[rafl]); rawq.push({ "ravw": razq.html(), "ragb": razq.attr("name"), "rafg": razq.attr("href"), "rahz": razq.attr("onclick"), "razs": razq.attr("data-unit"), "ravy": razq.attr("data-icon") }); } return rawq;};raoq.razt = function(num, decimal) { num = num.toString(); var index = num.indexOf('.'); if (index !== -1) { num = num.substring(0, decimal + index + 1); } else { num = num.substring(0); } return parseFloat(num).toFixed(decimal);};raoq.rakk.razv = raoq.raib.rait();raoq.rakk.razv.prototype = { ranl: false, rana: false, rakf: "", raiv: function(rata) { rahf = rata.rahi(); if (rahf.hasClass(raoq.rakk.rakf.razv)) { this.rakf = raoq.rakk.rakf.razv; rahf.addClass("grid"); } if (rahf.hasClass(raoq.rakk.rakf.rags)) { this.rakf = raoq.rakk.rakf.rags; var razw = rahf.prev(); if (razw.length == 0) rahf.addClass("radm"); } var rawm = raoq.rakk.ramf.razn(rahf); rahf.html("<div class='radn'></div><em class='clearfix'></em>"); this.rana = rahf.children("div").eq(0); var rahy = raoq.razt(100 / rawm.length, 4) + "%"; for (var rafl = 0; rafl < rawm.length; rafl++) { rawm[rafl]["width"] = rahy; rawm[rafl]["index"] = rafl; this.rafi(rawm[rafl]); } }, razy: function(ramf, cell) { cell.addClass("rado"); cell.append("<span class='radq'><em><label>" + ramf["ravw"] + "</label></em></span>"); var data = $("<span class='rads'></span>"); if (ramf["ravy"] != null) { data.append("<i class='i'>&nbsp;</i>"); cell.addClass("clean-grid-icon"); cell.find(".radq").prepend("<em class='i index-" + ramf["index"] + "'><i class='" + ramf["ravy"] + "'></i></em>"); } data.append("<label class='radt' name='" + ramf["ragb"] + "' >--</label><em>" + ramf["razs"] + "</em>"); cell.append(data); }, razz: function(ramf, cell) { if (ramf["ravw"] == "") { cell.append("<span class='radv'><span>"); return; } cell.append("<span class='radw'><em class='i index-" + ramf["index"] + "'><i class='" + ramf["ravy"] + "'></i></em></span>"); cell.append("<span class='rady'><em><label>" + ramf["ravw"] + "</label></em></span>"); }, rafi: function(ramf) { var action = ramf["rafg"]; var rahz = ramf["rahz"]; var panel = $("<a class='radz'></a>"); panel.css("width", ramf["width"]); if (ramf["index"] == 0) { panel.addClass("first"); } var cell = $("<div></div>"); if (action && action != "") { panel.attr("href", action); } if (rahz && rahz != "") { panel.attr("onclick", rahz); } if (this.rakf == raoq.rakk.rakf.razv) { this.razy(ramf, cell); } if (this.rakf == raoq.rakk.rakf.rags) { this.razz(ramf, cell); } panel.append(cell); this.rana.append(panel); }};raoq.rakk.rakf.razv = "rui-row-grid";rale.rafi(raoq.rakk.rakf.razv, raoq.rakk.razv);raoq.rakk.rakf.rags = "rui-row-link";rale.rafi(raoq.rakk.rakf.rags, raoq.rakk.razv);rale.ramv("rui.table.layout.item", function() { var widget = new rui.widget("rui.table.layout.item"); widget.reload = function() {}, widget.title = ""; widget.setLayout("<a class='rui-table-layout-item'><span><label>@{title}</label></span><span name='@{name}'>&nbsp;</span></a>"); return widget;});rale.rams("rui.table.layout", function() { var box = new rui.widget("rui.table.layout"); box.setJQRender(function(ths, model) { var table = $(ths.prop("outerHTML")).removeClass("rui-table-layout"); var main = $("<div class='rui-table-layout'></div>").addClass(table.attr("class")); if (ths.attr("data-title") != null) { main.append("<label class='rui-table-layout-title'>" + ths.attr("data-title") + "</label>"); } ths.replaceWith(main); main.append(table); var items = table.find("td"); for (var i = 0; i < items.length; i++) { var item = $(items[i]); var name = item.attr("data-name") ? item.attr("data-name") : item.attr("name"); var itemBox = false; var renderName = false; if (typeof name != "undefined") { renderName = item.attr("data-render") == null ? "rui.table.layout.item" : item.attr("data-render"); var itemBox = $("<div></div>"); itemBox.attr("title", item.html()); itemBox.attr("name", name); item.html("").append(itemBox); } else { itemBox = item.children().eq(0); renderName = itemBox.attr("data-render"); } if (renderName) { renderName = renderName.split("?")[0].replace(/\./g, "-"); item.removeAttr("data-name name data-render"); var rakk = rais.rakm.rako(itemBox.attr("id") ? itemBox.attr("id") : null); var rakz = raoq.rakz(itemBox); var rald =new rale.ralf[renderName](rakz, rakk); rais.raks(rakk.rake).rakh(rald); } } return main; }); return box;});rale.ramv("rui.map", function() { var html = "<div class='raea' style='height:@{height}'></div>"; var map = new rui.widget("rui.map"); map.setPoint = function( lng,lat,zoom) { this.view.find(".raea").css("height", this.view.parent().height() + "px"); var mMapId = this.mapId; var timesamp = (new Date).getTime(); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t=" + timesamp, function(d) { var map = new BMap.Map(mMapId); var pt1 = new BMap.Point(lng, lat); map.centerAndZoom(pt1, zoom); $("#" + mMapId).css("background", "none"); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); }); }; mapId: false, map.setLayout(html, function(view, model) { this.mapId = this.view.attr("id") + "_handle"; this.view.find(".raea").attr("id", this.mapId); }); return map;});rale.ramv("rui.checkbox", function() { var raim = "<div class='raeb' >" +"<input valuetype='@{valuetype}' type='hidden' name='@{name}' class='val' >" +"<a href='javascript:void(0);'><span><i class='fa fa-square-o'></i></span><span>@{title}</span></a></div>"; var rbaa = new rui.widget("rui.checkbox"); rbaa.rbab=function(rbad){ }; rbaa.change=function(rafe){ rbaa.rbab=rafe; }; rbaa.checked=function(){ var rann= this.view.find("a"); var rbae=this.view.find(".val"); rbae.val(1); var rafl=rann.find("i"); rann.addClass("checked"); rafl.removeClass("fa-square-o").addClass("fa-check-square"); rbaa.rbab(true); }; rbaa.setLayout(raim, function(view, model) { var input=view.find(".val"); var valueType=input.attr("valuetype"); view.find("a").click(function(){ var rann=$(this); var rafl=rann.find("i"); if(rann.hasClass("checked")){ rann.removeClass("checked"); rafl.removeClass("fa-check-square").addClass("fa-square-o"); rbaa.rbab(false); input.val(valueType=="bool"?"false":0); }else{ rann.addClass("checked"); rafl.removeClass("fa-square-o").addClass("fa-check-square"); rbaa.rbab(true); input.val(valueType=="bool"?"true":1); } }); }); return rbaa;});rale.ramv("rui.metro.input", function() { var widget = new rui.widget("rui.metro.input"); widget.setLayout("<a>Metro Input@{name}</a>"); return widget;});rale.ramv("rui.upload.excel", function() { var inputWidget = $("<span><a class='rui-ant-button'><i class='fa fa-plus'></i>上传</a></span>"); inputWidget.append("<span style='display:none;'><form><input accept='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel' name='file' type='file' class='raed'></form></span>"); var widget = new rui.widget("rui.upload.excel"); widget.input = false; widget.reload = function() {}, widget.url = false, widget.getUrl = function() { return widget.url; }, widget.callback = false; widget.getCallback = function() { return widget.callback; }; widget.setUpload = function(url, callback) { widget.url = url; widget.callback = callback; }; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { view.find(".raed").change(function() { if (widget.getUrl()) { var form = new FormData($(this).parent()[0]); $(this).val(""); $.ajax({ url: widget.getUrl(), type: 'POST', cache: false, data: form, processData: false, contentType: false, dataType: "json", success: function(data) { widget.getCallback(data); if (raoq.rast["rui.upload.excel"] != null) { raoq.rast["rui.upload.excel"](data); } } }); } else { var files = view.find(".raed").prop('files'); var reader = new FileReader(); reader.readAsDataURL(files[0]); reader.onload = function(e) { var base64 = this.result.substring(this.result.indexOf(',') + 1); widget.event("upload", base64); } } }); view.find("a").click(function() { view.find(".raed").click(); }); }); return widget;});if (raoq.raga("table")) { raoq.rags("com/jquery/datatables/css/jquery.dataTables.min.css"); raoq.ragn("com/jquery/datatables/js/jquery.dataTables.min.js", function() {}); }raoq.rakk.rbaf = {}; raoq.rakk.rbag = raoq.raib.rait();raoq.rakk.rbag.prototype = { ramh: false, rakd: false, rawt:false, showLoading:function(){ this.rawt.rawz(); }, hideLoading:function(){ this.rawt.rayb(); }, raiv: function(rata, rbah) { this.rakd = rbah; this.ramh = rata.rahi(); this.ramh.addClass(rais.raiw.raiz); this.rawt = raoq.raww("rui-table", this.ramh); this.rawt.rayb(); var rbai = this.ramh.attr("class"); raoq.rakk.rbaf[rbah.rake] = { rbak: this.ramh.data(), raog: [], rbal: function(rbam) { if (rbam < this.raog.length) { return this.raog[rbam]; } else return {}; }, rban: function(rawl) { this.raog.push(rawl); }, setting: function(name, value) { if (value == null) { return this.rbak[name]; } else { this.rbak[name] = value; } } }; this.ramh.addClass("raee table table-striped simple") .attr("id", rbah.rake); var rbao = $("<tbody></tbody>"); this.ramh.append(rbao); var ranw = this.ramh.find("th"); var rbaq = []; for (var rafl = 0; rafl < ranw.length; rafl++) { var rbas = $(ranw[rafl]); var rash = { "name": rbas.attr("data-name") }; rash["rbat"] = rbas.attr("data-table-render") == null ? "" : rbas.attr("data-table-render"); rash["label"] = rbas.text(); rash["render"] = function(raog, rakf, rbav, rbaw) { var rbay = raoq.rakk.rbaf[rbah.rake].columns[rbaw.col]; if (rbay["rbat"] == "") { return "<span name='" + rbay["name"] + "' data-render='rui.text'></span>" } else { var rbaz=rbay["rbat"].split("?"); var rawl="<input name='" + rbay["name"] + "' data-render='" +rbaz[0] +"' "; if(rbaz.length>1){ var strs = decodeURI(rbaz[1]).split("&"); for (var rans = 0; rans < strs.length; rans++) { var rbba=strs[rans].split("="); rawl+="data-"+rbba[0]+"='"+rbba[1]+"' "; if(rbba[0]=="title"){ rawl+=rbba[0]+"='"+rbba[1]+"' "; } } } return rawl+" >"; } }; rbaq.push(rash); } raoq.rakk.rbaf[rbah.rake].columns = rbaq; if (rui.client.os("mobile")) { this.rbbb(); this.ramh.addClass(rbai); } else { var rbak = raoq.rakk.rbag.rbbd(rbah.rake); this.ramh.DataTable(rbak); this.ramh.parent().addClass(rbai); if (raoq.rakk.rbaf[rbah.rake].setting("mode") == "ajax") { var rbbe = this.ramh.parent().find(".dataTables_paginate"); rbbe.before("<div class='raef'>跳至<input class='raeg' value=1>页</div>"); this.ramh.parent().find(".raeg").attr("target", rbah.rake).bind("keyup", function() { $(this).val($(this).val().replace(/[\D]/g, "")); rui("#" + $(this).attr("target")).widget().page($(this).val()); }); this.ramh.parent().find(".dataTables_length").insertBefore(rbbe); } else { this.ramh.parent().find(".dataTables_length").hide(); } } }, page: function(val) { if (Number(val) == 0) { val = 1; $(this).val(1); } var number = Number(val) - 1; this.ramh.DataTable().page(number).draw(false); }, get: function(raii) { if (raii == null) raii = -1; var rawg = this.ramh.find(rui.client.os("mobile") ? ".raeh" : "tbody tr"); var rawq = []; for (var rafl = 0; rafl < rawg.length; rafl++) { var ramf = {}; var rbbf = $(rawg[rafl]).find("[name]"); for (var rans = 0; rans < rbbf.length; rans++) { var rbbg = $(rbbf[rans]); ramf[rbbg.attr("name")] = rbbg.val(); } rbbh={}; $.extend(rbbh, ramf); if (rafl == raii) { return rbbh; } rawq.push(rbbh); } return rawq; }, data:function(){ var rawg = this.ramh.find(rui.client.os("mobile") ? ".raeh" : "tbody tr"); var rawq = []; for (var rafl = 0; rafl < rawg.length; rafl++) { var ramf = {}; var rbbf = $(rawg[rafl]).find("[name]"); for (var rans = 0; rans < rbbf.length; rans++) { var rbbg = $(rbbf[rans]); ramf[rbbg.attr("name")] = rbbg.html(); } rawq.push(ramf); } return rawq; }, removeControl:function(){ this.ramh.parent().find(".dataTables_length,.dataTables_paginate,.dataTables_info").remove(); }, set: function(list) { raoq.rakk.rbaf[this.rakd.rake].raog=[]; this.ramh.DataTable().clear().draw(); for (var i = 0; i < list.length; i++) { this.append(list[i]); } }, getTh: function() { var rbbi=this.ramh.find("thead th"); var rbbk={}; for (var rafl = 0; rafl < rbbi.length; rafl++) { var ramf=$(rbbi[rafl]); rbbk[ramf.attr("data-name")]=ramf.html(); } return rbbk; }, appends:function(ds){ for(var i=0;i<ds.length;i++){ this.append(ds[i]); } }, append: function(data) { raoq.rakk.rbaf[this.rakd.rake].rban(data); if (rui.client.os("mobile")) { var ramf = this.rbbl(this.ramh.find(".raeh").length); this.ramh.find(".raei").append(ramf); this.rbbm(ramf, data); } else this.ramh.DataTable().row.add(data).draw(false); }, remove:function(index){ this.ramh.DataTable().rows( '.index-'+index ) .remove() .draw(); }, row:function(index){ return { row: this.ramh.find( '.index-'+index ), child:function(html,fun){ rbbn= this.row.children("td").length; this.row.after("<tr class='table-child-"+index+" content'><td colspan='"+rbbn+"'>"+html+"</td></tr>"); }, showChild:function(){ this.row.parent().find(".table-child-"+index).show(); }, hideChild:function(){ this.row.parent().find(".table-child-"+index).hide(); } }; }, refresh: function() { this.ramh.DataTable().reload(); }, setRowRender: function(fun) { raoq.rakk.rbaf[this.rakd.rake].setting("rowRender", fun); }, postBody: function(url, params, callback) { var rake = this.rakd.rake; raoq.rakk.rbaf[rake].setting("url", url); raoq.rakk.rbaf[rake].setting("params", params); raoq.rakk.rbaf[rake].setting("rbbotype_", "raw"); raoq.rakk.rbaf[rake].setting("ajaxCallBack", callback); if (rui.client.os("mobile")) { this.rbbq(); }else{ this.ramh.DataTable().ajax.reload(); } }, ajax: function(url, params, callback) { var rake = this.rakd.rake; raoq.rakk.rbaf[rake].setting("url", url); if (typeof params == "function") { callback = params; } else { raoq.rakk.rbaf[rake].setting("params", params); } if (callback != null) { raoq.rakk.rbaf[rake].setting("ajaxCallBack", callback); } if (rui.client.os("mobile")) { this.rbbq(); } else { this.ramh.DataTable().draw(false); } }};rale.rafi("rui-table", raoq.rakk.rbag);raoq.rakk.rbag.prototype.refresh = function(panelSelector) { var rbag = rais.raks(this.rakd.rake).raih(); var rbbs = raoq.rakk.rbaf[this.rakd.rake]; var rbbt = rbbs.setting("params") ? rbbs.setting("params") : {}; rbbs.setting("params", rbbt); if (rui.client.os("mobile")) { this.rbbq(); } else { rbag.ramh.DataTable().draw(false); }};raoq.rakk.rbag.prototype.rowClickListener = false;raoq.rakk.rbag.prototype.setRowClickListener = function(fun) { rowClickListener = fun; var widget = $("#" + this.rakd.rake); widget.find(rui.client.os("mobile") ? ".raeh" : "tbody").on('click', rui.client.os("mobile") ? "div" : "tr", function() { $(this).parent().find(".active").removeClass("active"); $(this).addClass("active"); fun($(this).attr("data-index"), $(this)); }); }; raoq.rakk.rbag.prototype.rowAppend = function(raii,trHTML) { var widget = $("#" + this.rakd.rake); widget.find("tbody tr").eq(raii).after(trHTML); }; raoq.rakk.rbag.prototype.rbbb = function() { var rbbv = $("<div><div class='raei'></div></div>").attr("id",this.rakd.rake); var rbbw = $("<a class='raek'>点击加载更多</a>").attr("target", this.rakd.rake); rbbw.click(function() { var rbby = $(this).attr("target"); var rbbt = raoq.rakk.rbaf[rbby].setting("params"); if (rbbt == null) { rbbt = {}; } var rafo = rbbt["start"]; if (rafo == null) { rbbt["start"] = 1; } else { rbbt["start"] = Number(rafo) + 1; } raoq.rakk.rbaf[rbby].setting("params", rbbt); rui("#" + rbby).widget().rbbq(); }); if (raoq.rakk.rbaf[this.rakd.rake].setting("mode") == "ajax") { rbbv.append(rbbw); } this.ramh.replaceWith(rbbv); this.ramh=$("#"+this.rakd.rake); };raoq.rakk.rbag.prototype.rbbq = function() { var rbby=this.rakd.rake; var rbag = raoq.rakk.rbaf[ rbby]; var raog = rbag.setting("params") ? rbag.setting("params") : {}; if (raog["start"] == null) raog["start"] = 0; var rakg = this; if (!rbag.setting("url")) { return; } var rbbz = rbag.setting("rbbotype_"); $.ajax({ type: 'post', cache: false, dataType: 'json', contentType: 'application/json', data: rbbz ? JSON.stringify(raog) : raog, url: rbag.setting("url"), success: function(raqo) { if (raqo.data.length == 0) { $(".raek").addClass("nodata").html("没有更多数据了~~"); } if (raog["start"] == 0) { rakg.ramh.find(".raei").html(""); } for (var rafl = 0; rafl < raqo.data.length; rafl++) { var rbda = raqo.data[rafl]; if (rbag.setting("rowRender")) { rbda = rbag.setting("rowRender")(raqo); } raoq.rakk.rbaf[rakg.rakd.rake].rban(rbda); raqo.data[rafl]["_rui_index"] = rafl; var rawl = rakg.rbbl($("#" + rakg.rakd.rake).find(".raeh").length); rakg.ramh.find(".raei").append(rawl); rakg.rbbm(rawl, raqo.data[rafl]); rakb = rais.raks(rbby).raih(); var ralm = $(rawl).attr("data-index", rafl).addClass("index-"+ rafl).find("[data-render]"); if (rakb.rowClickListener) { $(rawl).unbind("click").on('click', 'tr', function() { rakb.rowClickListener($(this).attr("data-index"), $(this)); }); } } if (rbag.setting("ajaxCallBack")) { rbag.setting("ajaxCallBack")(raqo); } }, error: function() {} });};raoq.rakk.rbag.prototype.rbbm = function(rawl, raog) { var ralm = rawl.find("[data-render]"); for (rafl = 0; rafl < ralm.length; rafl++) { var obj = $(ralm[rafl]); var render = obj.attr("data-render"); var renderName = render.split("?")[0]; renderName = renderName.replace(/\./g, "-"); var rakk = rais.rakm.rako(obj.attr("id")); rakk.data = {}; if (render.split("?").length > 1) { rakk.ragf = render.split("?")[1]; } var rakz = raoq.rakz(obj); if (rale.ralf[renderName] == null) { obj.html("未配置:" + renderName); } else { var rald = new rale.ralf[renderName](rakz, rakk); rald.set(raog); rais.raks(rakk.rake).rakh(rald); } } };raoq.rakk.rbag.prototype.rbbl = function(raii) { var rbdb = raoq.rakk.rbaf[this.rakd.rake].columns; var rawl = $("<div></div>").addClass("raeh").attr("data-index", raii); if (this.rowClickListener) { rawl.unbind("click").click(function() { this.rowClickListener($(this).attr("data-index"), $(this)); }); } for (var rafl = 0; rafl < rbdb.length; rafl++) { var rbdd = rbdb[rafl]; if (rbdd["rbat"] == "") rbdd["rbat"] = "rui.text"; var rbde = $("<div class='rael'><span class='raem'><label>" + rbdd["label"] + "</label></span></div>"); var rald = $("<span class='raen'><input name='" + rbdd["name"] + "' data-render='" + rbdd["rbat"] + "'></span>"); rbde.append(rald); rawl.append(rbde); } return rawl;};raoq.rakk.rbag.rbbd = function(rbby) { var rbdf = function(ranh, rbdg) { if (rbdg) { return rbdf(ranh) == rbdg; } else { return raoq.rakk.rbaf[rbby].setting(ranh); } }; var rbak = { "searchDelay": 3600, "autoWidth": false, "orderMulti": true, "processing": true, "destroy": true, "pagingType": "full_numbers", "ruiDrawCount": 0, "drawCallback": function(settings) {} }; rbak["language"] = { "lengthMenu": " _MENU_条/页", "-zeroRecords": "没有找到记录", "zeroRecords": "&nbsp;", "info": "共 <span class='totaldis'>_TOTAL_ </span>条记录", "infoEmpty": "无记录", "infoFiltered": "", "search": "", "processing": "<a class='rui-table-loading'>正在加载数据,请稍后...</a>", "paginate": { "first": "<i class='fa fa-angle-double-left'></i>", "previous": "<i class='fa fa-angle-left'></i>", "next": "<i class='fa fa-angle-right'></i>", "last": "<i class='fa fa-angle-double-right'></i>", "paginate": "<span class='btn-pager'>末页</span>" } }; rbak["columns"] = raoq.rakk.rbaf[rbby].columns; rbak["serverSide"] = rbdf("mode", "ajax"); rbak["paging"] == !rbdf("page", "disabled"); if (rbdf("length")) { disLength = rbdf("length"); } else if (rbdf("mode") == "ajax") { disLength = 12 } else { disLength = 100000; } rbak["lengthMenu"] = [disLength, 25, 50]; rbak["ordering"] = rbdf("order", "enabled"); if (rbdf("unsort")) { var columnDefs = []; var disColumsNumbers = rbdf("unsort").split(","); for (var i = 0; i < disColumsNumbers.length; i++) { columnDefs.push({ "orderable": false, "targets": disColumsNumbers[i] }) } setting["columnDefs"] = columnDefs; } rbak["createdRow"] = function(row, data, index) { data["_rui_index"] = index; data["getIndex"] =function(){ return index; }; data["index"] = index + 1; rakb = rais.raks(rbby).raih(); if (rbdf("rowRender")) { data = rbdf("rowRender")(data); } var ralm = $(row).attr("data-index", index).addClass("index-"+index).find("[data-render]"); if (rakb.rowClickListener) { $(row).unbind("click").on('click', 'tr', function() { rakb.rowClickListener($(this).attr("data-index"), $(this)); }); } for (rafl = 0; rafl < ralm.length; rafl++) { var obj = $(ralm[rafl]); var render = obj.attr("data-render"); var renderName = render.split("?")[0]; renderName = renderName.replace(/\./g, "-"); var rakk = rais.rakm.rako(obj.attr("id")); rakk.data = data; var rakz = raoq.rakz(obj); if (rale.ralf[renderName] == null) { obj.html("未配置:" + renderName); } else { var rald = new rale.ralf[renderName](rakz, rakk); rald.set(data); rais.raks(rakk.rake).rakh(rald); } } }; rbak["ajax"] = function(data, callback, settings) { if (rbdf("url")) { var raog = rbdf("params") ? rbdf("params") : {}; raog = $.extend( raog,data); var rbbz = rbdf("rbbotype_"); $.ajax({ type: 'post', cache: false, dataType: 'json', contentType: 'application/json', data: rbbz ? JSON.stringify(raog) : raog, url: rbdf("url"), success: function(raqo) { callback(raqo); raoq.rakk.rbaf[rbby].raog = raqo["data"]; if (rbdf("ajaxCallBack")) { rbdf("ajaxCallBack")(raqo); } $(".rui-table-" + rbby).removeClass("fa-spin"); }, error: function() {} }); } else { if (typeof this.ruiTableVDrawCount == "undefined") { this.ruiTableVDrawCount = 1; } this.ruiTableVDrawCount++; var res = {}; res["draw"] = this.ruiTableVDrawCount; res["iTotalRecords"] = 0; res["length"] = 0; res["recordsFiltered"] = 0; res["recordsTotal"] = 0; res["data"] = []; callback(res); } }; return rbak;};raoq.rakk.rbag.prototype.appendToPanel = function(panelSelector) { if (rui.client.os("mobile")) return; var rbag = rais.raks(this.rakd.rake).raih(); var rbdh = $(panelSelector).find(".rabv"); var rbdi = $("<a href='javascript:void(0);'><i class='rui-table-" + rbag.rakd.rake + " fa fa-refresh'></i>刷新</a>"); rbdh.append(rbdi); rbdi.unbind("click").click(function() { $(this).find(".fa-refresh").addClass("fa-spin"); rbag.refresh(); }); };rale.ramv("rui.table.link", function() { var widget = new rui.widget("rui.table.link"); widget.reload = function() {}; widget.setLayout( "<a class='rui-table-link-pri' target='_blank' href='@{href}?@{name}={@{name}}' >查看&nbsp;<i class='fa fa-angle-double-right'></i></a>", function(view) { view.addClass("rui-table-link"); if(rui.client.os("mobile")){ view.find(".rui-table-link-pri").addClass("rui-ant-button primary") .removeClass("rui-table-link-pri"); } }); return widget;});rale.ramv("rui.table.datalink", function() { var widget = new rui.widget("rui.table.datalink"); widget.reload = function() {}; widget.setLayout( "<a class='rui-table-link value-{@{name}}' rui-javascript='@{javascript}' rui-args='@{args}' target='_blank' href='@{href}?@{name}={@{name}}' ><font label='@{label}' name='@{name}'></font></a>", function(view,predata) { view = view.children("a").eq(0); var label = view.find("font"); var icon=predata["icon"]; if (label.attr("label") != "undefined" && !(label.attr("label") + "").has('{')) { label.html(label.attr("label")).removeAttr("name"); if(icon){ if(icon=="dialog"){ label.prepend("<i class='fa fa-clone'>"); label.append("&nbsp;"); }else{ label.append("&nbsp;"); label.append("<i class='fa fa-angle-double-right'>"); } } } var arg = view.attr("rui-args"); var js = view.attr("rui-javascript"); if (arg != null && js != null) { var args = arg.split(","); js = "javascript:" + js + "('"; for (var i = 0; i < args.length; i++) { js += args[i] + "','"; } js += "0');"; view.attr("href", js); view.removeAttr("target"); view.unbind("click").click(function() { if ($(this).hasClass("value-0")) { return false; } }); } }); return widget;}); rui("widget.extends",function(){ var ruiExtendsNavbar=new rui.widget("rui.navbar"); ruiExtendsNavbar.setJQRender(function(jqObject,model){ var initAS=jqObject.children("a"); jqObject.children("a").remove(); var tmp=jqObject.html(); var link={}; var lineLen=0; for(var i=0;i<initAS.length;i++){ lineLen++; var initA=$(initAS[i]); link["line"+i]={"title":initA.html(),"href":initA.attr("href")?initA.attr("href"):"javascript:void(0);"}; } var rbdk=$("<div><span class=\"rui-menu-control\">"+ "<a class=\"rui-open-menu-control\"><i class=\"fa fa-outdent close\" ></i><i class=\"fa fa-indent open\"></i></a>"+ "</span></div>"); jqObject.html(rbdk); jqObject.append(tmp); var linkHTML=$("<span></span>").addClass("ronri-rais-profile-msg"); var index=0; for(var name in link ){ index++; var rbdl=(index<lineLen)?"<i class=\"dot\">/</i>":""; var rbdm=(index==lineLen)?"active":""; linkHTML.append("<a class='"+rbdm+"' href='"+link[name].href+"'>"+link[name].title+rbdl+"</a>"); } rbdk.append(linkHTML); var rbdn=$("<span class=\"rui-navbar-control-pri\"><a href='javascrpit:void(0);'><i class='fa fa-chevron-left'></i>&nbsp;返回</a></span>"); rbdn.click(function(){ mHeader.back(); }); rbdk.find(".rui-menu-control").click(function(){ model.getWidget().event("changeMenu"); }); }); return ruiExtendsNavbar;}); rui("widget.extends",function(){ var ronriRaisProfile= new rui.widget("ronri.rais.profile"); ronriRaisProfile.setJQRender(function(jqObject,value){ var initAS=jqObject.children("a"); var messages={}; var messagesLen=0; for(var i=0;i<initAS.length;i++){ messagesLen++; var initA=$(initAS[i]); messages[initA.attr("name")?initA.attr("name"):initA.attr("data-name")]={"title":initA.html(),"href":initA.attr("href")?initA.attr("href"):"javascript:void(0);"}; } var userHTML=$("<span>"+ "<p class='h2'>欢迎您! <font name='user_nickname'>--</font></p>"+ "<p>上次登录于<font name='last_login_time'>--</font></p>"+ "</span>"); jqObject.html(userHTML); var msgHTML=$("<span></span>").addClass("ronri-rais-profile-msg"); var index=0; for(var name in messages ){ index++; var rbdo=(index==messagesLen)?"last":""; msgHTML.append("<a href='"+messages[name].href+"'><label>"+messages[name].title+"</label><em class='"+rbdo+"' name='"+name+"' >--</em></a>") } jqObject.append(msgHTML); if(jqObject.parent().hasClass("rui-navbar")){ jqObject.parent().addClass("ronri-rais-profile-group"); } return jqObject; }); return ronriRaisProfile;});var baiduMapTheme = [ { "featureType": "background", "elementType": "all", "stylers": { "color": "#ffffff", } } ];function ComplexCustomOverlay(point,data){ this._point = point; this.data=data; }rui("widget.extends",function(){ var html="<div class='raeo' style='height:@{height}'></div>"; var map= new rui.widget("rui.areamap"); map.setAgrisAreaPoints=function(areas,onclick){ var legs=$("<div class='raeq'></div>"); for (var i = 0; i < areas.length; i++) { var area=areas[i]; var link=$("<a href='javascript:void(0);' data='"+area.code+"'><i style='background-color:"+area.fillcolor+"'></i>"+area["name"]+"<span>"+area["count"]+"家</span></a>"); link.click(function(){ onclick($(this).attr("data")); }); legs.append(link); } this.view.append(legs); var mMapId=this.mapId; var timesamp=(new Date).getTime(); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t="+timesamp,function(d){ ComplexCustomOverlay.prototype = new BMap.Overlay(); ComplexCustomOverlay.prototype.initialize = function(iMap){ this._map = iMap; var span=this._span=document.createElement("span"); $(span).css({ 'position':'absolute', 'zIndex':BMap.Overlay.getZIndex(this._point.lat), 'display':'block', 'width':'100px', 'color':'#fff', 'text-shadow':'3px 2px 4px #000', 'text-align':'center', 'font-size':'12px', 'cursor':'pointer'}); this._span.innerHTML=this.data.name+"<br><font style='font-size:16px;margin-top:2px;'>"+this.data.count+"</font>"; iMap.getPanes().labelPane.appendChild(span); var tag=this.data; $(span).click(function(){ onclick(tag.code); }); return span; }; ComplexCustomOverlay.prototype.draw = function(){ var pixel = this._map.pointToOverlayPixel(this._point); this._span.style.left = pixel.x - 50+'px'; this._span.style.top = pixel.y -14+'px'; }; BMap.Polygon.prototype.tags={}; var map = new BMap.Map(mMapId); var zoom =7; var pt1 =new BMap.Point(119.981362,31.815842); map.centerAndZoom(pt1, zoom); $("#"+mMapId).css("background","none"); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); var pointArray = []; var colors=["","","","","","","","",""]; for (var i = 0; i < areas.length; i++) { var area=areas[i]; var ply = new BMap.Polygon(area.region_area, {strokeWeight:1, strokeColor: area.fillcolor, strokeOpacity:1,fillOpacity:1, fillColor: area.fillcolor}); ply.tags=area.code; ply.addEventListener('click', function (e) { onclick(e.target.tags); }); map.addOverlay(ply); var points=area.region_area.split(";"); for(var p=0;p<points.length;p++){ var point=(points[p]+"").split(","); if(point.length>1){ pointArray.push(new BMap.Point(Number(point[0]),Number(point[1]))); } } var myCompOverlay = new ComplexCustomOverlay(new BMap.Point(Number(area.longitude),Number(area.latitude)),area); map.addOverlay(myCompOverlay); } map.setViewport(pointArray); }); }; mapId:false, map.setLayout(html, function(view,model){ this.mapId=this.view.attr("id")+"_handle"; this.view.find(".raeo").attr("id",this.mapId); }); return map;});rui("widget.extends",function(){ var widget=new rui.widget("rui-agris-table-region"); widget.reload=function(){ var regionCode=this.view.find("input").val(); rui.agris.regionBindView(this.view,regionCode,true); }; widget.setLayout("<input type='hidden' name='@{name}'>",function(view){ view.addClass("rui-table-inline"); }); return widget;}); rui("widget.extends",function(){ var widget=new rui.widget("rui-agris-table-region_short"); widget.reload=function(){ var regionCode=this.view.find("input").val(); rui.agris.regionBindView(this.view,regionCode,false); }; widget.setLayout("<input type='hidden' name='@{name}'>",function(view){ }); return widget;}); rui.agris={}; rui.agris.gRegion={};rui.agris.regions=[];rui.agris.region=function(code){ var instance= { code:"32", name:"江苏省", lng:"118.750220", lat:"32.065468", zoom:7, get:function(costomCode){ var ls=rui.agris.regions; for(var i=0;i<ls.length;i++){ var item=ls[i]; if(item["c"]==code&&costomCode==null){ this.code=item["c"]; this.name=item["n"]; }else if(item["c"]== costomCode){ return {"code":item["c"],"name":item["n"]}; } } }, parents:function(){ var list=[]; var code=this.code+""; for(var i=2;i<14;i=i+2) { if(i<=code.length){ var pCode=code.substring(0,i); if(this.get(pCode)!=null) list.push(this.get(pCode)); } } return list; }, path:function(sp){ var labs=""; if(sp==null)sp="/"; var pars=this.parents(); for(var i=0;i<pars.length-1;i++){ labs+=pars[i]["name"]+sp; } return labs+=this.name; }, children:function(){ var ls=rui.agris.regions; var rs=[]; for(var i=0;i<ls.length;i++){ var item=ls[i]; if(item["p"]==this.code&&(""+item["p"]).length<12){ rs.push(item); } } return rs; }, bind:function(id){ app.region.bindData(id,this.children() ); }, parse:function(jqView){ } }; instance.get(); return instance; }; rui.agris.regionBindView=function(view, code,isfull ){ var city=code.length>2?code.substring(0,4):code; var loadRegionsComp=function(){ var labs=""; if(code=="self"){ view.html("本级");return; } if(code=="sum"){ view.html("合计");return; } if(isfull){ if(code.length>=4){ labs+=rui.agris.region(code.substring(0,4)).name } if(code.length>=6){ labs+="»"+rui.agris.region(code.substring(0,6)).name } if(code.length>=8){ labs+="»"+rui.agris.region(code.substring(0,8)).name } if(code.length>=10){ labs+="»"+rui.agris.region(code).name } }else labs+= rui.agris.region(code).name; if(view.is("input"))view.val(labs); else view.html(labs); view.attr("title",labs); }; if(rui.agris.gRegion[city+""]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } };rui.agris.pushRegionApi=function(code){ return "/trace/dict/push_city_to_gRegion/"+code+".js";};rui.agris.parseRegion=function(code, callback ){ rui.agris.parseRegionPath(code,callback,true); };rui.agris.parseRegionPath=function(code, callback,nameOnly ){ var city=code.length>2?code.substring(0,4):code; var loadRegionsComp=function(){ callback(nameOnly==null?rui.agris.region(code).path("-"):rui.agris.region(code).name); }; if(rui.agris.gRegion[city+""]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } }; raoq.rags("com/jquery/drppicker/drppicker.min.css");raoq.ragn("com/jquery/drppicker/drppicker.min.js");if (raoq.raga("tree")) { raoq.rags("cn/treejs/release/zTree_v3/css/zTreeStyle/zTreeStyle.css", JSLoader.packageRoot()); raoq.ragn("cn/treejs/release/zTree_v3/js/jquery.ztree.core.min.js", function() {}, JSLoader.packageRoot()); rui("widget.extends", function() { var widget = new rui.widget("rui.ant.tree"); widget.tree = false; widget.clickListener = function(d) { console.log(d); }; widget.setClickListener = function(fun) { widget.clickListener = fun; }; widget.active=function(id){ var ztree = $.fn.zTree.getZTreeObj(widget.tree.attr("id")); ztree.expandNode(ztree.getNodeByParam("id",id,null)); ztree.selectNode(ztree.getNodeByParam("id",id,null)); }; widget.bind=function(jsonVal){ var json =typeof jsonVal =="object"?jsonVal: $.parseJSON(jsonVal); widget.tree = $("<div class='ztree'></div>").attr("id", "tree_" + this.predata["name"]); widget.view.html(""); widget.view.append(widget.tree); var setting = { data: { simpleData: { enable: true } }, callback: { onClick: function(event, id, item, c) { if (widget.clickListener) { widget.clickListener({"value":item["id"],"parent":item["pId"],"text":item["name"],"object":item["object"]}); } } } }; var zNodes = []; var appendItem = function(item) { zNodes.push({ "id": item["value"], "pId": item["parentValue"], "name": item["text"] ,"object":item}); if (item["items"]&&item["items"].length > 0) { for (i = 0; i < item["items"].length; i++) { appendItem(item["items"][i]); } } }; for (i = 0; i < json.length; i++) { appendItem(json[i]); } $.fn.zTree.init(widget.tree, setting, zNodes); }; widget.reload = function(data) { var jsonVal=data[this.predata["name"]]; widget.bind(jsonVal); }; widget.setLayout("<div><textarea id='@{id}' name='@{name}' style='display:none;'></textarea></div>", function(view) { }); return widget; });}raoq.rags("com/jquery/css/jquery-ui.min.css");raoq.ragn("com/jquery/jquery-ui.min.js", function() { raoq.ragn("com/jquery/jquery-ui-timepicker-addon.js"); var regional_zh = { closeText: '关闭', prevText: '<上月', nextText: '下月>', currentText: '今天', monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月' ], monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12' ], dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'], dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'], dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'], weekHeader: '周', dateFormat: 'yy-mm-dd', firstDay: 1, isRTL: false, showMonthAfterYear: true, changeYear: true, changeMonth: true, yearSuffix: '', yearRange:'c-5:c' }; if ($.datepicker != null) { $.datepicker.setDefaults(regional_zh); }}); rui("widget.extends", function() { var widget = new rui.widget("rui.text"); widget.reload = function() { var span= this.view.find("span"); span.attr("title",span.html()); }, widget.title = ""; widget.setLayout("<span data-name='@{name}' name='@{name}'></span>", function(view) { if (this.getParam("float") == "right") { view.css("float", "right"); } }); return widget;}); rui("widget.extends", function() { var widget = new rui.widget("rui.ant.ratebar"); widget.reload = function(data) { }, widget.setLayout("<a class='rui-table-layout-item rui-ant-ratebar'><input type='hidden' id='val_@{name}' name='@{name}' ><span><label>@{text}</label></span><span><div id='bar_@{name}'></div></span><span name='@{name}'>--</span>%</a>", function(view,predata) { $( "#val_"+predata["name"] ).change(function(){ $( "#bar_"+predata["name"] ).progressbar({ value: Number($(this).val())}); }); }); return widget;});rui("widget.extends", function() { var form = new rui.widget("rui.ant.form"); form.data = function() { return {}; }; form.submitFun = function(data) { console.log(data); }; form.submit = function(fun, data) { if (data != null) { this.view.find(".primary").click(); } else form.submitFun = fun; }; form.setSubmitButtonLabel=function(title){ this.view.find(".primary").html("<label>"+title+"</label>"); }; form.shrink = function() { this.view.addClass("rui-ant-form-shrink"); var inputs = this.view.find("div."+rais.raiw.raiz); for (var i = 3; i < inputs.length; i++) { $(inputs[i]).hide(); } }; form.open = function() { this.view.removeClass("rui-ant-form-shrink"); var inputs = this.view.find("div."+rais.raiw.raiz); for (var i = 3; i < inputs.length; i++) { $(inputs[i]).show(); } }; form.resetParams = {}; form.init = function(data) { this.resetParams = data; rui("#" + form.rakd.id).widget().set(data); form.resetParams = rui("#" + form.rakd.id).widget().get(); }; form.showLoading = function() { var raqq = $("#" + form.rakd.id); var rawe = raqq.find(".raes"); rawe.find("i").show().addClass("fa-spinner"); }; form.hideLoading = function() { var raqq = $("#" + form.rakd.id); var rawe = raqq.find(".raes"); rawe.find("i").hide().removeClass("fa-spinner"); }; form.processButton = function(title, isCheckRequired) { var btn = $("<a class='rui-ant-button primary raes'><i class='fa fa-pulse' style='margin-right:4px'></i><label>" + title + "</label></a>"); btn.find("i").hide(); btn.click(function() { var data = form.rakd.getWidget().get(); if (isCheckRequired) { var isSubmit = true; for (var key in data) { var item = form.view.find("[name='" + key + "']"); if (item.attr("data-role") != "required") continue; var widget = rui("#" + item.attr("target")).widget(); if (item.val() == "" || item.val() == null) { widget.event("error"); isSubmit = false; } if(widget.event("check")==false){ isSubmit = false; } } form.submitFun(isSubmit ? data : false); } else { form.submitFun(data); } }); return btn; }; form.loginForm = function(jqObject) { var razh = $("<div class='rui-mtb'></div>"); razh.css("text-align", "center"); razh.append(form.processButton("立即登录", true)); jqObject.append(razh); }; form.filterForm = function(jqObject) { var filterOpt = $("<div class='rui-ant-filter-buttons'></div>"); filterOpt.append(form.processButton("查询", false)); var resetBtn = $("<a class='rui-ant-button'><label>重置</label></a>"); resetBtn.attr("target", this.rakd.id) .click(function() { rui("#" + $(this).attr("target")).widget().set(form.resetParams); }); filterOpt.append(resetBtn); var showBtn = $("<a><i class='fa fa-chevron-down'></i><label>展开</label></a>"); showBtn.attr("target", this.rakd.id); showBtn.click(function() { var ths = $(this); var wdg = rui("#" + ths.attr("target")).widget(); if (ths.hasClass("open")) { ths.removeClass("open"); ths.html("<i class='fa fa-chevron-down'></i><label>展开</label>"); wdg.event("shrink"); } else { ths.addClass("open"); wdg.event("open"); ths.html("<i class='fa fa-chevron-up'></i><label>收起</label>"); } }); filterOpt.append(showBtn); jqObject.append(filterOpt); }; form.defaultForm = function(jqObject) { var bottom = $("<div ></div>"); jqObject.append(bottom); bottom.append(form.processButton("提交", true)); bottom.css("text-align", "center"); }; form.setJQRender(function(jqObject, model) { var type = jqObject.attr("data-type"); jqObject.addClass(type); if (type == "login") { this.loginForm(jqObject); } else if (type == "filter") { this.filterForm(jqObject); } else { this.defaultForm(jqObject); } return jqObject; }); return form;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet readonly-@{readonly}'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span class='raev'><input class='handler' data-readonly='@{readonly}' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.input"); widget.reload = function() {}, widget.extend=function(type){ var parent=this.view.find(".raev"); var mSelect= $("<select class='raew'></select>"); parent.append(mSelect); return { select:mSelect, append:function(text,value){ this.select.append("<option value='"+value+"'>"+text+"</option>"); }}; }; widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view,predata) { var input= view.find(".handler"); if(input.attr("data-readonly")=="true"){ input.attr("readonly","readonly"); } if(predata["hint"]!=null){ view.find(".handler").attr("placeholder",predata["hint"]); } if(this.predata["icon"]!=null){ view.find(".handler").addClass("input-icon").after("<i class='"+this.predata["icon"]+"'></i>"); } if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' placeholder='请输入正整数' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'><em class='rui-ant-input-unit'>@{after}</em></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.int"); widget.limit=function(limit){ widget.view.find("input").attr("maxlength",limit); }; widget.reload = function() {}, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;}); rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' maxlength='11' placeholder='请输入11位手机号' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.mobile"); widget.reload = function() {}, widget.check=function(){ var input= widget.view.find("input"); var msg=""; if(input.val().length!=11){ msg="请输入手机号码长度不正确"; } if(input.val()==""){ msg="手机号码不能为空"; } if(msg!=""){ return rui.antInputErrBind(this.view,msg); } return true; }, widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui.antInputErrBind=function(view,msg){ view.find(".error-label").remove(); view.addClass("rui-ant-input-error"); view.append("<span class='error-label'>"+msg+"</span>"); view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); return false;};rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' maxlength='4' placeholder='请输入4位验证码' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'><em class='rui-ant-input-unit'><a>获取验证码</a></em></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.getcode"); widget.reload = function() {}, widget.check=function(){ var input= widget.view.find("input"); var msg=""; if(input.val().length!=4){ msg="验证码长度有误"; } if(input.val()==""){ msg="验证码不能为空"; } if(msg!=""){ return rui.antInputErrBind(this.view,msg); } return true; }, widget.sendCodeFun=false; widget.sendCode=function(fun){ widget.sendCodeFun=fun; }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { this.view.find("a").attr("href","javascript:void(0)").click(function(){ var t=$(this); if(t.hasClass("disabled")){return ; } t.addClass("disabled"); t.html(60); if(widget.sendCodeFun)widget.sendCodeFun(); var handle=setInterval(function(){ t.html(Number(t.html())-1); if(t.html()=="1"){ clearInterval(handle); t.html("获取验证码"); t.removeClass("disabled"); } },1000); }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input type='number' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.number"); widget.reload = function() {}, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.date"); widget.reload = function(data) { this.find("input").datepicker("setDate", data[this.predata["name"]]); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var target = this.view.find("input"); var format = typeof this.predata.format == "undefined" ? "yy-mm-dd" : this.predata.format; if (format.has(":")) { target.datetimepicker({ controlType: 'select', oneLine: true, timeFormat: format }); } else { target.datepicker({ dateFormat: format,    onClose: function(selectedDate) {}   }); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input class='date begin' name='begin_@{name}' placeholder='起始日期' data-role='@{role}' readonly type='@{type}' target='@{id}' ><em class='date'>~</em><input name='end_@{name}' placeholder='截至日期' class='date end' data-role='@{role}' readonly type='@{type}' target='@{id}' ><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.rangedate"); widget.yearRange=function(beforeYear,afterYear){ var limit="c-"+beforeYear+":c"+afterYear; var begin = this.view.find("input.begin"); begin.find("input").datepicker("yearRange", limit); var end = this.view.find("input.end"); end.find("input").datepicker("yearRange", limit); }; widget.reload = function(data) { var begin = this.view.find("input.begin"); begin.datepicker("setDate",new Date().format("yyyy-01-01")); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var begin = this.view.find("input.begin"); begin.datepicker({ dateFormat: "yy-mm-dd", onClose: function(selectedDate) { if(selectedDate!=""){ end.datepicker("option", "minDate", selectedDate);} } }); var end = this.view.find("input.end"); end.datepicker({ dateFormat: "yy-mm-dd", onClose: function(selectedDate) { if(selectedDate!=""){ begin.datepicker("option", "maxDate", selectedDate); } } }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.datetime"); widget.reload = function(data) { this.find("input").datetimepicker("setDate", data[this.predata["name"]]); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var target = this.view.find("input"); target.datetimepicker({ controlType: 'select', timeFormat: "HH:mm:ss", dateFormat: "yy-mm-dd" }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span ><input class='input' type='hidden' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'><span class='items'></span></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.checkbox"); widget.reload = function() { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.updateValue = function() { var val = ""; var items = this.view.find(".checkbox:checked"); for (var i = 0; i < items.length; i++) { val += $(items[i]).val() + ","; } if (val.length > 0) { val = val.substr(0, val.length - 1); } this.view.find(".input").val(val); }, widget.append = function(text, value) { var item = $("<label class='raey'></label>"); item.append("<input class='checkbox checkbox-" + value + "' value='" + value + "' type='checkbox'>"); item.append(text); this.view.find(".items").append(item); item.unbind("change").change(function() { widget.updateValue(); }); }; widget.appends = function(tvs) { for (var i = 0; i < tvs.length; i++) { widget.append(tvs[i]["text"], tvs[i]["value"]); } }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } this.view.find(".input").change(function() { var vals = $(this).val().split(","); $(this).parent().find(".checkbox").prop("checked", false); for (var i = 0; i < vals.length; i++) { $(this).parent().find(".checkbox-" + vals[i]).prop("checked", true); } }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><textarea row=6 data-role='@{role}' target='@{id}' name='@{name}'></textarea></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.text"); widget.reload = function() { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML")); return widget;});rui("widget.extends", function() { var widget = new rui.widget("rui.ant.image"); widget.reload = function() {}, widget.title = ""; widget.setLayout("<div class='raez' ><span><input type='hidden' name='@{name}' ><img style='height:@{height}'></span><span><label>@{title}</label></span></div>", function(view, reload) { view.find("input").change(function() { $(this).parent().find("img").attr("src", $(this).val()); }); view.click(function() { var url = $(this).parent().find("input").val(); var widget = rui("#ruiAntImageDialog").widget( "rui-modal", "<div data-render='rui.panel' data-title='查看图片'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><img style='height:500px' data-name='image'></div>"); widget.show({ "image": url }); }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span ><select data-role='@{role}' target='@{id}' name='@{name}'></select><i disabled class='icon fa fa-chevron-down'></i> </span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.select"); widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + widget.title + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.reset=function(){ this.view.find("select").html(""); }; widget.append = function(text, value) { if (text == null) { this.view.find("select").append("<option >请选择</option>"); } else this.view.find("select").append("<option value='" + value + "'>" + text + "</option>"); }; widget.appendHTML = function(html) { this.view.find("select").append(html); }; widget.appends = function(tvs, isClear) { if (isClear) this.view.find("select").html(""); for (var i = 0; i < tvs.length; i++) { this.view.find("select").append("<option value='" + tvs[i]["value"] + "'>" + tvs[i]["text"] + "</option>"); } }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { widget.title = predata["title"]; view.find("select").on("change", function() { try { $(this).selectmenu("refresh", true); } catch (e) { } }); view.find("select").selectmenu(); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row rui-ant-input'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span class='rui-ant-upload-box'><a class='item rui-ant-upload-addbtn'><i class='fa fa-plus'></i>上传</a></span></span>"); inputWidget.append("<input type='file' class='rui-ant-upload-handle'>"); inputWidget.append("<input type='hidden' class='rui-ant-upload-value' name='@{name}' target='@{id}' data-role='@{role}' >"); var widget = new rui.widget("rui.ant.upload"); widget.input = false; widget.setLimit=function(limit){ widget.view.addClass("limit-"+limit); }; widget.reload = function(data) { var inp=widget.view.find(".rui-ant-upload-value"); if(inp.val()!=""){ var files=inp.val().split(","); for(var i=0;i<files.length;i++){ widget.appendFile(files[i]); } } }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请上传至少一张图片</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.append = function(url, base64) { var src = (base64 == null) ? url : "data:image/jpeg;base64," + base64; var imgs = this.view.find(".rui-ant-upload-box"); if(this.view.hasClass("limit-1")){ imgs.find(".img").remove(); } imgs.prepend("<span class='item img'><img class='img-value' width=60 height=60 data-src='" + url + "' src='" + src + "'><em><i class='fa fa-close'></i></em></span>"); imgs.find(".img").unbind("click").click(function() { $(this).remove(); }); var datasrcs = imgs.find(".img-value"); var srcs = ""; for (var i = 0; i < datasrcs.length; i++) { var src=$(datasrcs[i]).attr("data-src"); if(src!=null&&src!=""){ srcs += src + ","; } } this.view.find(".rui-ant-upload-value").val(srcs); }; widget.files={}; widget.appendFile=function(url,preFile){ var files = this.view.find(".rui-ant-upload-box"); var fileName=""; if(preFile)fileName=(preFile.name.replace(new RegExp(/( )/g),"")).split(".")[0]; else fileName=rui.param("name","",url); if(!url){ widget.files[fileName]=preFile; files.prepend("<span class='item file preupload-"+fileName+"'>"+fileName+"<em>上传中&nbsp;<i class='fa fa-circle-o-notch fa-spin'></i></em></span>"); }else{ if(fileName=="")return; if(!widget.files[fileName]){ widget.files[fileName]={"name":fileName}; files.prepend("<span class='item file preupload-"+fileName+"'>"+fileName+"<em>&nbsp</em></span>"); } var fileOpt=files.find(".preupload-"+fileName).attr("data-src",url).find("em"); fileOpt.html("<a target='_block' href='"+url+"'>查看</a>"); fileOpt.append("&nbsp;"); var delBtn=$("<a href='javascript:void(0)'>删除</a>"); fileOpt.append(delBtn); delBtn.unbind("click").click(function() { $(this).parent().parent().remove(); }); } var datasrcs = this.view.find(".file"); var srcs = ""; for (var i = 0; i < datasrcs.length; i++) { srcs += $(datasrcs[i]).attr("data-src") +"?name="+fileName+ ","; } if(srcs!="") srcs=srcs.substring(0,srcs.length-1); this.view.find(".rui-ant-upload-value").val(srcs); }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { if(typeof predata["types"]!="undefined"){ view.addClass("rui-ant-upload-files"); }else{ view.addClass("rui-ant-upload-images"); } view.find(".rui-ant-upload-handle").change(function() { var files = view.find(".rui-ant-upload-handle").prop('files'); if(files.length>0){ var file=files[0]; if(typeof predata["types"]!="undefined"){ widget.appendFile(false,file); } var reader = new FileReader(); reader.readAsDataURL(file); reader.onload = function(e) { widget.event("upload", this.result.substring(this.result.indexOf(',') + 1),file); } } }); view.find(".rui-ant-upload-addbtn").click(function() { view.find(".rui-ant-upload-handle").click(); }); }); return widget;}); rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input placeholder='请选择' readonly data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-map-marker'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.baidu.location"); widget.reload = function(data) { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view,predata) { this.view.unbind("click").click(function(){ selectBaiduPoint(predata); }); }); return widget;}); selectBaiduPoint = function(predata) { var initLng=119.981362; var initLat=31.815842; var initZoom=7; var inputData=rui("#"+predata["id"]).widget().get(); input=inputData[predata["name"]]; if(input){ var ps=input.split(","); if(ps.length==2){ var zs=ps[1].split("|"); initLng=Number(ps[0]); if(zs.length==2){ initZoom=Number(zs[1]); initLat=Number(zs[0]); }else{ initLat=Number(ps[1]); } } } var raog = {}; raog["lng"] = initLng; raog["lat"] = initLat; raog["zoom"] = initZoom; rui("#rui_modal_baidu_point").widget( "rui-modal", "<div data-render='rui.panel' class='rui-modal-baidu-point' data-title='坐标拾取'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3>" + "<div id='rui_modal_baidu_point_map' style='width:500px;height:380px;'></div>"+ "<div class='control'>经度<input data-name='lng' id='rui_modal_baidu_point_map_lng'>纬度<input data-name='lat' id='rui_modal_baidu_point_map_lat'>缩放<input data-name='zoom' id='rui_modal_baidu_point_map_zoom'></div>"+ "<span class='radd'><a class='rui-ant-button primary'>确认</a>&nbsp;&nbsp;&nbsp;<a data-event='rui.modal.close' class='rui-ant-button'>取消</a></span>" + "</div>").show(raog,function(data){ $("#rui_modal_baidu_point_map").replaceWith("<div id='rui_modal_baidu_point_map' style='width:500px;height:380px;'></div>"); var timesamp = (new Date).getTime(); var zoomVal=Number(data["zoom"]); var latVal=Number(data["lat"]); var lngVal=Number(data["lng"]); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t=" + timesamp, function(d) { var map = new BMap.Map("rui_modal_baidu_point_map"); var pt1 = new BMap.Point(lngVal,latVal ); map.centerAndZoom(pt1, zoomVal); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); map.addEventListener("click", function(e){ map.clearOverlays(); var marker = new BMap.Marker(e.point); $("#rui_modal_baidu_point_map_lng").val(e.point.lng.toFixed(6)); $("#rui_modal_baidu_point_map_lat").val(e.point.lat.toFixed(6)); $("#rui_modal_baidu_point_map_zoom").val(map.getZoom()); map.addOverlay(marker); }); map.addOverlay(new BMap.Marker(pt1)); }); }); $("#rui_modal_baidu_point").find(".primary").unbind("click").click(function() { var val= $("#rui_modal_baidu_point_map_lng").val()+","+ $("#rui_modal_baidu_point_map_lat").val()+"|"+ $("#rui_modal_baidu_point_map_zoom").val(); var reset={}; reset[predata["name"]]=val; rui("#"+predata["id"]).widget().set(reset); rui("#rui_modal_baidu_point").widget().hide(); });}; XRender.extend("layout", function() { var widget = new XRender.layout("rui.layout.adlogin"); widget.setJQRender(function(view){ var layouts=view.children(); if(layouts.length!=2){ alert("rui.layout.adlogin只支持两个子元素"); } if(rui.client.os("mobile")){ for(var i=0;i<layouts.length;i++){ var layout=$(layouts[i]); if(layout.find("form").length>0){ }else{ layout.remove(); view.append(layout); } } }else{ view.css("display","inline-table"); view.css("width","100%"); view.css("tableLayout","fixed"); layouts.css("display","table-cell"); } }); return widget;}); rui("widget.extends", function() { return XRender.core.getListRender("rui.layout.list"); }); rui("widget.extends",function(){ var inputWidget=$("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item'>@{title}</label></span>"); inputWidget.append("<span><span><span class='agris-filter-items'><a class='primary rui-agris-filter-selbtn'>添加&nbsp;<i class='fa fa-plus'></i></a></span><input type='hidden' class='name' name='@{name}_names' ><input type='hidden' target='@{id}' data-role='@{role}' type='@{type}' id='@{id}_tar' class='value' name='@{name}_ids'>" +"</span></span>"); inputWidget.find(".lab").append("<font style='color:red;'>*</font>"); var widget=new rui.widget("rui.agris.filter"); widget.reload=function(){ }; widget.filter=function(title){ console.log(title) ;}; widget.setFilter=function(fun){ this.filter=fun; }; widget.refresh=function(){ var nameView= this.view.find(".name"); var valView=this.view.find(".value"); var names=nameView.val().split(","); var ids=valView.val().split(","); for(var i=0;i<ids.length;i++){ if(ids[i]=="")continue; var itemObject=$("<a href='javascript:void(0);' text='"+names[i]+"' data='"+ids[i]+"'>"+names[i]+"</a>"); itemObject.append("&nbsp;"); itemObject.addClass("value-"+ids[i]); itemObject.addClass("rui-agris-filter-value"); itemObject.append("<i class='fa fa-close'></i>"); itemObject.click(function(){ var t=$(this); t.remove(); widget.refreshVal(); }); widget.view.find(".agris-filter-items").prepend(itemObject); } }; widget.changeLis=false; widget.setLimit=function(limit){ this.predata["limit"]=limit; this.view.find(".rui-agris-filter-selbtn").html("请选择"); }; widget.change=function(changeFun){ widget.changeLis=changeFun; }; widget.refreshVal=function(){ var vals= this.view.find(".rui-agris-filter-value"); var inp=this.view.find(".value"); var inp_name=this.view.find(".name"); var data=""; var txts=""; for(var i=0;i<vals.length;i++){ data+=$(vals[i]).attr("data")+","; txts+=$(vals[i]).attr("text")+","; } if(data.length>0){ data=data.substr(0,data.length-1); txts=txts.substr(0,txts.length-1); } inp.val(data); inp_name.val(txts); }; widget.append=function(text,value){ this.view.find(".list").append("<li><a href='javascript:void(0);' text='"+text+"' data='"+value+"'>"+text+"</a></li>"); this.view.find(".list a").unbind("click").click(function(){ widget.view.find(".value-"+$(this).attr("data")).remove(); var itemObject=$($(this).prop("outerHTML")); itemObject.append("&nbsp;"); itemObject.addClass("value-"+value); itemObject.append("<i class='fa fa-close'></i>"); itemObject.addClass("rui-agris-filter-value"); if(widget.predata["limit"]&&widget.predata["limit"]==1){ widget.view.find(".rui-agris-filter-value").remove(); } widget.view.find(".agris-filter-items").prepend(itemObject); itemObject.click(function(){ var t=$(this); t.remove(); widget.refreshVal(); }); widget.refreshVal(); if( widget.changeLis){ widget.changeLis(itemObject.attr("text"), itemObject.attr("data")); } $(".rui-widget-close-dialog-pri,.rui-agirs-filter").hide(); }); }; widget.error=function(){ this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>"+this.predata["title"] +"</span>"); this.view.click(function(){ $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"),function(view,model){ view.find(".primary").click(function(){ rui.widgetMaskDialog(); var div= rui_agirs_filter.getDialog(model.id); view.find(".agris-filter-items").parent().append(div); div.find(".keyword").change(function(){ widget.filter($(this).val()); }); widget.filter(""); }); }); return widget; }); rui_agirs_filter=function(target,text,value){ };rui_agirs_filter.getDialog=function(target){ $(".rui-agirs-filter").remove(); var box=$("<div class='rui-agirs-filter ui-widget-content rui-dialog-close-handle '></div>").attr("target","input#"+target); box.addClass("rui-agris-region-"+target); var header=$("<div class='rui-agirs-region-header'></div>"); header.append("<input class='keyword' placeholder='请输入关键字' >"); var rbox=$("<div class='rui-agirs-region-body '></div>"); body=$("<ul class='list'></ul>"); rbox.append(body); rbox.append("<div class='clearfix'></div>") ; box.append(header); box.append(rbox); return box; }; rui("widget.extends",function(){ var inputWidget=$("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item'>@{title}</label></span>"); inputWidget.append("<span><span><input type='hidden' target='@{id}' data-role='@{role}' type='@{type}' id='@{id}_tar' class='value' name='@{name}'>" +"<input class='display ' readonly placeholder='点击选择' id='@{id}_dis' ></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget=new rui.widget("rui.agris.region"); widget.reload=function(){ }; widget.error=function(){ this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入"+this.predata["title"] +"</span>"); this.view.click(function(){ $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"),function(view,model){ view.find(".value").change(function(){ rui.agris.regionBindView($("#"+model.id+"_dis"), $(this).val(),false); }); view.unbind("click").click(function(){ var mInp=$("#"+model.id+"_tar"); rui.widgetMaskDialog(function(){ $(".rui-agirs-region-dialog").remove(); }); var t=$(this); var div=rui_agirs_region.getRegionWidget(mInp.val(),model.id); t.parent().append(div); rui_agirs_region.resize(); rui_agirs_region.getRegionItems(mInp.val()); }); }); return widget; }); rui_agirs_region=function(field,model){ field.replaceWith(box); start.unbind("click").click(function(){ var mInp=$("#"+$(this).attr("target")); var t=$(this); var div=rui_agirs_region.getRegionWidget(mInp.val(),model.id); t.parent().append(div); rui_agirs_region.getRegionItems(mInp.val()); });};rui_agirs_region.resize=function(){ $(".rui-agirs-region-header").scrollLeft( $(".rui-agirs-region-header")[0].scrollWidth);}; rui_agirs_region.getRegionWidget=function(region_code,target){ $(".rui-agirs-region").remove(); var arr=["国家","省份","城市","区县","街镇","村"]; var arrId=["region_0","region_2","region_4","region_6","region_8","region_10"]; var box=$("<div class='rui-agirs-region ui-widget-content rui-agirs-region-dialog'></div>").attr("target","input#"+target); box.addClass("rui-agris-region-"+target); var header=$("<div class='rui-agirs-region-header'></div>"); var foot=$("<div class='rui-agirs-region-footer '><a class='rui-ant-button primary submit' target='"+target+"' >确定</a><a class='rui-ant-button cancel'>取消</a></div>"); foot.find(".submit").click(function(){ var id=$(this).attr("target"); var code=$(".rui-agris-region-"+id).attr("data"); $("#"+target+"_tar").val(code); $(".rui-agirs-region").remove(); rui.agris.regionBindView($("#"+id+"_dis"),code,false); }); foot.find(".cancel").click(function(){ $(".rui-agirs-region").remove(); }); var start=(G_REGION_CODE+"").length; for(var i=start;i<12;i+=2){ var itemRegion=arrId[i/2]; var tab=$("<a class='sel-region'>"+arr[i/2]+"</a>"); tab.addClass(arrId[i/2]); if(i>region_code.length){ tab.hide(); }else{ tab.addClass("active"); var itemCode=region_code.substring(0,i); tab.attr("data",itemCode); rui.agris.regionBindView(tab,itemCode ,false); } header.append(tab); } var rbox=$("<div class='rui-agirs-region-body'></div>"); body=$("<ul></ul>"); rbox.append(body); rbox.append("<div class='clearfix'></div>") ; box.append(header); box.append(rbox); box.append(foot); return box; };rui_agirs_region.resize=function(){ };rui_agirs_region.getRegionItems=function(code){ for(var i=code.length;i<12;i+=2){ $(".rui-agirs-region").find(".region_"+i).hide(); } var tab= $(".rui-agirs-region").find(".region_"+((code+"").length)); rui.agris.regionBindView(tab,code,false); tab.parent().find(".active").removeClass("active"); tab.addClass("active").attr("data",code).show(); rui_agirs_region.resize(); $(".rui-agirs-region").attr("data",code); var p=$(".rui-agirs-region-body").find("ul"); p.html(""); p.append("<li><a class='sel-region active' data='"+code+"'>本级</a></li>"); var loadRegionsComp=function(){ var ds=rui.agris.region(code).children(); for(var i=0;i<ds.length;i++){ p.append("<li><a class='sel-region' data='"+ds[i]["c"]+"'>"+ds[i]["n"]+"</a></li>"); } $(".rui-agirs-region").find("a.sel-region").unbind("click").click(function(){ var t=$(this); if(t.hasClass("evt"))return; t.parent().parent().find(".active").removeClass("active"); t.addClass("active"); var code=t.attr("data"); rui_agirs_region.getRegionItems(code) }); }; var city=code.substring(0,4); if(rui.agris.gRegion[city]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } };raoq.rakk.rbdq = raoq.raib.rait();raoq.rakk.rbdq.prototype = { ranl: false, raiv: function(rata) { this.ranl = $("<div>&nbsp;</div>"); rata.append(this.ranl); }};if (raoq.raga("lib-highchart")) { raoq.ragq("/bin/com.highcharts.code/highcharts.js", function() { Highcharts.setOptions({ global: { useUTC: false } }); raoq.ragq("/bin/com.highcharts.code/highcharts-3d.js"); raoq.ragq("/bin/com.highcharts.code/wordcloud.js"); });}raoq.rakk.rbds = raoq.raib.rait();raoq.rakk.rbds.prototype = { ranw: {}, rakk: false, rbdt: false, rbdv: false, rbdq: false, raiv: function(rata, rakk) { if(ruiLibSampleColor){ Highcharts.getOptions().plotOptions.pie.colors=ruiLibSampleColor; } this.rakk = rakk; var table = rata.rahi(); var fields = table.find("th"); var thisFields = {}; for (var i = 0; i < fields.length; i++) { var th = $(fields[i]); thisFields[th.attr("data-name")] = { "render": th.attr("data-render"), "title": th.html(), "name": th.attr("data-name") }; } this.ranw = thisFields; var tableClass = table.attr("class"); table.replaceWith("<div id='" + this.rakk.rake + "' class=' "+rais.raiw.raiz+" " + tableClass + " rui-build' ></div>"); table = $("#" + this.rakk.rake); var chart = $("<div class='rafa' style='width:100%;height:100%;'></div>"); chart.attr("id", this.rakk.rake + "_chart"); table.append(chart); this.rbdq = new raoq.rakk.rbdq(chart); return table; }, resize: function() { var width = $("#" + this.rakk.rake).parent().width(); var height = $("#" + this.rakk.rake).parent().height(); if (typeof this.rbdt.reflow == "function") this.rbdt.reflow(); if (typeof this.rbdt.setSize == "function") this.rbdt.setSize(width, height, false); }, themeColors: ["#1ABB9C"], setColors: function(colors) { this.themeColors = colors; return this; }, hideTitle: function() { this.params["title"] = { text: null, labels: { enabled: false } }; this.params["subtitle"] = { text: null, labels: { enabled: false } }; return this; }, setMargin: function(margion) { this.params["chart"]["margin"] = [0, 0, 0, 0]; return this; }, simple: function(mData) { this.hideTitle(); this.setMargin(0); this.setColors(); this.params["series"] = mData; var name = this.target.selector; this.chart = Highcharts.chart(name.replace("#", ""), this.params); }, sampleAreaChart: function(list) { var rbdw = []; var rbdy = false; for (var rafl in this.ranw) { var ranz = this.ranw[rafl]; if (ranz.render == "rui-render-time") { rbdy = ranz; } } for (var rafl in this.ranw) { var ranz = this.ranw[rafl]; if (ranz.render == "rui-render-number") { var rbdz = []; for (var rans = 0; rans < list.length; rans++) { var ramf = list[rans]; rbdz.push([new Date(ramf[rbdy.name]).getTime(), Number(ramf[ranz.name])]) } rbdw.push({ "name": ranz.title, "data": rbdz }); } } var rbea = this.rakk.rake; this.rbdt = ruiLibSampleAreaChart(rbea, rbdw); this.rbdt.reflow(); }, samplePieChart: function(list) { var keys = Object.keys(this.ranw); var xField = this.ranw[keys[0]]; var yField1 = this.ranw[keys[1]]; var data = []; for (var rafl = 0; rafl < list.length; rafl++) { var item = list[rafl]; var itemObject = { "name": item[xField.name] }; if (rafl == 0) { itemObject.sliced = true; itemObject.selected = true; } itemObject.y = Number(item[yField1.name]); data.push(itemObject); } this.rbdt = ruiLibSamplePieChart(this.rakk.rake, data); this.rbdt.reflow(); }, sampleRingChart: function(main, total, title, color) { main = Number(main); total = Number(total); var data = []; data.push(["Full", total-main]); data.push(["Main", main]); var cover = total==0?0: (main * 100 / total); cover = ((cover + "").split(".").length > 1) ? cover.toFixed(2) : cover; $("#" + this.rakk.rake).append("<a class='rui-lib-highchart-ring'><span><em style='color:" + color + "'>" + cover + "</em>%</span><label>" + title + "</label></a>"); this.rbdt = ruiLibSampleRingChart(this.rakk.rake, data, color); this.resize(); }, riverui: function() { this.rbdt = ruiLibHChartRiverui(this.rakk.rake, [{ allowPointSelect: false, name: '', data: [100, 50, 100, 50, 100] }]); this.rbdt.reflow(); }, sampleHotWords: function(mData) { this.rbdt = ruiLibSampleHotWordsChart(this.rakk.rake, mData); this.rbdt.reflow(); }};raoq.rakk.rakf.rbds = "rui-lib-highchart";rale.rafi(raoq.rakk.rakf.rbds, raoq.rakk.rbds);ruiLibSampleChart = { chart: { type: 'column', backgroundColor: 'rgba(0,0,0,0)' }, tooltip: { enabled: false }, xAxis: { labels: { enabled: false }, lineWidth: 0, tickWidth: 0 }, yAxis: { labels: { enabled: false }, title: { enabled: false }, gridLineWidth: 0 }, plotOptions: { labels: { enabled: false }, enabled: false }, legend: { enabled: false },};ruiLibSampleHotWordsChart = function(id, data) { return Highcharts.chart(id, { credits: false, exporting: false, chart: { type: 'wordcloud', margin: [0, 0, 0, 0] }, plotOptions: { series: {}, wordcloud: { rotation: { from: 0, orientations: 2, to: 0 } } }, series: [{ data: data }], title: { enabled: false, text: '' } });};ruiLibSampleRingChart = function(id, data, color) { Highcharts.getOptions().plotOptions.pie.colors= ['#eeeeee', color]; return Highcharts.chart(id + "_chart", { colors: ['#eeeeee', color], credits: { enabled: false }, exporting: { enabled: false }, chart: { type: 'pie', margin: [0, 0, 0, 0], padding: [0, 0, 0, 0], plotBackgroundColor: null, plotBorderWidth: 0, plotShadow: false, "backgroundColor": "rgba(0,0,0,0)" }, title: { enabled: false, text: '' }, tooltip: { enabled: false }, plotOptions: { pie: { dataLabels: { enabled: false }, startAngle: 0, endAngle:360, center: ['50%', '50%'], size: '100%' } }, series: [{ innerSize: '90%', data: data }] });};ruiLibHChartRiveruiTick = true;ruiLibHChartRiverui = function(id, data) { return Highcharts.chart(id, { credits: { enabled: false }, exporting: { enabled: false }, title: { text: '' }, subtitle: { text: '' }, chart: { type: 'areaspline', backgroundColor: 'rgba(0,0,0,0)', margin: [0, 0, 0, 0], events: { load: function() { var series = this.series[0]; setInterval(function() { ruiLibHChartRiveruiTick = !ruiLibHChartRiveruiTick; series.addPoint([ruiLibHChartRiveruiTick ? 100 : 50], true, true); }, 500); } } }, xAxis: { labels: { enabled: false } }, yAxis: { min: 0, max: 180, title: { enabled: false }, labels: { enabled: false }, gridLineWidth: 0 }, colors: ['#00bcd4'], tooltip: { enabled: false }, legend: { enabled: false }, plotOptions: { series: { states: { hover: { enabled: false } } }, areaspline: { fillOpacity: 1, marker: { enabled: false } } }, series: data });};ruiLibSampleChart = function(id, data) { data.credits = { enabled: false }; data.exporting = { enabled: false }; data.title = { text: '' }; data.tooltip = { enabled: false }; data.legend = { enabled: false }; data.subtitle = { text: '' }; return Highcharts.chart(id, data);};ruiLibSampleAreaChart = function(id, data) { return ruiLibSampleChart(id, { chart: { backgroundColor: 'rgba(0,0,0,0)', type: 'area' }, xAxis: { type: 'datetime', dateTimeLabelFormats: { millisecond: '%H:%M:%S.%L', second: '%H:%M:%S', minute: '%H:%M', hour: '%H:%M', day: '%m-%d', week: '%m-%d', month: '%Y-%m', year: '%Y' } }, yAxis: { gridLineWidth: 1, title: { enabled: false } }, colors: ['#1ABB9C'], plotOptions: { area: { pointStart: 1940, fillOpacity: 0.1, lineWidth: 1, marker: { enabled: false, symbol: 'circle', radius: 1, states: { hover: { enabled: true } } } } }, series: data });};ruiLibSampleColor=false;ruiLibSamplePieChart = function(id, data) { if(!ruiLibSampleColor){ ruiLibSampleColor=Highcharts.getOptions().plotOptions.pie.colors; } Highcharts.getOptions().plotOptions.pie.colors =raol.rall.magicc("#29a176"); return ruiLibSampleChart(id, { chart: { type: 'pie', backgroundColor: 'rgba(0,0,0,0)', options3d: { enabled: true, alpha: 45, beta: 0 } }, plotOptions: { pie: { allowPointSelect: true, cursor: 'pointer', depth: 12, dataLabels: { enabled: true, format: '{point.name}' } } }, series: [{ type: 'pie', name: '', data: data }] });};