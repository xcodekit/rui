var hexcase = 0; var b64pad = ""; var chrsz = 8; function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); } function core_md5(x, len){ x[len >> 5] |= 0x80 << ((len) % 32); x[(((len + 64) >>> 9) << 4) + 14] = len; var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; for(var i = 0; i < x.length; i += 16) { var olda = a; var oldb = b; var oldc = c; var oldd = d; a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936); d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586); c = md5_ff(c, d, a, b, x[i+ 2], 17, 606105819); b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330); a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897); d = md5_ff(d, a, b, c, x[i+ 5], 12, 1200080426); c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341); b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983); a = md5_ff(a, b, c, d, x[i+ 8], 7 , 1770035416); d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417); c = md5_ff(c, d, a, b, x[i+10], 17, -42063); b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162); a = md5_ff(a, b, c, d, x[i+12], 7 , 1804603682); d = md5_ff(d, a, b, c, x[i+13], 12, -40341101); c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290); b = md5_ff(b, c, d, a, x[i+15], 22, 1236535329); a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510); d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632); c = md5_gg(c, d, a, b, x[i+11], 14, 643717713); b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302); a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691); d = md5_gg(d, a, b, c, x[i+10], 9 , 38016083); c = md5_gg(c, d, a, b, x[i+15], 14, -660478335); b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848); a = md5_gg(a, b, c, d, x[i+ 9], 5 , 568446438); d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690); c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961); b = md5_gg(b, c, d, a, x[i+ 8], 20, 1163531501); a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467); d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784); c = md5_gg(c, d, a, b, x[i+ 7], 14, 1735328473); b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734); a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558); d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463); c = md5_hh(c, d, a, b, x[i+11], 16, 1839030562); b = md5_hh(b, c, d, a, x[i+14], 23, -35309556); a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060); d = md5_hh(d, a, b, c, x[i+ 4], 11, 1272893353); c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632); b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640); a = md5_hh(a, b, c, d, x[i+13], 4 , 681279174); d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222); c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979); b = md5_hh(b, c, d, a, x[i+ 6], 23, 76029189); a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487); d = md5_hh(d, a, b, c, x[i+12], 11, -421815835); c = md5_hh(c, d, a, b, x[i+15], 16, 530742520); b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651); a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844); d = md5_ii(d, a, b, c, x[i+ 7], 10, 1126891415); c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905); b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055); a = md5_ii(a, b, c, d, x[i+12], 6 , 1700485571); d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606); c = md5_ii(c, d, a, b, x[i+10], 15, -1051523); b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799); a = md5_ii(a, b, c, d, x[i+ 8], 6 , 1873313359); d = md5_ii(d, a, b, c, x[i+15], 10, -30611744); c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380); b = md5_ii(b, c, d, a, x[i+13], 21, 1309151649); a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070); d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379); c = md5_ii(c, d, a, b, x[i+ 2], 15, 718787259); b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551); a = safe_add(a, olda); b = safe_add(b, oldb); c = safe_add(c, oldc); d = safe_add(d, oldd); } return Array(a, b, c, d);}function md5_cmn(q, a, b, x, s, t){ return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);}function md5_ff(a, b, c, d, x, s, t){ return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);}function md5_gg(a, b, c, d, x, s, t){ return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);}function md5_hh(a, b, c, d, x, s, t){ return md5_cmn(b ^ c ^ d, a, b, x, s, t);}function md5_ii(a, b, c, d, x, s, t){ return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);}function core_hmac_md5(key, data){ var bkey = str2binl(key); if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz); var ipad = Array(16), opad = Array(16); for(var i = 0; i < 16; i++) { ipad[i] = bkey[i] ^ 0x36363636; opad[i] = bkey[i] ^ 0x5C5C5C5C; } var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz); return core_md5(opad.concat(hash), 512 + 128);}function safe_add(x, y){ var lsw = (x & 0xFFFF) + (y & 0xFFFF); var msw = (x >> 16) + (y >> 16) + (lsw >> 16); return (msw << 16) | (lsw & 0xFFFF);}function bit_rol(num, cnt){ return (num << cnt) | (num >>> (32 - cnt));}function str2binl(str){ var bin = Array(); var mask = (1 << chrsz) - 1; for(var i = 0; i < str.length * chrsz; i += chrsz) bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32); return bin;}function binl2str(bin){ var str = ""; var mask = (1 << chrsz) - 1; for(var i = 0; i < bin.length * 32; i += chrsz) str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask); return str;}function binl2hex(binarray){ var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef"; var str = ""; for(var i = 0; i < binarray.length * 4; i++) { str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) + hex_tab.charAt((binarray[i>>2] >> ((i%4)*8 )) & 0xF); } return str;}function binl2b64(binarray){ var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; var str = ""; for(var i = 0; i < binarray.length * 4; i += 3) { var triplet = (((binarray[i >> 2] >> 8 * ( i %4)) & 0xFF) << 16) | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 ) | ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF); for(var j = 0; j < 4; j++) { if(i * 8 + j * 6 > binarray.length * 32) str += b64pad; else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); } } return str;}(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory(global):typeof define==="function"&&define.amd?define(factory):factory(global)})(typeof self!=="undefined"?self:typeof window!=="undefined"?window:typeof global!=="undefined"?global:this,function(global){"use strict";global=global||{};var _Base64=global.Base64;var version="2.5.1";var buffer;if(typeof module!=="undefined"&&module.exports){try{buffer=eval("require('buffer').Buffer")}catch(err){buffer=undefined}}var b64chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var b64tab=function(bin){var t={};for(var i=0,l=bin.length;i<l;i++)t[bin.charAt(i)]=i;return t}(b64chars);var fromCharCode=String.fromCharCode;var cb_utob=function(c){if(c.length<2){var cc=c.charCodeAt(0);return cc<128?c:cc<2048?fromCharCode(192|cc>>>6)+fromCharCode(128|cc&63):fromCharCode(224|cc>>>12&15)+fromCharCode(128|cc>>>6&63)+fromCharCode(128|cc&63)}else{var cc=65536+(c.charCodeAt(0)-55296)*1024+(c.charCodeAt(1)-56320);return fromCharCode(240|cc>>>18&7)+fromCharCode(128|cc>>>12&63)+fromCharCode(128|cc>>>6&63)+fromCharCode(128|cc&63)}};var re_utob=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;var utob=function(u){return u.replace(re_utob,cb_utob)};var cb_encode=function(ccc){var padlen=[0,2,1][ccc.length%3],ord=ccc.charCodeAt(0)<<16|(ccc.length>1?ccc.charCodeAt(1):0)<<8|(ccc.length>2?ccc.charCodeAt(2):0),chars=[b64chars.charAt(ord>>>18),b64chars.charAt(ord>>>12&63),padlen>=2?"=":b64chars.charAt(ord>>>6&63),padlen>=1?"=":b64chars.charAt(ord&63)];return chars.join("")};var btoa=global.btoa?function(b){return global.btoa(b)}:function(b){return b.replace(/[\s\S]{1,3}/g,cb_encode)};var _encode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(u){return(u.constructor===buffer.constructor?u:buffer.from(u)).toString("base64")}:function(u){return(u.constructor===buffer.constructor?u:new buffer(u)).toString("base64")}:function(u){return btoa(utob(u))};var encode=function(u,urisafe){return!urisafe?_encode(String(u)):_encode(String(u)).replace(/[+\/]/g,function(m0){return m0=="+"?"-":"_"}).replace(/=/g,"")};var encodeURI=function(u){return encode(u,true)};var re_btou=new RegExp(["[À-ß][-¿]","[à-ï][-¿]{2}","[ð-÷][-¿]{3}"].join("|"),"g");var cb_btou=function(cccc){switch(cccc.length){case 4:var cp=(7&cccc.charCodeAt(0))<<18|(63&cccc.charCodeAt(1))<<12|(63&cccc.charCodeAt(2))<<6|63&cccc.charCodeAt(3),offset=cp-65536;return fromCharCode((offset>>>10)+55296)+fromCharCode((offset&1023)+56320);case 3:return fromCharCode((15&cccc.charCodeAt(0))<<12|(63&cccc.charCodeAt(1))<<6|63&cccc.charCodeAt(2));default:return fromCharCode((31&cccc.charCodeAt(0))<<6|63&cccc.charCodeAt(1))}};var btou=function(b){return b.replace(re_btou,cb_btou)};var cb_decode=function(cccc){var len=cccc.length,padlen=len%4,n=(len>0?b64tab[cccc.charAt(0)]<<18:0)|(len>1?b64tab[cccc.charAt(1)]<<12:0)|(len>2?b64tab[cccc.charAt(2)]<<6:0)|(len>3?b64tab[cccc.charAt(3)]:0),chars=[fromCharCode(n>>>16),fromCharCode(n>>>8&255),fromCharCode(n&255)];chars.length-=[0,0,2,1][padlen];return chars.join("")};var _atob=global.atob?function(a){return global.atob(a)}:function(a){return a.replace(/\S{1,4}/g,cb_decode)};var atob=function(a){return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g,""))};var _decode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(a){return(a.constructor===buffer.constructor?a:buffer.from(a,"base64")).toString()}:function(a){return(a.constructor===buffer.constructor?a:new buffer(a,"base64")).toString()}:function(a){return btou(_atob(a))};var decode=function(a){return _decode(String(a).replace(/[-_]/g,function(m0){return m0=="-"?"+":"/"}).replace(/[^A-Za-z0-9\+\/]/g,""))};var noConflict=function(){var Base64=global.Base64;global.Base64=_Base64;return Base64};global.Base64={VERSION:version,atob:atob,btoa:btoa,fromBase64:decode,toBase64:encode,utob:utob,encode:encode,encodeURI:encodeURI,btou:btou,decode:decode,noConflict:noConflict,__buffer__:buffer};if(typeof Object.defineProperty==="function"){var noEnum=function(v){return{value:v,enumerable:false,writable:true,configurable:true}};global.Base64.extendString=function(){Object.defineProperty(String.prototype,"fromBase64",noEnum(function(){return decode(this)}));Object.defineProperty(String.prototype,"toBase64",noEnum(function(urisafe){return encode(this,urisafe)}));Object.defineProperty(String.prototype,"toBase64URI",noEnum(function(){return encode(this,true)}))}}if(global["Meteor"]){Base64=global.Base64}if(typeof module!=="undefined"&&module.exports){module.exports.Base64=global.Base64}else if(typeof define==="function"&&define.amd){define([],function(){return global.Base64})}return{Base64:global.Base64}});if(typeof rafd=="undefined"){ rafd={};}rafd.rafe=function(raff,rafg){ setTimeout(raff,rafg); };rafd.rafh={ rafi:[], rafk:function(raff){ rafd.rafh.rafi.push(raff); }, rafl:function(){ for(var rafm=0;rafm< rafd.rafh.rafi.length;rafm++){ rafd.rafh.rafi[rafm](); } }};rafd.rafn=function(){ rafd.rafh.rafl();};rafd.rafosec_=100000;rafd.rafq=function(){ if(!$(rafs).hasClass("rui-prefix-pri")){ $(rafs).addClass("rui-prefix-pri").append("<a class='rui-prefix-dialog-pri'><em></em></a>"); $(".rui-app").css("display","block"); } rafd.rafosec_--; if(raft<=1||rafd.rafosec_<0 ){ rafd.rafn(); }else{ rafd.rafe(rafd.rafq,100); } }; rafv=function(rafw,$attrName){	var rafy = document.getElementsByTagName("script");	for (var i=0; i< rafy.length;i++) { var rafz =rafy[i]; if (rafz && rafz.getAttribute("src") && rafz.getAttribute("src").indexOf(rafw+".")>-1) { return rafz.getAttribute($attrName);	}	} return ""; };rafd.raga=[]; rafd.ragb=function(ragd){ return rafd.raga.indexOf(ragd)!=-1;};var raga =rafv( 'pro.rui.ant_min',"data-imports"); if(raga!=null){	rage=raga.split(","); for(var i=0;i<rage.length;i++){ rafd.raga.push(rage[i]);	} }else{ rafd.raga=[];} ragf=function(ragg,ragh,ragi) {	var ragk = document.head || document.getElementsByTagName($udHead)[0] || document.documentElement;	var ragl=document.createElement(ragm); ragl.type = ragn; if(ragi==null){ragi='/bin/pro.rui.lib/';} ragl.src = ragi+ragg; ragl.charset="utf-8"; try{ ragk.append(ragl);}catch(e){ragk.appendChild(ragl);} if(ragh){ document.addEventListener ? ragl.addEventListener("load", function(){ ragh(); },false): ragl.onreadystatechange = function() { if (new RegExp("/loaded|complete/").test(ragl.readyState)) { ragl.onreadystatechange = null; ragh(); } }; }}; raft=0; rafd.rago=function(ragg,ragh,ragi){ var ragq=hex_md5(ragg); var $urls=ragg.split(","); raft++; ragf(ragg,function(){ raft--; if(ragh)ragh(); },ragi); };rafd.rags=function(ragg,ragh){ var ragq=hex_md5(ragg); var $urls=ragg.split(","); raft++; ragf(ragg,function(){ raft--; if(ragh)ragh(); },""); }; rafd.ragt=function(ragg,ragi){ if(ragi==null)ragi='/bin/pro.rui.lib/'; var ragt = document.createElement(ragv); ragt.type='text/css'; ragt.rel = 'stylesheet'; ragt.href = ragi+ ragg+"?a=1";	var ragk= document.getElementsByTagName(ragw)[0]; ragk.insertBefore(ragt, ragk.firstChild); }; if(typeof JSLoader=="undefined"){ JSLoader={ importPackage:rafd.rags, import:rafd.rago, link:rafd.ragt, hasPlug:rafd.ragb, append:rafd.rafh.rafk }; JSLoader.packageRoot=function(sub){ if(sub==null)sub=""; return "http://storage.getlink.link/package/"+sub; };}else{ alert("ERR_Import[jsloader]");}$(function(){ rafd.rafq(); }); $(window).on('scroll.elasticity', function (e) {	e.preventDefault(); }).on('touchmove.elasticity', function (e) { e.preventDefault(); }); if(typeof ragy!="undefined"){ alert(ragy+"变量被占用,无法加载..."); } rafs="body";ragw="head";ragz="a";ragm="script";ragv="link";ragn="text/javascript";raha="pri.header";rahb="default";rahd=null;$udJV0_="javascript:void(0);";rahe=$;ragy=function(rahf,rahg){ if(rahg==null){ rahg=$(rahf); } var dom= { rahh:rahg.length>0, rahi:rahf, rahk:function(){ return rahg; }, rahl:function(lim){ if(lim==null)lim=1; var rahm=rahg.parent(); for(var rafm=1;rafm<lim;rafm++){ rahm=rahm.parent(); } return ragy("",rahm); }, rahn:function(raho){ rahg.after(raho); }, rahq:function(ragd,rahs){ rahg.css(ragd,rahs); }, rafk:function(raho){ rahg.append(raho); }, raht:function(raho){ rahg.prepend(raho); }, rahv:function(rahw){ return rahg.prop(rahw); }, rahy:function(rahw){ if(rahw==rahd){ return rahg.height(); }else return rahg.height(rahw); }, rahz:function(rahw){ if(rahw==rahd){ return rahg.width(); }else return rahg.width(rahw); }, raia:function(raff){ rahg.unbind("click").click(function(){ var raib=ragy("",$(this)); raff(raib); }); }, raid:function(raie){ return { remove:function(){ rahg.removeClass(raie); }, add:function(){ rahg.addClass(raie); }, exist:function(){ return rahg.hasClass(raie); } } }, raif:function(raig){ return { remove:function(){ rahg.removeAttr(raig); }, val:function(raih){ if(raih==rahd){ return rahg.attr(raig); }else rahg.attr(raig,raih); }, exist:function(){ return rahg.val()!=null; } } }, raii:function(rahf,raik){ var rail= rahg.find(rahf); if(rail.length==1){ return ragy("",$(rail[0])); }else if(rail.length>1){ var arr=[]; for(var rafm=0;rafm<rail.length;rafm++){ arr.push(ragy("",$(rail[rafm]))); } return raik==rahd?arr:arr[raik]; } return ragy(""); }, raim:function(rahf){ return rahg.find(rahf).length; }, rain:function(mHTML){ if(mHTML==null){ return rahg.html(); }else{ rahg.html(mHTML); } }, raio:function(raho){ rahg.replaceWith(raho); }, raih:function(raiq){ if(mVal_==null){ return rahg.val(); }else{ rahg.val(mVal_); } } }; return dom;}; UIDom=function(selector,obj){ var ins=ragy(selector,obj); return { object:function(){ return ins.rahg; }, class:function(item){ return ins.raid(item); }, attr:function(item){ return ins.raif(item); }, get:function(selector,$i){ var objs= $ins.rais($selector); if(objs.length==1){ return ragy("",$($objs[0])); }else if($objs.length>1){ var arr=[]; for(var rafm=0;rafm<objs.length;rafm++){ arr.push(ragy("",$(objs[rafm]))); } return i==null?arr:arr[raik]; } }, getCount:function(selector){ return ins.rais(selector).length; }, html:function(mHTML){ return ins.rain(mHTML); }, replace:function(newObj){ ins.raio(newObj); }, val:function(mVal){ return ins.raih(mVal); } }; }; if(typeof rait!="undefined"){ alert(rait+"变量被占用,无法加载..."); } rait={ raiv: function() { return function() { this.raiw.apply(this, arguments); }; } }; rait.raiy={};rait.raiy.raiz="rui-table-layout-item";rait.raiy.raka="raaa"; rait.raiy.rafs="body";rakbNul_=null;rait.rakd={};rait.rakd.rake=rait.raiv();rait.rakd.rake.prototype={ raiw:function(){ }, rakf:false, rakg:false, rakh:false, $url:false, raki:function(rahg){ this.rakh=rahg; }, raii:function(){ return this.rakh; }, rakk:function(){ return "rakl"+this.rakm; }, };rait.rakd.rake.prototype.param=function(name){ if(this.ragg){ var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = this.ragg.match(reg); if (r != null) return unescape(r[2]); return false; }else{ return false; } }; rait.rakn={}; rait.rakn.rako=1;rait.rakn.rakq=function(rakf){ rait.rakn.rako++; var raks= "rui_uiid_"+ rait.rakn.rako; var rake=new rait.rakd.rake(); rake.rakf= rakf==rakbNul_?raks:rakf; rait.rakn[rake.rakf]=rake; return rait.rakt(rake.rakf); };rait.rakt=function(rakf){	return rait.rakn[rakf]; };rait.rakv=function(rakf){	return typeof rait.rakt(rakf)=="object";};rait.rakt.rakw=function(){ for(var ragd in rait.rakn) {	if(typeof rait.rakt(ragd).raii== "undefined" )continue;	var rakl= rait.rakt(ragd).raii();	if(typeof rakl.resize != "undefined" ){	rakl.resize();	}	} };rait.tag={};rait.clearByTag=function(raky){ var tags=rait.tag[raky]; if(tags!=null){	for(var i=0;i<tags.length;i++){	delete rait.rakn[tags[i]];	} } };rait.rakz=function(ragd,rala,ralb){	var rakl=false;	if(rala.raif("id").exist()){ var rakf=rala.raif("id").val(); var rald=rala.rahk().hasClass(rait.raiy.raka); if(rait.rakv(rakf)&&!rald){ delete rait.rakn[rakf]; }else if(rait.rakv(rakf)){ return; } rakl=rait.rakn.rakq(rakf);	}else{	rakl=rait.rakn.rakq();	} if(ralb!=null){ if(rait.tag[ralb]==null)rait.tag[ralb]=[]; rait.tag[ralb].push(rakl.rakf); }	var rale=new ralf.ralg[ragd](rala,rakl); rait.rakt(rakl.rakf).raki(rale); }; rait.ralh=function(rahl,ralb){	if(rahl==null) rahl=rait.raiy.rafs ;	var rali=function(ragd){ var ralk=ragy(rahl).raii("."+ragd); if(ralk.rahh&&!Object.isArray(ralk)){ rait.rakz( ragd,ralk,ralb); }else if(Object.isArray(ralk))	for(var rall=0;rall<ralk.length;rall++){ rait.rakz( ragd,ralk[rall],ralb);	}	};	for(var ragd in ralf.$renders1_){	rali(ragd);	}	for(var ragd in ralf.$renders2_){	rali(ragd);	}	for(var ragd in ralf.$renders3_){	rali(ragd);	} }; rafd.rafh.rafk(function(){	rait.ralh(); });rait.ralm=function(target,allrenders){	var raln=allrenders==null?target.children("[data-render]"):target.find("[data-render]");	for(var rafm=0;rafm<raln.length;rafm++){ var obj=$(raln[rafm]); if(rait.rakv(obj.attr("id"))){ continue ;	} var nameVal={}; var eleValueTags="input,areatext,select"; var eleValue=obj.prop("tagName"); if(obj.attr("data-name")!=null){	nameVal[obj.attr("data-name")]=eleValueTags.indexOf(eleValue) >= 0?obj.val():obj.html(); } var childNv=obj.find("name,data-name,data"); for(var rafm=0;rafm<childNv.length;rafm++){	var item=childNv[rafm];	nameVal[item.attr("data-name")]=eleValueTags.indexOf(eleValue) >= 0?item.val():item.html(); } var render= obj.attr("data-render"); render=render.replace(/\./g,"-"); var renderName=render.split("?")[0]; var rakl=rait.rakn.rakq(obj.attr("id")!=null?obj.attr("id"):null); var rala=ragy(obj); if(ralf.ralg[renderName]!=null){	var rale=new ralf.ralg[renderName](rala,rakl);	rale.set(nameVal);	rait.rakt(rakl.rakf).raki(rale); }	}}; rait.ralo={};rait.ralo.ralq={};rait.ralo.rals=false;rait.ralo.ralt=function(rals){	rait.ralo.rals=rals;	var ralv= {	ralw:false,	rafq:function(){},	bind:function(raly){	this.ralw=true;	var ralz=rahe(raly);	for(var rafm=0;rafm<ralz.length;rafm++){	var rama=rahe(ralz[rafm]);	var ramb=rama.attr("href"); rama.attr("onclick","rait.ralo.rafh('"+ramb+"');return false;"); }	}	};	setTimeout(function(){ if(!ralv.ralw){	ralv.rafq(); }	},100); return ralv; };rait.ralo.rafh=function(ragg){ if(ragg.substring(0,4)=="java")return;	var ramd=rait.ralo.rals;	rait.clearByTag("rame"); rahe(ramd).html("").removeClass("lazyload-init"); history.pushState({},"",ragg); rahe.ajax({	                type: "get",	                url: ragg,	                data: {},	                dataType: "html",	                success: function (res) {	
    
console.log(res);
alert(33);                  
     var rain=rahe($.parseHTML(res,true));	
     var ramf=rain.find(ramd).html();	
     if(ramf==null||ramf==""){	
         for( rafm=0;rafm<rain.length;rafm++){
             	var ranq=$(rain[rafm]);	if(ramd=="."+ranq.attr("class")||ramd=="#"+ranq.attr("id")){	
                     ramf=ranq.html();
                        }	
                    }	
                }	
          alert(1111);
           console.log(ramf);

                var ramg=(location.href+"").md5();	if(rait.ralo.ralq[ramg]==null){	rait.ralo.ralq[ramg]=ramf;	}	rahe(ramd).html(ramf);	                }  }); return false; }; $(document).ready(function(e) {	if (window.history && window.history.pushState) { $(window).on('popstate', function () {	var ramh=rahe(rait.ralo.rals); setTimeout(function(){ var ramg=(location.href+"").md5(); ramh.removeClass("lazyload-init").html(rait.ralo.ralq[ramg]);	},1); });	} });if(typeof ralf!="undefined"){ alert(ralf+"变量被占用,无法加载..."); } ralf={}; ralf.raid={ raiv: function() { return function() { this.raiw.apply(this, arguments); }; } }; ralf.rakd = ralf.raid.raiv();ralf.rakd.prototype = { rami: false, rake: false, ramk: false, raiw: function(raml) { this.rami = raml.change("\\.", "-"); }, ramm: false, ramn: false, setJQRender: function(renderFun) { this.ramk = renderFun; }, setLayout: function(layout, callback) { this.ramm = "<div>" + layout + "</div>"; this.ramn = callback; }, view: false, predata: {}, event: function(name) { this.rake.event(name, "__args", arguments); }, getParam: function(name) { return this.rake.getParam(name); }};ralf.ramo=function(rakf){ var rahg=$(rakf); var rakf=rakf.change("#",""); if(rait.rakt(rakf)&& rahg.hasClass(rait.raiy.raka)){ return rait.rakt(rakf).raii(); }else{ return false; } };ralf.ralg={}; ralf.$renders1_={}; ralf.$renders2_={};ralf.$renders3_={}; ralf.raht=function(ragd,rale){ ralf.ralg[ragd]=rale; ralf.$renders1_[ragd]=rale; };ralf.rafk=function(ragd,rale){ ralf.ralg[ragd]=rale; ralf.$renders2_[ragd]=rale;};ralf.ramq=function(ragd,rale){ ralf.ralg[ragd]=rale; ralf.$renders3_[ragd]=rale; }; ralf.rams=function(rami,$render){ ralf.raht(rami.replace(/\./g,"-") ,ralf.ramt($render)); }; ralf.ramv=function(rami,$render){ ralf.rafk(rami.replace(/\./g,"-") ,ralf.ramt($render)); }; ralf.ramt=function(ramw){ var ramy= ralf.raid.raiv(); ramy.prototype={ raiw:function(ramz,rakl){ if(typeof this.rali !="undefined"){ this.rali(ramz.rahk(),rakl); } } }; ramy.prototype.rana=false; ramy.prototype.ramw=ramw; ramy.prototype.rale=function(){ if(typeof this.ramw=="function" ){ this.ramw= this.ramw(); } return this.ramw; }; ramy.prototype.rali= function(ranb,rakl){ if(ranb.hasClass(rait.raiy.raiz)|| ranb.hasClass(rait.raiy.raka) ){ return ; } ranb.attr("id",rakl.rakf); ranb.addClass(rait.raiy.raka); var name= ranb.attr("name"); if(name==null){name=ranb.attr("data-name");} this.model={ getParam:function(name){ return rakl.param(name); }, getWidget:function(){ return ralf.ramo("#"+this.id); }, id:rakl.rakf, name:name==null?"":name, events:[], event:function(name,order,rand){ if(order!="__args"){ rand=arguments; } if(rand.length==1){ this.events[name](rand[1]); } else if(rand.length==2){ this.events[name](rand[1],rand[2]); } else if(rand.length==3){ this.events[name](rand[1],rand[2],rand[3]); } else if(rand.length==4){ this.events[name](rand[1],rand[2],rand[3],rand[4]); } else this.events[name](); } }; this.rale().rake=this.model; if(this.rale().ramm){ var layout= this.rale().ramm; var rane=ranb.data(); rane["title"]=ranb.attr("title"); rane["text"]=ranb.text(); rane["type"]=ranb.attr("type"); rane["name"]=this.model.name; rane["id"]=this.model.id; rane["query"]=function(name){ var renders=this.render.split("?"); if(renders.length>1){ var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = renders[1].match(reg); if (r != null) return unescape(r[2]); } return false; }; if(rane.render!=null&&rane.render.split("?").length>1){ var ranf = rane.render.split("?")[1].split("&"); for (var rafm=0;rafm<ranf.length;rafm++) { var rang = ranf[rafm].split("="); rane[rang[0]]=rang[1]; } } for(var ranh in rane){ layout=layout.change('@{'+ranh+'}', rane[ranh]); } rani =layout.match(/\>\{[\s\S]*?\}\</ig); if(rani==null)rani=[]; for(var rafm=0;rafm<rani.length;rafm++){ var ragd=rani[rafm].change(">{",""); ragd=ragd.change("}<",""); layout=layout.change(">{"+ragd+"}<","><data data-name='"+ragd+"'></data><"); } var rahg=$(layout); rahg.attr("id",rane["id"]); rahg.addClass( ranb.attr("class")); ranb.replaceWith(rahg); this.rale().view=rahg; this.rale().predata=rane; if( this.rale().ramn){ this.rale().ramn(rahg,rane); } this.rana=rahg; }else{ this.rana= this.rale().view= this.rale().ramk(ranb,this.model); } }; ramy.prototype.model=false; ramy.prototype.setEvent=function(name,fun){ this.model.events[name]=fun; }; ramy.prototype.event=function(name){ if(this.model.events[name]!=null){ this.model.event(name,"__args",arguments); return true; }else{ var rank=null; for(var rahk in this.rale()){ if(rahk==name){ var rand=arguments; if(rand.length==1){ rank=this.rale()[rahk](rand[1]); } else if(rand.length==2){ rank= this.rale()[rahk](rand[1],rand[2]); } else if(rand.length==3){ rank=this.rale()[rahk](rand[1],rand[2],rand[3]); } else if(rand.length==4){ rank=this.rale()[rahk](rand[1],rand[2],rand[3],rand[4]); } else{ rank=this.rale()[rahk](); } } } return rank; } }; ramy.prototype.set=function(data){ if(this.rale().ramm){ var ranl= this.rana; var ranm=["href","title","data","class" ]; for(var rann=0;rann<ranm.length;rann++){ var rano=ranm[rann]; var ranlhref_=ranl.find("["+ rano+"]"); ranlhref_.push(ranl); for(var rafm=0;rafm<ranlhref_.length;rafm++){ var ranq=$(ranlhref_[rafm]).attr(rano); if(ranq!=null&& ranq!=""){ rans =ranq.match(/\{[\s\S]*?\}/ig); if(rans==null)rans=[]; for(var rant=0;rant<rans.length;rant++){ var ranv=rans[rant].change('{',""); ranv=ranv.change('}',""); ranq=ranq.change(rans[rant],data[ranv]); } $(ranlhref_[rafm]).attr(rano,ranq); } } } } this.setJQObject(data); this.event("reload",data); }; ramy.prototype.ranw=function(){ var rany=[]; rany.push(this.rale().view); rany=$.merge(rany,this.rale().view.find("[name]")); rany=$.merge(rany,this.rale().view.find("[data-name]")); return rany; }; ramy.prototype.ranz="input,INPUT,textarea,TEXTAREA,select,SELECT"; ramy.prototype.setJQObject=function(data){ var rany=this.ranw(); for(var rafm=0;rafm<rany.length;rafm++){ var raoa=$( rany[rafm]); var raob=raoa.attr("name")?raoa.attr("name"):raoa.attr("data-name"); if(raob==null)continue; if(this.ranz.indexOf(raoa.get(0).tagName) != -1 ){ raoa.val(data[raob]); raoa.trigger("change"); }else{ raoa.html(data[raob]); } } }; ramy.prototype.get=function(){ var rany=this.ranw(); var data={}; for(var rafm=0;rafm<rany.length;rafm++){ var raoa=$(rany[rafm]); var raob=raoa.attr("name")?raoa.attr("name"):raoa.attr("data-name"); if(raob==null)continue; if(this.ranz.indexOf(raoa.get(0).tagName) != -1 ){ data[raob]=raoa.val(); }else{ data[raob]= raoa.html(); } } return data; }; ramy.prototype.resize=function(){ }; return ramy;}; if(typeof XRender=="undefined"){ raod={}; raod.rakd=function(raoe,$arg1_){ var rakf= raoe.change("#",""); var raof=rait.rakt(rakf)!=null&&$(raoe).hasClass(rait.raiy.raka); return { widget:function(render, html){ if(raof){ return rait.rakt(rakf).raii(); }else{ if(render==null){ console.log(rakf); } var raog=render.replace(/\\./g,"-"); rakl=rait.rakn.rakq(rakf); rala=html==null?ragy(raoe):ragy(false,$(html)); var rale=new ralf.ralg[raog](rala,rakl); rait.rakt(rakl.rakf).raki(rale); return rait.rakt(rakl.rakf).raii(); } } }; }; XRender=function(raoe,$arg1_){ if(typeof raoe=="string"&&raoe.has("#")){ return raod.rakd(raoe,$arg1_); } else if(typeof(raoe)=="function") { rafd.rafh.rafk(raoe); } }; XRender.extend=function(type,render){ var rami=""; if(typeof render=="function" ){ rami= new render().rami; } else{ rami=render.rami; } if(type=="layout"){ ralf.raht(rami.replace(/\./g,"-") ,ralf.ramt(render)); }else{ ralf.rafk(rami.replace(/\./g,"-") , ralf.ramt(render)); } }; XRender.widget=ralf.rakd; XRender.layout=ralf.rakd; XRender.lazyload=function(selector){ return rait.ralo.ralt(selector); }; }else{ alert("ERR_Import[XRender]");}XRender.core={};XRender.core.getListRender=function(package){ var widget = new ralf.rakd(package); widget.ramm=false; widget.setJQRender(function(view){ widget.ramm=view.html(); view.html("<div class='css-list-src'></div>"); this.rana=view; }); widget.append=function(index,raoh){ var rain=this.ramm; for(var ranh in raoh){ rain=rain.change("@{"+ ranh+'}',raoh[ranh]); rain=rain.change('{'+ ranh+'}',raoh[ranh]); 　　} this.rana.find(".css-list-src").append(rain); this.rana.find("img").each(function(){ var raoi=$(this); if( raoi.attr("data-src")){ raoi.attr("src",raoi.attr("data-src").split(",")[0]); raoi.removeAttr("data-src"); } }); this.rana.find(".clearfix").remove(); this.rana.find(".css-list-src").append("<div class='clearfix'></div>"); }; widget.appends=function(raok,raol){ if(raol!=null){ this.rana.find(".css-list-src").html(""); } for(var rafm=0;rafm<raok.length;rafm++){ this.append(rafm,raok[rafm]); } }; return widget;};if(typeof raom=="undefined"){ raom={};} if(typeof raom.raot!="undefined"){ alert("Util[RUI] is init!");}raom.raov="1";raom.raow="2";raom.raot=function(){ };raom.raot.data=function(ragd,rahs,raqa){ ragd=ragd.md5(); if(rahs==null){ var raqb= $.cookie(ragd); if(raqb==null||raqb=="null")return false;else{ var raoh= raom.raqd(raqb).val(); return raoh.rahk; } }else{ var raoh={}; raoh.rakg=(typeof val =="object")?raom.raov:raom.raow; raoh.rahk=rahs; var raqe=raom.raqd(raoh).toString(); if(raqa==null){ $.cookie(ragd,raqe, { expires: 7,path:"/" }); }else { var raqf = new Date(); raqf.setTime(raqf.getTime()+raqa); $.cookie(ragd,raqe, { expires:raqf,path:"/" }); } } }; raom.raot.raqg=function(){ return (navigator.browserLanguage || navigator.language).toLowerCase(); }; raom.raot.raqh= function(){ var u = navigator.userAgent, app = navigator.appVersion; return { trident: u.indexOf('Trident') > -1, presto: u.indexOf('Presto') > -1, webKit: u.indexOf('AppleWebKit') > -1, gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, mobile: !!u.match(/AppleWebKit.*Mobile.*/), ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/), android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, iPhone: u.indexOf('iPhone') > -1 , iPad: u.indexOf('iPad') > -1, webApp: u.indexOf('Safari') == -1 };}(); raom.raot.os=function(type,callback){ if(callback==null){ return raom.raot.raqh[type]; }else{ var bol=raom.raot.raqh[type]; if(callback!=null) callback(bol); else return bol; } }; raqi={ raiv: function() { return function() { this.raiw.apply(this, arguments); }; } }; raom.raot.$Global=raqi.raiv();raom.raot.$Global.prototype={ raiw:function(raqk){ this.ragd=raqk; }, ragd:false, rahs:false, set:function(raql){ if(this.rahs){ alert("全局变量不支持重载!"); }else{ this.rahs=raql; } }, get:function(){ return this.rahs; } }; raom.raqm={}; raom.raot.global=function(name,value,check){ var raqn=raom.raqm[name]; if("undefined" == typeof raqn){ raom.raqm[name]=new raom.raot.$Global(name); } if(value!=null){ raom.raqm[name].set(value); }else{ return raom.raqm[name].get(); } }; if(typeof raom=="undefined"){ raom={};} if(typeof raom.raqo!="undefined"){ alert("Util[RUI] is init!");}raom.raqo={};raom.raqo.param=function(name,def,url) { if(def==null)def=""; var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r=null; if(url==null){ r =window.location.search.substr(1).match(reg); }else{ var urls=url.split("?"); if(urls.length>1){ r=urls[1].match(reg); } } if (r != null) return unescape(r[2]); return def; };raom.raqo.paramJSON=function(paramNames){ var param={}; param[paramNames]=raom.raqo.param(paramNames); return param; };raom.raqo.fragments=function(){ var url=location.href; var result = []; if(url.split("#").length<2)return {}; var query = url.split("#")[1]; var queryArr = query.split("&"); var obj = {}; queryArr.forEach(function(item){ var key = item.split("=")[0]; var value = item.split("=")[1]; obj[key] = value; }); return obj; };raom.raqo.changeArg=function(arg,arg_val,url){ var pattern=arg+'=([^&]*)'; var replaceText=arg+'='+arg_val; if(url==null) url=location.href; if(url.match(pattern)){ var tmp='/('+ arg+'=)([^&]*)/gi'; tmp=url.replace(eval(tmp),replaceText); return tmp; }else{ if(url.match('[\?]')){ return url+'&'+replaceText; }else{ return url+'?'+replaceText; } } }; if(typeof raom=="undefined"){ raom={};} if(typeof raom.raqq!="undefined"){ alert("Util[RUI] is init!");}raqs={ raiv: function() { return function() { this.raiw.apply(this, arguments); }; } }; raom.raqt= raqs.raiv();raom.raqt.prototype={ raiw:function(mId){this.rakf=mId;}, rakf:false, $funs1_:[], raoh:false, ranm:"", append:function(raff){ this.$funs1_.push({"rakf":this.rakf,"raff":raff}); }, run:function(raqv){ this.raoh=raqv; for(var i=0;i<this.$funs1_.length;i++){ var arg= this.$funs1_[i]; if(arg.rakf==this.rakf)arg.raff(raqv); } } }; raom.raqq={};raom.raqq.raw=function(url,data,callback){ $.ajax({ type: 'post', cache: false, dataType: 'json', contentType:'application/json', data: JSON.stringify(data), url: url, success: function(raqw) { callback( raqw ); }, error:function() { } }); };raom.raqq.raqy=function(cls){ return { clazz:cls, auth:function(){ this.append("rid", $("body").attr("data-rid")); this.append("token", $("body").attr("data-token")); return this; }, append:function(name,val){ var id="#"+this.clazz+"_"+name; if($(id).length > 0)$(id).remove(); var inp=$("<input id='"+id+"' name='"+name+"' type='hidden' >") .addClass(this.clazz) .val(val); $("body").append(inp); return this; }, post:function(url,back){ $("."+this.clazz).post(url,back); } } };raom.raqd=function(data){if(typeof data =="string"){ data=JSON.parse(data);}return { val:function(){ return data; }, toString:function(){ return JSON.stringify(data); }, toColumn:function(){ var data={}; for(var key in ds){ var newKey=""; for(var i=0;i<key.length;i++){ var key1=key.charAt(i); if(key1 === key1.toUpperCase()){ newKey+="_"+key1.toLowerCase(); }else{ newKey+=key1; } } data[newKey]=ds[key]; } return data; } };}; if(typeof raom=="undefined"){ raom={};} if(typeof raom.raqz!="undefined"){ alert("Math[RUI] is init!");}raom.raqz={};raom.raqz.num =function(val,fixed){ var num=Number(val); if(isNaN(val)||(num+"")=="NaN"){ num=0; } if(fixed!=null){ num=Number(num.toFixed(fixed)); } return num; }; if(typeof raom=="undefined"){ raom={};} if(typeof raom.ralm!="undefined"){ alert("Draw[RUI] is init!");}raom.ralm={};raom.ralm.magicc=function($mainColor){ var colors = []; for (i = 0; i < 5; i += 1) { colors.push(Highcharts.Color($mainColor).brighten((i - 3) / 7).get()); } for (i = 0; i < 5; i += 1) { colors.push(Highcharts.Color(colors[3]).brighten((i - 3) / 7).get()); } return colors; }; if(typeof raom=="undefined"){ raom={};} if(typeof raom.raon!="undefined"){ alert("Main[RUI] is init!");}raom.raoo={ };raom.raoo["function"]=function(raoq,raff){ if(typeof rafd!="function") rafd.rafh.rafk(raff); };raom.raon=function(raoq,$arg1_){ if(typeof(raoq)=="function"){ $arg1_=raoq; raoq="function"; } var raos=raom.raoo[raoq]; if(raos){ raos(raoq,$arg1_); }else{ return XRender(raoq,$arg1_); } };raom.raon.register=function(name,fun){ raom.raoo[name]=fun;};if(typeof raom=="undefined"){ raom={};} if(typeof raom.rasa!="undefined"){ alert("EventCore[RUI] is init!");}rasb={ raiv: function() { return function() { this.raiw.apply(this, arguments); }; } }; raom.rasa=rasb.raiv();raom.rasa.prototype={ ralv:{}, raiw:function(){ } };raom.rasa.prototype.set=function(name,fun) { if(fun==null)fun=function(){}; this.ralv[name]=fun;}; raom.rasa.prototype.push=function(name,fun) { if(typeof this.ralv[name] =="function"){ var $fun1_=this.ralv[name]; this.ralv[name]=[]; this.ralv[name].push($fun1_); }else if(typeof this.ralv[name] !="object") { this.ralv[name]=[]; } this.ralv[name].push(fun);};raom.rasa.prototype.get=function(name) { var rasd=this.ralv[name]; var rahg= { rand:[], $stoped:false, rase:function(){ var rakh=this; setTimeout(function(){ if(rakh.$stoped){ }else{ rakh.rasf(rakh.rand); } },100); }, exec:function(){ var rand=arguments; this.rasf(rand); }, rasf:function(rand){ this.$stoped=true; if(rand.length>4){ alert("Event[RUI]:不支持的参数数量>4"); } if(typeof rasd =="object"){ }else if(typeof rasd =="function"){ $fun1_=rasd; rasd=[]; rasd.push($fun1_); }else{ console.log("Event[RUI]:不支持的类型"); rasd=false; } if( rasd) for(var rafm=0;rafm<rasd.length;rafm++){ raff=rasd[rafm]; if(rand.length==1){ raff(rand[0]); } else if(rand.length==2){ raff(rand[0],rand[1]); } else if(rand.length==3){ raff(rand[0],rand[1],rand[2]); } else if(rand.length==4){ raff(rand[0],rand[1],rand[2],rand[3]); } else{ raff(); } } } }; var rand=arguments; for(var rafm=1;rafm<rand.length;rafm++){ rahg.rand.push(rand[rafm]); } rahg.rase(); return rahg;}; if(typeof rui!="undefined"){ alert("initRui Error"); } rui=raom.raon; rui.widget= ralf.rakd;rui.util=raom.raqq; rui.json=raom.raqd;rui.client=raom.raot;rui.request=raom.raqo;rui.class={ modules:{}, register:function(name,note){ if(note==null)note="init"; this.modules[name]=note; }, has:function(name){ return this.modules[name]!=null; } }; if(typeof raom.rasa!="undefined"){ rui.class.register("event","事件"); rui.class.Event=raom.rasa;}if(typeof raom.raqt!="undefined"){ rui.class.register("loader","加载器"); rui.class.Loader=raom.raqt; rui.class.register("loader","全局参数"); rui.class.Global=raom.raot.$Global;} if (!Object.keys) { Object.keys = function (rahg) { var rasg = [],rash; for (rash in rahg){ if (Object.prototype.hasOwnProperty.call(rahg, rash)) { rasg.push(rash); } } return rasg; };};Object.isArray = function (obj) { return Object.prototype.toString.call(obj)== '[object'+decodeURI("%20")+'Array]';};Date.prototype.format = function(rasi){	var o = {	"M+" : this.getMonth()+1,	"d+" : this.getDate(),	"h+" : this.getHours(),	"m+" : this.getMinutes(),	"s+" : this.getSeconds(),	"q+" : Math.floor((this.getMonth()+3)/3),	"S" : this.getMilliseconds()	} ;	if(/(y+)/.test(rasi)) {	rasi = rasi.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));	}	for(var k in o) {	if(new RegExp("("+ k +")").test(rasi)) {	rasi = rasi.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));	}	}	return rasi;	};Date.prototype.diff=function(startDate){ if(startDate==null)startDate=new Date(); var date3=this.getTime()-startDate.getTime(); var days=Math.floor(date3/(24*3600*1000)); var leave1=date3%(3600*1000); var hours=Math.floor(date3/(3600*1000)); var leave2=leave1%(3600*1000); var minutes=Math.floor(leave2/(60*1000)); var leave3=leave2%(60*1000) ; var seconds=Math.round(leave3/1000); if(hours<=0)hours="0"; if(minutes<=0)minutes="0"; if(seconds<=0)seconds="0"; if(hours<10)hours="0"+hours; if(minutes<10)minutes="0"+minutes; if(seconds<10)seconds="0"+seconds; var lab= hours+":"+minutes+":"+seconds+""; return lab;};String.prototype.has=function(rask) {	return this.indexOf(rask) != -1 ;	}; String.prototype.change=function(rasl,rasm) {	return this.replace(new RegExp(rasl,"g"),rasm); }; String.prototype.encodeSelector=function() {	var str=this.replace(new RegExp(".","g"),"_2_"); str=this.replace(new RegExp("#","g"),"_1_");	return str; }; String.prototype.decodeSelector=function() {	var str=this.replace(new RegExp("_2_","g"),"."); str=this.replace(new RegExp("_1_","g"),"#");	return str; }; String.prototype.trim=function() {	return this.replace(new RegExp(/(\s*$)/g,"g"),""); }; String.prototype.success=function() { return {"code":200,"data":this}; }; String.prototype.error=function() { return {"code":-500,"data":this};	};	String.prototype.md5=function() { return hex_md5(this); };	if(typeof raoy=="undefined"){ raoy={};} raoy.raid={ raiv: function() { return function() { this.raiw.apply(this, arguments); }; } }; raoy.rago=rafd.rago; raoy.rags=rafd.rags; raoy.ragt= rafd.ragt; raoy.ragb=rafd.ragb; raoy.rakl={};raoy.rakl.rakg={}; raoy.rala= ragy;raoy.dom= UIDom; raoy.rasn=new rui.class.Loader("raso");rui.dict={};rui.dict["baseTV"]=[];rui.dict["baseTV"][0]={"text":"请选择","value":""};rui.dict["baseTV"][1]={"text":"是","value":"1"};rui.dict["baseTV"][2]={"text":"否","value":"0"};rui.dict["baseTV2"]=[];rui.dict["baseTV2"][0]={"text":"是","value":"1"};rui.dict["baseTV2"][1]={"text":"否","value":"0"}; JSLoader.append(function(){ setTimeout(function(){ raoy.rasn.run(); },300); setTimeout(function(){ $(rafs).removeClass("rui-prefix-pri"); $(".rui-prefix-dialog-pri").fadeOut(); },500); });rui.pages={};rui.register("function",function(raoe,raff){ if(typeof raoy.rakl.rasq=="undefined"||raoy.rakl.rasq.rass==false){ raoy.rasn.append(raff); }else{ var rast=$(raoy.rakl.rasq.rass); if(!$(rast).hasClass("lazyload-init")){ rait.ralh("#"+rast.attr("id"),"rame"); $(rast).addClass("lazyload-init"); } raff(); } }); rui.register("mode",function(order,$arg1_){ rui.client.global("mode",$arg1_); raoy.rala(rafs).raid($arg1_).add(); });rui.register("widget.extends",function(order,$arg1_){ var rami=""; if(typeof $arg1_=="function" ){ rami= new $arg1_().rami; } else{ rami=$arg1_.rami; } if(rami=="rui-ant-form"){ ralf.raht(rami.replace(/\./g,"-") ,ralf.ramt($arg1_)); }else ralf.rafk(rami.replace(/\./g,"-") ,ralf.ramt($arg1_)); } ); raoy.rago("com/jquery/utils/moment.min.js"); if(raoy.ragb("icon")) raoy.ragt("com/fontawesome/css/font-awesome.one.css"); rui.rasv={};rui.setCallback=function($name,$back){ raoy.rasv[$name]=$back; }; rui.userdata=function(k,mTimeout){ return { json:function(obj){ return raom.raot.data(k,obj); }, string:function(v){ return this.json(v)} };}; rui.num=raom.raqz.num; rui.magicc=raom.ralm.magicc; rui.raw=raom.raqq.raw; rui.param=raom.raqo.param;rui.paramJSON=raom.raqo.paramJSON; rui.fragments=raom.raqo.fragments;rui.changeArg=raom.raqo.changeArg;rui.modelToColumn=function(ds){ return rui.json(ds).toColumn(); }; rui.action=function($url,cheanthis){ if(cheanthis){ window.location.replace($url); }else{ window.location=$url; }};rui.widgetMaskDialog=function(callback){ var selector="rui-widget-close-dialog-pri"; $("."+selector).remove(); $("body").append($("<div class='"+selector+"'></div>")); $("."+selector).click(function(){ $(".rui-dialog-close-handle").remove(); $(this).remove(); if(callback)callback(); });}; ruiEvent= ruiEvent=new rui.class.Event();rui.setEvent=function(name,fun) { ruiEvent.set(name,fun); }; rui.pushEvent=function(name,fun) { ruiEvent.push(name,fun);};rui.event=function() { var rand=arguments; var $args1_=[]; for(var i=0;i<rand.length;i++){ $args1_.push(rand[i]); } ruiEvent.get(rand[0]).rasf($args1_);}; $(function(){ rui.client.os("mobile",function(isMob){ $("body").addClass(isMob?"rui-mob":"rui-pc"); }); });rasw = "dashboard"; rasy = function(rala, rasz) { var raid = rala.raif('class').val(); if (raid == null) return ""; var rata = raid.split(' '); for (var j = 0; j < rata.length; j++) { if (rata[j].lastIndexOf(rasz, 0) === 0) { return rata[j]; } } return "";};raoy.rakl.rasq = raoy.raid.raiv();raoy.rakl.rasq.prototype = { rakl: false, raiw: function(ratb, rakl) { this.rakl = rakl; ratb.raid("raab").add(); ratb.raid(rait.raiy.raka).add(); ratb.rahn("<div class=\"raad\">&nbsp;</div>"); this.rala = ratb; this.html = this.rala.rahv('innerHTML'); ratb.rain(""); var ratd = rasy(ratb, "w-"); if (ratd != "") this.rate = ratd; ratb.raid(ratd).remove(); ratf = rui.client.global("mode") ? rui.client.global("mode") : rahb; this.ratg = rui.client.os("mobile") ? rasw : ratf; this.raoh["title"] = ratb.raif("data-title").val(); this.raoh["subtitle"] = ratb.raif("data-subtitle").val(); this.raoh["logo"] = ratb.raif("data-logo").val(); if (rui.client.os("mobile")) { } else { this.rath = this.rati(); this.ratk = this.ratl(); } this.ratm = this.ratn(); if (this.ratg == rasw) { raoy.rala(rafs).raid("raae").add(); if (rui.client.os("mobile")) { var rato = new ratq(); rato.rats("_contorl"); this.ratm.rafk(rato.ratt().rahk()); rato.ratt().rahk().click(function() { rui("#" + rakl.rakf).widget("rui-admin-header").hideMenu(); }); } } this.rana = ratb.rahk(); }, rala: false, rain: false, ratg: "default", rate: "w-main", raoh: { title: "", subtitle: "", logo: false }, ratk: false, rath: false, ratm: false, ratv: false, get: function() {}, set: function() {}, setting:function(){ var raoh={}; raoh["menuHeight"]=$(".raaf").height(); raoh["navHeight"]=$(".raab").height(); return raoh; }};raoy.rakl.rasq.prototype.ratl = function() { var rala = raoy.rala("<div class=\"raag top fixed-logo\" ></div>"); var ratw = raoy.rala("<div></div>"); ratw.raid(this.rate).add(); var raty = false; if (this.ratg == rasw) { raty = raoy.rala("<span class=\"raah\"></span>"); } else { raty = raoy.rala("<span class=\"raah\">&nbsp;</span>"); raty.rafk(this.rain); } ratw.rafk(raty.rahk()); rala.rafk(ratw.rahk()); this.rala.raht(rala.rahk()); return raty;};raoy.rakl.rasq.prototype.rati = function() { var rala = raoy.rala("<div class='raai'></div>"); rala.raid(this.rate).add(); this.rala.rafk(rala.rahk()); var ratz = raoy.rala("<div></div>"); ratz.raid("raak").add(); if (this.raoh.logo) { var rava = raoy.rala("<span class='logo'></span>"); ratz.rafk(rava); rava.rafk("<div><img src='" + this.raoh["logo"] + "' style='height:100%;'></div>"); } ravb = "<span><h1 class=\"raal\">"; if (this.raoh["subtitle"]) { ravb += "<em>" + this.raoh["subtitle"] + "</em>"; } ratz.rafk(ravb + this.raoh["title"] + "</h1></span>"); rala.rafk(ratz.rahk()); if (this.ratg != rasw) { rala.rafk("<span class=\"tr\">&nbsp;</span>"); } return rala;};raoy.rakl.rasq.prototype.ratn = function() { var rala = raoy.rala("<div></div>"); rala.raid(this.rate).add(); this.rala.rafk(rala.rahk()); if (this.ratg == rasw) { var rahl = raoy.rala("<div class=\"raaf\"></div>"); if (rui.client.os("mobile")) { var nav = rahl.rahk(); nav.width($("body").width()); nav.css("left", -1 * $("body").width()); } raoy.rala(rafs).rafk(rahl.rahk()); var ravd = raoy.rala("<ul class='raam'></ul>"); rahl.rafk(ravd.rahk()); return ravd; } else { var rahl = raoy.rala("<div class=\"raan\"></div>"); var ravd = raoy.rala("<ul class='raao raam'></ul>"); rahl.rafk(ravd.rahk()); rahl.rafk("<span class=\"clearfix\"></span>"); rala.rafk(rahl.rahk()); return ravd; }}; raoy.rakl.rasq.prototype.appendTopLogo = function(title, icon) { rala = raoy.rala("<a class='raaq raas'>" + title + "</a>"); if (icon != null) { rala.raht("<i class=\"" + icon + "\"></i>"); } this.ratk.rahl().raht(rala.rahk());};raoy.rakl.rasq.prototype.appendTopNav = function(html, id, href, icon, isPre) { rala = false; if (id == null && href == null && icon == null) { rala = raoy.rala("<a class='raaq'>" + html + "</a>"); } else { rala = raoy.rala("<a class='raaq'>" + html + "</a>"); rala.raif("id").val(id); rala.raif("href").val(href == rahd ? $udJV0_ : href); } if (icon != null) { rala.raht("<span class='raat'><i class=\"" + icon + "\"></i></span>"); } if (rui.client.os("mobile")) { } else { if (isPre) this.ratk.raht(rala.rahk()); else this.ratk.rafk(rala.rahk()); }};raoy.rakl.rasq.prototype.prependTopNav = function(html, id, href, icon) { this.appendTopNav(html, id, href, icon, true);};raoy.rakl.rasq.prototype.appendTopLogo = function(html, id, href) { rala = false; if (id == null && href == null ) { rala = raoy.rala( html ); } else { rala = raoy.rala("<a class='raaq'>" + html + "</a>"); rala.raif("id").val(id); rala.raif("href").val(href == rahd ? $udJV0_ : href); } this.ratk.rahk().parent().append("<span class='raav'>"+rala.rahk().prop("outerHTML")+"</span>"); };raoy.rakl.rasq.prototype.title = function(title) { this.rala.raii(".raal").rain(title);};raoy.rakl.rasq.prototype.active = function(name) { var rahl = $(".raaf"); rahl.find(".active").removeClass("active"); var rave = raoy.rala("#nav_" + name); rave.raid("active").add(); var rahm = rave.rahl(3); if (rahm.raid("children").exist()) { rahm.raid("open").add(); } var $par2_ = rahm.rahl(2); $par2_.raid("open").add(); $("#nav_" + name).parent().addClass("children open"); if(rui.client.os("mobile")){ this.leftMenu(false); }else{ this.leftMenu(true); } };raoy.rakl.rasq.prototype.extend = function(name,rain) { var a= $("#nav_" + name); var item=a.parent(); item.addClass("children"); item.append("<ul class='raam'><li>"+rain+"</li></ul>"); var ravf = "<em class='raaw'><i class='fa fa-plus plus'></i><i class='fa fa-minus minus'></i></em>"; a.append(ravf); a.attr("href","javascript:void(0);"); a.unbind("click").click(function(){ var aP=$(this).parent(); var isOpen=aP.hasClass("open"); if(isOpen){ aP.removeClass("open"); }else{ aP.addClass("open"); } }); };raoy.rakl.rasq.rass=false;raoy.rakl.rasq.ralo=false;raoy.rakl.rasq.prototype.refreshLazyload=function(){ raoy.rakl.rasq.ralo=XRender.lazyload(raoy.rakl.rasq.rass).bind(".rui-event-lazyload"); }; raoy.rakl.rasq.prototype.content = function(selector) { raoy.rakl.rasq.rass=selector; this.refreshLazyload(); rala = raoy.rala(selector); rala.raid("raay").add(); this.ratv = rala; this.resize(); }; raoy.rakl.rasq.prototype.action = function(url) { rait.ralo.rafh(url); return false; };raoy.rakl.rasq.prototype.resize = function(callback) { ravg = $("#" + this.rakl.rakf).innerHeight(); raoy.rala(".raad").rahy(ravg); if (rui.client.os("mobile") || this.ratg == "default") { } else { raoy.rala(".raaf").rahk().css("top", ravg); var width = raoy.rala(".raaf").rahz(); if (!$("body").hasClass("rui-open-menu")) { width = $("#" + this.rakl.rakf).height(); } $(".raay").css("marginLeft", width); }};raoy.rakl.rasq.prototype.hide = function() { $(".cd-header,.cd-nav-dashboard").hide(); $(".cd-header-clear").remove(); $(".cd-content-dashboard").css("marginLeft", 0);};raoy.rakl.rasq.prototype.setInnerMaxWidth = function(maxWidth) { var header=$("#" + this.rakl.rakf); header.find(".w-full").css("maxWidth",maxWidth);}; raoy.rakl.rasq.prototype.leftMenu = function(ravh) { var ravi = $("body"); var ravk = function() { }; var ravl=rui.client.os("mobile"); var ratn=$(".raaf"); var ravm=$(".raay"); var rahz = ratn.width(); if (ravi.hasClass("rui-open-menu")&&!ravh) { ravi.removeClass("rui-open-menu"); ravi.addClass("rui-close-menu"); ratn.find(".open").removeClass("open"); if(ravl){ ratn.animate({ "left": -1*rahz}, 500, "swing", function() { ravk(); }); }else{ var ravn=ratn.css("top"); ratn.css("width", ravn); ravm.css("marginLeft", ravn); ravk(); } } else if(!ravi.hasClass("rui-open-menu")){ ravi.addClass("rui-open-menu"); ravi.removeClass("rui-close-menu"); rahz = ratn.width(); ravm.css("marginLeft",ravl?0:rahz); ratn.css("left",0); setTimeout(function() { ravk(); }, 500); }};raoy.rakl.rasq.prototype.updateNavs = function(fun) { $(".cd-nav-item").each(function() { fun($(this)); });}; raoy.rakl.rasq.prototype.bindJsonStr = function(str) { this.bindJson(JSON.parse(str));};raoy.rakl.rasq.prototype.bindJson = function(navs,clean) { var rakh=this; if(clean==null) this.ratm.rain(""); for (var rafm = 0; rafm < navs.length; rafm++) { var ravo = navs[rafm]; var ravq = new ratq(); ravq.rats(ravo); this.ratm.rafk(ravq.ratt().rahk()); if (rafm == 0) { ravq.rala.raid("first").add(); } else if (rafm == navs.length - 1) { ravq.rala.raid("last").add(); } var ravf = "<em class='raaw'><i class='fa fa-plus plus'></i><i class='fa fa-minus minus'></i></em>"; var $subMenuClicker=function(raib) { var rave = raib.rahl(); var ravh = rave.raid("open").exist(); if (ravh) { rave.raid("open").remove(); } else { rakh.leftMenu(true); rave.raid("open").add(); } }; if (ravo["subNavs"]) { var ravs=ravq.ratt().raii("a", 0); ravs.rafk(ravf); ravs.raif("href").val($udJV0_); ravs.raif("onclick").val(""); ravs.raia($subMenuClicker); var ravt = ravo["subNavs"]; for (var rant = 0; rant < ravt.length; rant++) { var ravv = new ratq(); ravv.rats(ravt[rant]); ravq.rafk(ravv.ratt().rahk()); if (ravt[rant]["subNavs"]) { var $svnNav2Btn_=ravv.ratt().raii("a", 0); $svnNav2Btn_.rafk(ravf); $svnNav2Btn_.raif("href").val($udJV0_); $svnNav2Btn_.raif("onclick").val(""); $svnNav2Btn_.raia($subMenuClicker); var $subs2_ = ravt[rant]["subNavs"]; for (var rash = 0; rash < $subs2_.length; rash++) { var $subView2_ = new ratq(); $subView2_.rats($subs2_[rash]); ravv.rafk($subView2_.ratt().rahk()); } } } } } if(rui.client.os("mobile")){ var ravw=$("<a class='raaq' href='javascript:void(0);' data='"+this.rakl.rakf+"'><span class=\"raaz\"><i class=\"fa fa-close\"></i>关闭</span></a>"); this.ratm.rahk().parent().append(ravw); ravw.click(function(){ XRender("#"+$(this).attr("data")).widget().leftMenu(false); }); } this.resize(); this.refreshLazyload(); };ratq = raoy.raid.raiv();ratq.prototype = { raiw: function() {}, rats: function(raoh) { if (raoh == "_contorl" && rui.client.os("mobile")) { this.ravy = "<i class='fa fa-chevron-left'></i>"; this.ravz = "&nbsp;"; this.ramb = "#"; this.ragd = "menu"; } else if (raoh == "_contorl") { } else { this.ravy = raoh["title"]; this.ragd = raoh["name"]; this.ramb = raoh["href"] ? raoh["href"] : "#"; this.rawa = raoh["open"] ? raoh["open"] : false; this.ravz = raoh["icon"]; this.rawb = raoh["subNavs"]; } }, ratt: function() { if (this.rala == false) { var rakg = this.ragd == "menu" ? "menu" : ""; rakg += this.ratg == rasw ? "" : " "; var $iconLv2Style_ = ""; var rawd = this.ragd == "menu" ? "" : "raba"; var rawe=""; if (this.ravz == "") { $iconLv2Style_ = "rabb"; } else { rawe="<span class=\"rabd rabb \" ><i class=\"" + this.ravz + "\"></i></span>"; } var ralo="rui-event-lazyload"; if (this.ramb.length < 5 ||this.ramb.has("javascript")) { ralo = ""; } var rain = "<li class='" + rakg + "'>"; rain+="<a class=\"raaq "+ralo+"\" title=\"" + this.ravy + "\" id=\"nav_" + this.ragd + "\" href=\"" + this.ramb+ "\">" +rawe+"<span class=\"lab " + $iconLv2Style_ + "\"><label>" + this.ravy + "</label></span></a><div class='clearfix'></div></li>"; var rala = raoy.rala(rain); if (this.rawa) { var rawf = rala.raii("a", 0); rawf.raif("target").val("_blank"); rawf.raif("href").val(this.rawa); } this.rala = rala; } return this.rala; }, rafk: function(ranq) { if (!this.rala.raid("children").exist()) { this.rala.raid("children").add(); this.rawg = raoy.rala("<ul class='raam'></ul>"); this.rala.rafk(this.rawg.rahk()); } this.rawg.rafk(ranq); }, rala: false, rawg: false, ravy: "", ragd: "", ramb: "", ravz: ""};ralf.rafk("rui-admin-header", raoy.rakl.rasq);$(window).scroll(function(){ var scan=91; var rawh=$(".rabe"); if($(window).scrollTop()>=scan) { for(var rafm=0;rafm<rawh.length;rafm++){ var rann=$(rawh[rafm]); var rave=$("#"+rann.attr("target")); rave.attr("width",rave.width()); if(!rave.hasClass("rabf")){ rave.attr("top",$(".raab").height()+Number('"@row.span"'.change("px",""))); rave.addClass("rabf"); } rann.css("height",rave.height()+Number('"@row.span"'.change("px",""))).css("display","block").html("&nbsp;"); rave.css("width", rave.attr("width")); rave.css("top",rave.attr("top")+"px"); } $("body").addClass("rui-fixed"); }else{ $("body").removeClass("rui-fixed"); for(var rafm=0;rafm<rawh.length;rafm++){ var rann=$(rawh[rafm]); rann.hide(); var rave=$("#"+rann.attr("target")); rave.css("top","initial").css("width","initial"); } } });rawi={};raoy.ramm=function(className){ var layoutView=false; if(typeof className =='string'){ if(rawi[className]==null){ rawi[className]=$(className).prop("outerHTML")+""; $(className).remove(); } layoutView=$(rawi[className]); }else{ layoutView=$(className.prop("outerHTML")); } return { rami:className, ramm:layoutView, rawk:false, rawl:function(){ var SCRIPT_REGEX = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi; this.layout=(this.layout+"").replace(SCRIPT_REGEX, ''); return this; }, setAdapter:function(iAdapter){ this.rawk=iAdapter; return this; }, replace:function(json){ var html=this.ramm.prop("outHTML"); for(var ranh in json){ var raih=json[ranh]; html.change("@{"+$key+"}",raih); } this.ramm=$(html); return this; }, html:function(){ return this.ramm.prop("outHTML"); }, object:function(){ return this.ramm; }, bind:function(raqd){ for(var ranh in raqd){ var raih=raqd[ranh]; this.ramm.find("[data-name='"+ranh+"']").html(raih); this.ramm.find("[name='"+ranh+"']").html(raih); if(this.rawk!=false){ this.rawk(this.ramm,key,raqd); } } var ranm=["href","title","id","value","class"]; for(var rann=0;rann<ranm.length;rann++){ var rano=ranm[rann]; var ranlhref_=this.ramm.find("["+ rano+"]"); for(var rafm=0;rafm<ranlhref_.length;rafm++){ var ranq=$(ranlhref_[rafm]).attr(rano); if(ranq!=null&& ranq!=""){ rans =ranq.match(/\{[\s\S]*?\}/ig); if(rans==null)rans=[]; for(var rant=0;rant<rans.length;rant++){ var ranv=rans[rant].change('{',""); ranv=ranv.change('}',""); ranq=ranq.change(rans[rant],raqd[ranv]); } $(ranlhref_[rafm]).attr(rano,ranq); } } } return this; }, _display:"block", display:function(value){ this._display=value; return this; }, appendTo:function(parent){ $(parent).append( this.ramm); rait.ralm(this.ramm); }, prependTo:function(parent){ $(parent).prepend($(this.ramm)); rait.ralm(this.ramm); } };};raoy.rakl.rawm = raoy.raid.raiv();raoy.rakl.rawm.prototype = { raiw: function(ratb) { var jq = ratb.rahk(); var rawn = jq.children(); var ratz = $("<div class='rabg'></div>"); var rawo = $("<div class='rabh'></div>"); for (rafm = 0; rafm < rawn.length; rafm++) { rawq = $("<div class='rabi'></div>"); rawq.append(rawn[rafm]); rawo.append(rawq); } ratz.append(rawo); jq.html("").append(ratz); }};raoy.rakl.rakg.rawm = "rui-row"; ralf.raht(raoy.rakl.rakg.rawm, raoy.rakl.rawm);raoy.rakl.raws = raoy.raid.raiv();raoy.rakl.raws.prototype = { ramm: false, ranl: false, rala: false, rawt: false, rawv: false, raiw: function(ratb, rakl) { this.rawt = "rui-list-" + rakl.rakf; var raww = $.parseHTML("<div>" + ratb.rahk().children().eq(0).prop("outerHTML") + "</div>"); this.ramm = $(raww).addClass("rabk"); this.ranl = $("<div></div>").addClass(this.rawt); ratb.rain(""); ratb.rahk().addClass(rait.raiy.raka); ratb.rafk(this.ranl); this.rawv = raoy.rawy("rui-list", this.ranl); }, rawz: 0, showLoading: function() { this.rawz = 0; $("." + this.rawt).find(".rabk").remove(); this.rawv.raya(); }, hideLoading: function(rayb) { this.rawv.rayd(rayb); }, append: function(json) { this.hideLoading(); this.rawz++; json["index"] = this.rawz; raoy.ramm(this.ramm).bind(json).appendTo("." + this.rawt); }, appends: function(jsons) { for (var rafm = 0; rafm < jsons.length; rafm++) { this.append(jsons[rafm]); } }, prepend: function(json) { raoy.ramm("." + this.raye).bind(json).prependTo("." + this.rawt); }, set: function() { }};raoy.rakl.rakg.raws = "rui-list"; ralf.ramq(raoy.rakl.rakg.raws, raoy.rakl.raws);ralf.ramv("rui.list.index", function() { var widget = new rui.widget("rui.list.index"); widget.setJQRender(function(jqObject, model) { var index = Number(jqObject.attr("value")); var macColors = raoy.rayf.magicc('"@color"'.split(";")[0]); if (index > 3) index = 3; var indexView = $("<b data-name='index'></b>").css("backgroundColor", macColors[index]); jqObject.html(indexView).addClass("rabl"); return indexView; }); return widget;});ralf.rams("rui.tabs", function() { var widget = new rui.widget("rui.tabs"); widget.active = function(name) { $("#ruiTabHandle" + name).click(); }; widget.setJQRender(function(rahk, model) { var rayg = rahk.children("div"); var rawn = []; for (rafm = 0; rafm < rayg.length; rafm++) { var ranq = {}; ranq["name"] = $(rayg[rafm]).attr("data-name"); ranq["title"] = $(rayg[rafm]).attr("data-title"); var rain=$(rayg[rafm]); rain.find("script").remove(); ranq["html"] = rain; rawn.push(ranq); } rayg.remove(); var panel = $("<div class='rabm'></div>"); var tabs = $("<span class='rabn'></span>"); rahk.append(tabs); rahk.append(panel); for (rafm = 0; rafm < rawn.length; rafm++) { ranq = rawn[rafm]; var handle = "rabo-" + rafm; var link = $("<a>" + ranq["title"] + "</a>"); link.attr("id", "ruiTabHandle" + ranq["name"]); link.attr("target", handle); if (rafm == 0) link.addClass("active"); tabs.append(link); link.click(function() { var fChild = panel.children(".rabo").eq(0); var target = $(this); target.parent().find("a").removeClass("active"); target.addClass("active"); panel.children(".rabo").hide(); panel.children("." + target.attr("target")).show(); }); if (rafm != 0) { ranq["html"].hide(); } panel.append(ranq["html"].addClass(handle).addClass("rabo")); } panel.append("<div class=\"clearfix\"></div>"); return panel; }); widget.setTitle = function(title, icon) { this.view.find(".title").html(title); if (icon != null) { this.view.find(".icon").replaceWith(icon); } }; return widget;}); ralf.ramv("rui.panel.survey", function() { var widget = new rui.widget("rui.panel.survey"); widget.active = function(name) { this.view.find(".rabq").removeClass("active"); this.view.find(".rabq-" + name).addClass("active"); }; widget.setJQRender(function(rahk, model) { var rayg = rahk.children("a"); var rawn = []; for (rafm = 0; rafm < rayg.length; rafm++) { var ranq = {}; ranq["name"] = $(rayg[rafm]).attr("data-name"); ranq["unit"] = $(rayg[rafm]).attr("data-unit"); ranq["href"] = $(rayg[rafm]).attr("href"); ranq["title"] = $(rayg[rafm]).html(); rawn.push(ranq); } rayg.remove(); var panel = $(rahk.prop("outerHTML")).removeClass("rui-panel-survey"); panel.attr("data-render", "rui-panel"); panel.removeAttr("id"); panel.addClass("rui-table-layout"); var table = $("<table cellspacing='0' cellpadding='0' class='rui-ml rui-mb'><tr></tr></table>"); panel.append(table); for (rafm = 0; rafm < rawn.length; rafm++) { var a = $("<a class='rui-ml rabq rabq-" + rawn[rafm].name + "'>" + rawn[rafm].title + "<span><label name='" + rawn[rafm].name + "' class='rui-fs-24'>--</label>" + rawn[rafm].unit + "</span>" + "</a>"); a.attr("href", rawn[rafm].href); table.find("tr").append($("<td></td>").append(a)); } rahk.append(panel); rait.ralm(rahk); rahk.children("h3").remove(); return panel; }); widget.setTitle = function(title, icon) { this.view.find(".title").html(title); if (icon != null) { this.view.find(".icon").replaceWith(icon); } }; return widget;});rayh = function(tit) { var rayi = $("<label></label>"); rayi.append("<i></i>"); rayi.append(tit); return rayi;};raoy.rakl.rayk = raoy.raid.raiv();raoy.rakl.rayk.prototype = { raiw: function(ratb, rake) { var target = ratb.rahk() ; target.addClass(rait.raiy.raka); if (target.hasClass("fixed")) { target.after("<div class='rabe' target='" + rake.rakf + "'></div>"); } target.attr("id", rake.rakf); target.addClass("rabs"); var rayl = target.attr("data-fix-height"); if (rayl != null && rayl != "") { var raym = rake.rakf; setInterval(function() { $("#" + raym).height($(rayl).height()).css("overflow","hidden"); }, 1000); } var title = $("<h3></h3>"); if (target.children("h3").length > 0) { title = target.children("h3").eq(0); title.remove(); } title.addClass("rabt"); var options = $("<span class='rabv'><span>"); options.html(title.html()); var titleLabel = $("<label></label>"); if (target.attr("data-icon")) { titleLabel.append("<i class='" + target.attr("data-icon") + "'>&nbsp;</i>"); } else { titleLabel.append("<i class='icon rabw'>&nbsp;</i>"); } titleLabel.append("<font class='title' >" + target.attr("data-title") + "</font>"); title.html(""); title.append(titleLabel); var h4 = target.children("h4"); if (h4.length > 0) { h4 = h4.eq(0); h4.find("a").each(function() { options.append($(this).prop("outerHTML")); }); var h4View = $("<h4></h4>").addClass("h3"); h4Title = rayh(h4.attr("data-title")); h4View.append(h4Title); h4View.append(options); h4View.css("marginBottom", 16); h4.replaceWith(function() { return h4View; }); } else { title.append(options); } var bodyHtml = target.html(); var body = $("<div class='raby'></div>"); body.append(bodyHtml); target.html(""); if (target.attr("data-title") != "disabled" && target.attr("data-title") != null) { target.html("").append(title); } target.append(body); target.append("<div class='clearfix'></div>"); rait.ralm(target); this.rana = target; }, rana: false, append: function(html) { var list = this.rana.find(".cd-auto-content"); if (!list.hasClass("cd-auto-list")) { list.addClass("cd-auto-list"); list.prepend("<div class='cd-auto-children'></div>"); } list.find(".cd-auto-children").append(htm); }, setTitle: function(title, icon) { this.rana.find(".title").html(title); if (icon != null) { this.rana.find(".icon").replaceWith(icon); } }, ranz: "input,INPUT,textarea,TEXTAREA,select,SELECT", set: function(data) { var rany = []; rany = $.merge(rany, this.rana.find("[name]")); rany = $.merge(rany, this.rana.find("[data-name]")); for (var rafm = 0; rafm < rany.length; rafm++) { var raoa = $(rany[rafm]); var raob = raoa.attr("name") ? raoa.attr("name") : raoa.attr("data-name"); if (raob == null) continue; if (this.ranz.indexOf(raoa.get(0).tagName) != -1) { raoa.val(data[raob]); raoa.trigger("change"); } else { raoa.html(data[raob]); } } },};ralf.raht("rui-panel", raoy.rakl.rayk);raoy.rakl.rayn = raoy.raid.raiv();raoy.rakl.rayn.prototype = { rayo: false, rake: false, rayq:true, raiw: function(ratb, rake) { this.rake = rake; this.rayo = $("<div class='rabz'></div>"); var rakh = this; this.rayo.click(function() { if(rakh.rayq) { $(this).parent().hide(); $("body").css("overflow-y","auto"); } }); var rays = $("<div></div>").attr("id", rake.rakf); rays.addClass(rait.raiy.raka); rays.addClass("rui-modal rada" ); rays.append(this.rayo); var rayt = $("<div></div>").addClass("radb"); rayt.append(ratb.rahk()); rays.append(rayt); $("body").append(rays); this.rana = rays; rait.ralm(rays, true); rays.find("[data-event='rui.modal.close']").click(function() { if(rakh.rayq){ rakh.hide(); $("body").css("overflow-y","auto"); } }); }, rana: false, afterView: function(fun) { fun(this.rana); }, lockShow:function(data){ this.rayq=false; this.show(data); }, fullShow:function(data,callback){ var ravi= this.rana.find(".radb"); ravi.width( $(window).width()); ravi.height($(window).height()); var $checkPanel0_= ravi.children(".rabs"); if($checkPanel0_.length>0){ $checkPanel0_.height($(window).height()); var $panel0BodyHeight_=$(window).height()-$checkPanel0_.find(".rabt").height(); $checkPanel0_.find(".raby").height($panel0BodyHeight_); } this.show(data,callback); }, show: function(data,callback) { $("body").css("overflow-y","hidden"); this.rana.show(); if (data != null) { var ranz = "input,INPUT,textarea,TEXTAREA,select,SELECT"; var rany = this.rana.find("[data-name]"); for (var rafm = 0; rafm < rany.length; rafm++) { var raoa = $(rany[rafm]); var raob = raoa.attr("name") ? raoa.attr("name") : raoa.attr("data-name"); if (raob == null) continue; if (ranz.indexOf(raoa.get(0).tagName) != -1) { raoa.val(data[raob]); raoa.trigger("change"); } else if (raoa.get(0).tagName == "IMG" || raoa.get(0).tagName == "IFRAME") { raoa.attr("src", data[raob]); } else { raoa.html(data[raob]); } } } if(callback!=null) callback(data); this.fixed(); }, fixed: function() { var rayv = $(window).height() / 2; var rayw = this.rana.find(".radb").height() / 2; this.rana.find(".radb").css("marginTop", rayv - rayw); }, hide: function(title) { this.rana.hide(); }};ralf.rafk("rui-modal", raoy.rakl.rayn);raoy.rayy = {};raoy.rayy.alert = function(message, title) { var raoh = {}; raoh["message"] = message; if (title != null) raoh["title"] = title; rui("#rui_modal_alert").widget( "rui-modal", "<div data-render='rui.panel' data-title='提示' ><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><div style='padding: 16px 32px 32px 32px;' data-name='message'></div></div>") .show(raoh);};raoy.rayy.check = function(message, checkListener,cancelListener) { var raoh = {}; raoh["message"] = message; rui("#rui_modal_check").widget( "rui-modal", "<div data-render='rui.panel'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><div style='padding:16px 32px;' data-name='message'></div>" + "<span class='radd'><a class='rui-ant-button primary'>确认</a>&nbsp;&nbsp;&nbsp;<a data-event='rui.modal.close' class='rui-ant-button cancel'>取消</a></span>" + "</div>") .show(raoh); var sureBtn=$("#rui_modal_check").find(".primary"); sureBtn.unbind("click").click(function() { checkListener(); }); var cancelBtn=$("#rui_modal_check").find(".cancel"); if(cancelListener!=null){ cancelBtn.unbind("click").click(function() { cancelListener(); }); } };raoy.rayy.hideCheck = function() { rui("#rui_modal_check").widget().hide();}; rui.modal=raoy.rayy; raoy.openCoder = function() { raoy.ragt("com/syntaxhighlighter/styles/shCore.css"); raoy.ragt("com/syntaxhighlighter/styles/shThemeDefault.css"); raoy.rago("com/syntaxhighlighter/shCore.js", function() {}); raoy.rago("com/syntaxhighlighter/shBrushBash.js", function() {}); raoy.rago("com/syntaxhighlighter/shBrushCSharp.js", function() {}); raoy.rago("com/syntaxhighlighter/shBrushJava.js", function() {}); raoy.rago("com/syntaxhighlighter/shBrushJScript.js", function() {}); raoy.rago("com/syntaxhighlighter/shBrushPhp.js", function() {});};if (raoy.ragb("coder")) { raoy.openCoder();}raoy.rakl.rayz = raoy.raid.raiv();raoy.rakl.rayz.prototype = { raza: false, razb: false, rana: false, razd: false, raze: false, raiw: function(ratb, rake) { var rahg = ratb.rahk(); var ravy = rahg.attr("data-title"); var scp = rahg.find("script"); this.razb = (scp.text() + "").change("\\<\\!\\[CDATA\\[", ""); this.razb = this.razb.change("\\]\\]\\>", ""); scp.remove(); this.raza = rahg.find("code").html(); rahg.find("code").remove(); var razf = rahg.html(); this.rana = ratb.rahk().html(""); var razg = $("<div></div>").attr("id", rake.rakf).addClass("rade"); var razd = $("<div class='radf'></div>"); razd.append($.parseHTML(this.raza)); razg.append(razd); var rakh = this; razd.find("[data-coder-event='click']").click(function() { $("body").append("<script>" + rakh.razb + "</script>"); }); if (razd.find("[data-coder-event='load']").length > 0) { razd.append("<span class='loading'><i class=' fa fa-cog fa-spin'></i>控件加载中,请稍后...<span>"); setTimeout(function() { razd.find(".loading").remove(); $("body").append("<script>" + rakh.razb + "</script>"); }, 2000); } var razh = $("<div class='radg'><div class='radh'><label>" + ravy + "</label></div></div>"); razh.append("<div class='radi'>" + razf + "</div>"); this.raze = $("<div class='radk'></div>"); razh.append(this.raze); var razi = $("<div class='radl'></div>"); var razk = $("<a><i class='fa fa-code'></i>查看代码</a>"); razk.attr("target", rake.rakf); var instance = this; razk.click(function() { if (instance.showCode() == "open") { $(this).html("<i class='fa fa-code'></i>隐藏代码"); } else { $(this).html("<i class='fa fa-code'></i>查看代码"); } }); razi.append(razk); razh.append(razi); razg.append(razh); this.rana.replaceWith(razg); return razg; }, showCode: function() { var razl = this.raze; if (razl.attr("status") == "inited") { if (razl.is(":hidden")) { razl.show(); return "open"; } else { razl.hide(); return "close"; } } razl.attr("status", "inited"); razl.html("<i class='fa fa-cog fa-spin'></i>"); var razm = $("<pre class='brush:js'>" + this.razb + "</pre>"); razl.show().append(razm.hide()); SyntaxHighlighter.highlight(); setTimeout(function() { razl.find("i").remove(); razm.show(); }, 1000); return "open" }, set: function() { }};ralf.rafk("rui-coder", raoy.rakl.rayz);raoy.rawy = function(razn, rahl) { var rawv = { ranl: $("<div class='"+razn+"-loading'><a><i class='fa fa-refresh fa-spin'></i>&nbsp;正在加载数据,请稍后...</a></div>"), raya: function() { this.ranl.show(); }, rayd: function(rayb) { if(rayb!=null){ this.ranl.find("a").html(rayb); }else this.ranl.hide(); } }; if (rahl != null) { rahl.append(rawv.ranl); } return rawv;}; raoy.rakl.ranq = raoy.raid.raiv();raoy.rakl.ranq.razo = function(razq) { ralz = $(razq).children(ragz); raws = []; for (var rafm = 0; rafm < ralz.length; rafm++) { var razs = $(ralz[rafm]); raws.push({ "ravy": razs.html(), "ragd": razs.attr("name"), "rafh": razs.attr("href"), "raia": razs.attr("onclick"), "razt": razs.attr("data-unit"), "ravz": razs.attr("data-icon") }); } return raws;};raoy.razv = function(num, decimal) { num = num.toString(); var index = num.indexOf('.'); if (index !== -1) { num = num.substring(0, decimal + index + 1); } else { num = num.substring(0); } return parseFloat(num).toFixed(decimal);};raoy.rakl.razw = raoy.raid.raiv();raoy.rakl.razw.prototype = { ranl: false, rana: false, rakg: "", raiw: function(ratb) { rahg = ratb.rahk(); if (rahg.hasClass(raoy.rakl.rakg.razw)) { this.rakg = raoy.rakl.rakg.razw; rahg.addClass("grid"); } if (rahg.hasClass(raoy.rakl.rakg.ragt)) { this.rakg = raoy.rakl.rakg.ragt; var razy = rahg.prev(); if (razy.length == 0) rahg.addClass("radm"); } var rawn = raoy.rakl.ranq.razo(rahg); rahg.html("<div class='radn'></div><em class='clearfix'></em>"); this.rana = rahg.children("div").eq(0); var rahz = raoy.razv(100 / rawn.length, 4) + "%"; for (var rafm = 0; rafm < rawn.length; rafm++) { rawn[rafm]["width"] = rahz; rawn[rafm]["index"] = rafm; this.rafk(rawn[rafm]); } }, razz: function(ranq, cell) { cell.addClass("rado"); cell.append("<span class='radq'><em><label>" + ranq["ravy"] + "</label></em></span>"); var data = $("<span class='rads'></span>"); if (ranq["ravz"] != null) { data.append("<i class='i'>&nbsp;</i>"); cell.addClass("clean-grid-icon"); cell.find(".radq").prepend("<em class='i index-" + ranq["index"] + "'><i class='" + ranq["ravz"] + "'></i></em>"); } data.append("<label class='radt' name='" + ranq["ragd"] + "' >--</label><em>" + ranq["razt"] + "</em>"); cell.append(data); }, rbaa: function(ranq, cell) { if (ranq["ravy"] == "") { cell.append("<span class='radv'><span>"); return; } cell.append("<span class='radw'><em class='i index-" + ranq["index"] + "'><i class='" + ranq["ravz"] + "'></i></em></span>"); cell.append("<span class='rady'><em><label>" + ranq["ravy"] + "</label></em></span>"); }, rafk: function(ranq) { var action = ranq["rafh"]; var raia = ranq["raia"]; var panel = $("<a class='radz'></a>"); panel.css("width", ranq["width"]); if (ranq["index"] == 0) { panel.addClass("first"); } var cell = $("<div></div>"); if (action && action != "") { panel.attr("href", action); } if (raia && raia != "") { panel.attr("onclick", raia); } if (this.rakg == raoy.rakl.rakg.razw) { this.razz(ranq, cell); } if (this.rakg == raoy.rakl.rakg.ragt) { this.rbaa(ranq, cell); } panel.append(cell); this.rana.append(panel); }};raoy.rakl.rakg.razw = "rui-row-grid";ralf.rafk(raoy.rakl.rakg.razw, raoy.rakl.razw);raoy.rakl.rakg.ragt = "rui-row-link";ralf.rafk(raoy.rakl.rakg.ragt, raoy.rakl.razw);ralf.ramv("rui.table.layout.item", function() { var widget = new rui.widget("rui.table.layout.item"); widget.reload = function() {}, widget.title = ""; widget.setLayout("<a class='rui-table-layout-item'><span><label>@{title}</label></span><span name='@{name}'>&nbsp;</span></a>"); return widget;});ralf.rams("rui.table.layout", function() { var box = new rui.widget("rui.table.layout"); box.setJQRender(function(ths, model) { var table = $(ths.prop("outerHTML")).removeClass("rui-table-layout"); var main = $("<div class='rui-table-layout'></div>").addClass(table.attr("class")); if (ths.attr("data-title") != null) { main.append("<label class='rui-table-layout-title'>" + ths.attr("data-title") + "</label>"); } ths.replaceWith(main); main.append(table); var items = table.find("td"); for (var i = 0; i < items.length; i++) { var item = $(items[i]); var name = item.attr("data-name") ? item.attr("data-name") : item.attr("name"); var itemBox = false; var renderName = false; if (typeof name != "undefined") { renderName = item.attr("data-render") == null ? "rui.table.layout.item" : item.attr("data-render"); var itemBox = $("<div></div>"); itemBox.attr("title", item.html()); itemBox.attr("name", name); item.html("").append(itemBox); } else { itemBox = item.children().eq(0); renderName = itemBox.attr("data-render"); } if (renderName) { renderName = renderName.split("?")[0].replace(/\./g, "-"); item.removeAttr("data-name name data-render"); var rakl = rait.rakn.rakq(itemBox.attr("id") ? itemBox.attr("id") : null); var rala = raoy.rala(itemBox); var rale =new ralf.ralg[renderName](rala, rakl); rait.rakt(rakl.rakf).raki(rale); } } return main; }); return box;});ralf.ramv("rui.map", function() { var html = "<div class='raea' style='height:@{height}'></div>"; var map = new rui.widget("rui.map"); map.setPoint = function( lng,lat,zoom) { this.view.find(".raea").css("height", this.view.parent().height() + "px"); var mMapId = this.mapId; var timesamp = (new Date).getTime(); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t=" + timesamp, function(d) { var map = new BMap.Map(mMapId); var pt1 = new BMap.Point(lng, lat); map.centerAndZoom(pt1, zoom); $("#" + mMapId).css("background", "none"); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); }); }; mapId: false, map.setLayout(html, function(view, model) { this.mapId = this.view.attr("id") + "_handle"; this.view.find(".raea").attr("id", this.mapId); }); return map;});ralf.ramv("rui.checkbox", function() { var rain = "<div class='raeb' >" +"<input valuetype='@{valuetype}' type='hidden' name='@{name}' class='val' >" +"<a href='javascript:void(0);'><span><i class='fa fa-square-o'></i></span><span>@{title}</span></a></div>"; var rbab = new rui.widget("rui.checkbox"); rbab.rbad=function(rbae){ }; rbab.change=function(raff){ rbab.rbad=raff; }; rbab.checked=function(){ var rann= this.view.find("a"); var rbaf=this.view.find(".val"); rbaf.val(1); var rafm=rann.find("i"); rann.addClass("checked"); rafm.removeClass("fa-square-o").addClass("fa-check-square"); rbab.rbad(true); }; rbab.setLayout(rain, function(view, model) { var input=view.find(".val"); var valueType=input.attr("valuetype"); view.find("a").click(function(){ var rann=$(this); var rafm=rann.find("i"); if(rann.hasClass("checked")){ rann.removeClass("checked"); rafm.removeClass("fa-check-square").addClass("fa-square-o"); rbab.rbad(false); input.val(valueType=="bool"?"false":0); }else{ rann.addClass("checked"); rafm.removeClass("fa-square-o").addClass("fa-check-square"); rbab.rbad(true); input.val(valueType=="bool"?"true":1); } }); }); return rbab;});ralf.ramv("rui.metro.input", function() { var widget = new rui.widget("rui.metro.input"); widget.setLayout("<a>Metro Input@{name}</a>"); return widget;});ralf.ramv("rui.upload.excel", function() { var inputWidget = $("<span><a class='rui-ant-button'><i class='fa fa-plus'></i>上传</a></span>"); inputWidget.append("<span style='display:none;'><form><input accept='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel' name='file' type='file' class='raed'></form></span>"); var widget = new rui.widget("rui.upload.excel"); widget.input = false; widget.reload = function() {}, widget.url = false, widget.getUrl = function() { return widget.url; }, widget.callback = false; widget.getCallback = function() { return widget.callback; }; widget.setUpload = function(url, callback) { widget.url = url; widget.callback = callback; }; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { view.find(".raed").change(function() { if (widget.getUrl()) { var form = new FormData($(this).parent()[0]); $(this).val(""); $.ajax({ url: widget.getUrl(), type: 'POST', cache: false, data: form, processData: false, contentType: false, dataType: "json", success: function(data) { widget.getCallback(data); if (raoy.rasv["rui.upload.excel"] != null) { raoy.rasv["rui.upload.excel"](data); } } }); } else { var files = view.find(".raed").prop('files'); var reader = new FileReader(); reader.readAsDataURL(files[0]); reader.onload = function(e) { var base64 = this.result.substring(this.result.indexOf(',') + 1); widget.event("upload", base64); } } }); view.find("a").click(function() { view.find(".raed").click(); }); }); return widget;});if (raoy.ragb("table")) { raoy.ragt("com/jquery/datatables/css/jquery.dataTables.min.css"); raoy.rago("com/jquery/datatables/js/jquery.dataTables.min.js", function() {}); }raoy.rakl.rbag = {}; raoy.rakl.rbah = raoy.raid.raiv();raoy.rakl.rbah.prototype = { ramh: false, rake: false, rawv:false, showLoading:function(){ this.rawv.raya(); }, hideLoading:function(){ this.rawv.rayd(); }, raiw: function(ratb, rbai) { this.rake = rbai; this.ramh = ratb.rahk(); this.ramh.addClass(rait.raiy.raka); this.rawv = raoy.rawy("rui-table", this.ramh); this.rawv.rayd(); var rbak = this.ramh.attr("class"); raoy.rakl.rbag[rbai.rakf] = { rbal: this.ramh.data(), raoh: [], rbam: function(rban) { if (rban < this.raoh.length) { return this.raoh[rban]; } else return {}; }, rbao: function(rawm) { this.raoh.push(rawm); }, setting: function(name, value) { if (value == null) { return this.rbal[name]; } else { this.rbal[name] = value; } } }; this.ramh.addClass("raee table table-striped simple") .attr("id", rbai.rakf); var rbaq = $("<tbody></tbody>"); this.ramh.append(rbaq); var rany = this.ramh.find("th"); var rbas = []; for (var rafm = 0; rafm < rany.length; rafm++) { var rbat = $(rany[rafm]); var rasi = { "name": rbat.attr("data-name") }; rasi["rbav"] = rbat.attr("data-table-render") == null ? "" : rbat.attr("data-table-render"); rasi["label"] = rbat.text(); rasi["render"] = function(raoh, rakg, rbaw, rbay) { var rbaz = raoy.rakl.rbag[rbai.rakf].columns[rbay.col]; if (rbaz["rbav"] == "") { return "<span name='" + rbaz["name"] + "' data-render='rui.text'></span>" } else { var rbba=rbaz["rbav"].split("?"); var rawm="<input name='" + rbaz["name"] + "' data-render='" +rbba[0] +"' "; if(rbba.length>1){ var strs = decodeURI(rbba[1]).split("&"); for (var rant = 0; rant < strs.length; rant++) { var rbbb=strs[rant].split("="); rawm+="data-"+rbbb[0]+"='"+rbbb[1]+"' "; if(rbbb[0]=="title"){ rawm+=rbbb[0]+"='"+rbbb[1]+"' "; } } } return rawm+" >"; } }; rbas.push(rasi); } raoy.rakl.rbag[rbai.rakf].columns = rbas; if (rui.client.os("mobile")) { this.rbbd(); this.ramh.addClass(rbak); } else { var rbal = raoy.rakl.rbah.rbbe(rbai.rakf); this.ramh.DataTable(rbal); this.ramh.parent().addClass(rbak); if (raoy.rakl.rbag[rbai.rakf].setting("mode") == "ajax") { var rbbf = this.ramh.parent().find(".dataTables_paginate"); rbbf.before("<div class='raef'>跳至<input class='raeg' value=1>页</div>"); this.ramh.parent().find(".raeg").attr("target", rbai.rakf).bind("keyup", function() { $(this).val($(this).val().replace(/[\D]/g, "")); rui("#" + $(this).attr("target")).widget().page($(this).val()); }); this.ramh.parent().find(".dataTables_length").insertBefore(rbbf); } else { this.ramh.parent().find(".dataTables_length").hide(); } } }, page: function(val) { if (Number(val) == 0) { val = 1; $(this).val(1); } var number = Number(val) - 1; this.ramh.DataTable().page(number).draw(false); }, get: function(raik) { if (raik == null) raik = -1; var rawh = this.ramh.find(rui.client.os("mobile") ? ".raeh" : "tbody tr"); var raws = []; for (var rafm = 0; rafm < rawh.length; rafm++) { var ranq = {}; var rbbg = $(rawh[rafm]).find("[name]"); for (var rant = 0; rant < rbbg.length; rant++) { var rbbh = $(rbbg[rant]); ranq[rbbh.attr("name")] = rbbh.val(); } rbbi={}; $.extend(rbbi, ranq); if (rafm == raik) { return rbbi; } raws.push(rbbi); } return raws; }, data:function(){ var rawh = this.ramh.find(rui.client.os("mobile") ? ".raeh" : "tbody tr"); var raws = []; for (var rafm = 0; rafm < rawh.length; rafm++) { var ranq = {}; var rbbg = $(rawh[rafm]).find("[name]"); for (var rant = 0; rant < rbbg.length; rant++) { var rbbh = $(rbbg[rant]); ranq[rbbh.attr("name")] = rbbh.html(); } raws.push(ranq); } return raws; }, removeControl:function(){ this.ramh.parent().find(".dataTables_length,.dataTables_paginate,.dataTables_info").remove(); }, set: function(list) { raoy.rakl.rbag[this.rake.rakf].raoh=[]; this.ramh.DataTable().clear().draw(); for (var i = 0; i < list.length; i++) { this.append(list[i]); } }, getTh: function() { var rbbk=this.ramh.find("thead th"); var rbbl={}; for (var rafm = 0; rafm < rbbk.length; rafm++) { var ranq=$(rbbk[rafm]); rbbl[ranq.attr("data-name")]=ranq.html(); } return rbbl; }, appends:function(ds){ for(var i=0;i<ds.length;i++){ this.append(ds[i]); } }, append: function(data) { raoy.rakl.rbag[this.rake.rakf].rbao(data); if (rui.client.os("mobile")) { var ranq = this.rbbm(this.ramh.find(".raeh").length); this.ramh.find(".raei").append(ranq); this.rbbn(ranq, data); } else this.ramh.DataTable().row.add(data).draw(false); }, remove:function(index){ this.ramh.DataTable().rows( '.index-'+index ) .remove() .draw(); }, row:function(index){ return { row: this.ramh.find( '.index-'+index ), child:function(html,fun){ rbbo= this.row.children("td").length; this.row.after("<tr class='table-child-"+index+" content'><td colspan='"+rbbo+"'>"+html+"</td></tr>"); }, showChild:function(){ this.row.parent().find(".table-child-"+index).show(); }, hideChild:function(){ this.row.parent().find(".table-child-"+index).hide(); } }; }, refresh: function() { this.ramh.DataTable().reload(); }, setRowRender: function(fun) { raoy.rakl.rbag[this.rake.rakf].setting("rowRender", fun); }, postBody: function(url, params, callback) { var rakf = this.rake.rakf; raoy.rakl.rbag[rakf].setting("url", url); raoy.rakl.rbag[rakf].setting("params", params); raoy.rakl.rbag[rakf].setting("rbbqtype_", "raw"); raoy.rakl.rbag[rakf].setting("ajaxCallBack", callback); if (rui.client.os("mobile")) { this.rbbs(); }else{ this.ramh.DataTable().ajax.reload(); } }, ajax: function(url, params, callback) { var rakf = this.rake.rakf; raoy.rakl.rbag[rakf].setting("url", url); if (typeof params == "function") { callback = params; } else { raoy.rakl.rbag[rakf].setting("params", params); } if (callback != null) { raoy.rakl.rbag[rakf].setting("ajaxCallBack", callback); } if (rui.client.os("mobile")) { this.rbbs(); } else { this.ramh.DataTable().draw(false); } }};ralf.rafk("rui-table", raoy.rakl.rbah);raoy.rakl.rbah.prototype.refresh = function(panelSelector) { var rbah = rait.rakt(this.rake.rakf).raii(); var rbbt = raoy.rakl.rbag[this.rake.rakf]; var rbbv = rbbt.setting("params") ? rbbt.setting("params") : {}; rbbt.setting("params", rbbv); if (rui.client.os("mobile")) { this.rbbs(); } else { rbah.ramh.DataTable().draw(false); }};raoy.rakl.rbah.prototype.rowClickListener = false;raoy.rakl.rbah.prototype.setRowClickListener = function(fun) { rowClickListener = fun; var widget = $("#" + this.rake.rakf); widget.find(rui.client.os("mobile") ? ".raeh" : "tbody").on('click', rui.client.os("mobile") ? "div" : "tr", function() { $(this).parent().find(".active").removeClass("active"); $(this).addClass("active"); fun($(this).attr("data-index"), $(this)); }); }; raoy.rakl.rbah.prototype.rowAppend = function(raik,trHTML) { var widget = $("#" + this.rake.rakf); widget.find("tbody tr").eq(raik).after(trHTML); }; raoy.rakl.rbah.prototype.rbbd = function() { var rbbw = $("<div><div class='raei'></div></div>").attr("id",this.rake.rakf); var rbby = $("<a class='raek'>点击加载更多</a>").attr("target", this.rake.rakf); rbby.click(function() { var rbbz = $(this).attr("target"); var rbbv = raoy.rakl.rbag[rbbz].setting("params"); if (rbbv == null) { rbbv = {}; } var rafq = rbbv["start"]; if (rafq == null) { rbbv["start"] = 1; } else { rbbv["start"] = Number(rafq) + 1; } raoy.rakl.rbag[rbbz].setting("params", rbbv); rui("#" + rbbz).widget().rbbs(); }); if (raoy.rakl.rbag[this.rake.rakf].setting("mode") == "ajax") { rbbw.append(rbby); } this.ramh.replaceWith(rbbw); this.ramh=$("#"+this.rake.rakf); };raoy.rakl.rbah.prototype.rbbs = function() { var rbbz=this.rake.rakf; var rbah = raoy.rakl.rbag[ rbbz]; var raoh = rbah.setting("params") ? rbah.setting("params") : {}; if (raoh["start"] == null) raoh["start"] = 0; var rakh = this; if (!rbah.setting("url")) { return; } var rbda = rbah.setting("rbbqtype_"); $.ajax({ type: 'post', cache: false, dataType: 'json', contentType: 'application/json', data: rbda ? JSON.stringify(raoh) : raoh, url: rbah.setting("url"), success: function(raqw) { if (raqw.data.length == 0) { $(".raek").addClass("nodata").html("没有更多数据了~~"); } if (raoh["start"] == 0) { rakh.ramh.find(".raei").html(""); } for (var rafm = 0; rafm < raqw.data.length; rafm++) { var rbdb = raqw.data[rafm]; if (rbah.setting("rowRender")) { rbdb = rbah.setting("rowRender")(raqw); } raoy.rakl.rbag[rakh.rake.rakf].rbao(rbdb); raqw.data[rafm]["_rui_index"] = rafm; var rawm = rakh.rbbm($("#" + rakh.rake.rakf).find(".raeh").length); rakh.ramh.find(".raei").append(rawm); rakh.rbbn(rawm, raqw.data[rafm]); rakd = rait.rakt(rbbz).raii(); var raln = $(rawm).attr("data-index", rafm).addClass("index-"+ rafm).find("[data-render]"); if (rakd.rowClickListener) { $(rawm).unbind("click").on('click', 'tr', function() { rakd.rowClickListener($(this).attr("data-index"), $(this)); }); } } if (rbah.setting("ajaxCallBack")) { rbah.setting("ajaxCallBack")(raqw); } }, error: function() {} });};raoy.rakl.rbah.prototype.rbbn = function(rawm, raoh) { var raln = rawm.find("[data-render]"); for (rafm = 0; rafm < raln.length; rafm++) { var obj = $(raln[rafm]); var render = obj.attr("data-render"); var renderName = render.split("?")[0]; renderName = renderName.replace(/\./g, "-"); var rakl = rait.rakn.rakq(obj.attr("id")); rakl.data = {}; if (render.split("?").length > 1) { rakl.ragg = render.split("?")[1]; } var rala = raoy.rala(obj); if (ralf.ralg[renderName] == null) { obj.html("未配置:" + renderName); } else { var rale = new ralf.ralg[renderName](rala, rakl); rale.set(raoh); rait.rakt(rakl.rakf).raki(rale); } } };raoy.rakl.rbah.prototype.rbbm = function(raik) { var rbdd = raoy.rakl.rbag[this.rake.rakf].columns; var rawm = $("<div></div>").addClass("raeh").attr("data-index", raik); if (this.rowClickListener) { rawm.unbind("click").click(function() { this.rowClickListener($(this).attr("data-index"), $(this)); }); } for (var rafm = 0; rafm < rbdd.length; rafm++) { var rbde = rbdd[rafm]; if (rbde["rbav"] == "") rbde["rbav"] = "rui.text"; var rbdf = $("<div class='rael'><span class='raem'><label>" + rbde["label"] + "</label></span></div>"); var rale = $("<span class='raen'><input name='" + rbde["name"] + "' data-render='" + rbde["rbav"] + "'></span>"); rbdf.append(rale); rawm.append(rbdf); } return rawm;};raoy.rakl.rbah.rbbe = function(rbbz) { var rbdg = function(ranh, rbdh) { if (rbdh) { return rbdg(ranh) == rbdh; } else { return raoy.rakl.rbag[rbbz].setting(ranh); } }; var rbal = { "searchDelay": 3600, "autoWidth": false, "orderMulti": true, "processing": true, "destroy": true, "pagingType": "full_numbers", "ruiDrawCount": 0, "drawCallback": function(settings) {} }; rbal["language"] = { "lengthMenu": " _MENU_条/页", "-zeroRecords": "没有找到记录", "zeroRecords": "&nbsp;", "info": "共 <span class='totaldis'>_TOTAL_ </span>条记录", "infoEmpty": "无记录", "infoFiltered": "", "search": "", "processing": "<a class='rui-table-loading'>正在加载数据,请稍后...</a>", "paginate": { "first": "<i class='fa fa-angle-double-left'></i>", "previous": "<i class='fa fa-angle-left'></i>", "next": "<i class='fa fa-angle-right'></i>", "last": "<i class='fa fa-angle-double-right'></i>", "paginate": "<span class='btn-pager'>末页</span>" } }; rbal["columns"] = raoy.rakl.rbag[rbbz].columns; rbal["serverSide"] = rbdg("mode", "ajax"); rbal["paging"] == !rbdg("page", "disabled"); if (rbdg("length")) { disLength = rbdg("length"); } else if (rbdg("mode") == "ajax") { disLength = 12 } else { disLength = 100000; } rbal["lengthMenu"] = [disLength, 25, 50]; rbal["ordering"] = rbdg("order", "enabled"); if (rbdg("unsort")) { var columnDefs = []; var disColumsNumbers = rbdg("unsort").split(","); for (var i = 0; i < disColumsNumbers.length; i++) { columnDefs.push({ "orderable": false, "targets": disColumsNumbers[i] }) } setting["columnDefs"] = columnDefs; } rbal["createdRow"] = function(row, data, index) { data["_rui_index"] = index; data["getIndex"] =function(){ return index; }; data["index"] = index + 1; rakd = rait.rakt(rbbz).raii(); if (rbdg("rowRender")) { data = rbdg("rowRender")(data); } var raln = $(row).attr("data-index", index).addClass("index-"+index).find("[data-render]"); if (rakd.rowClickListener) { $(row).unbind("click").on('click', 'tr', function() { rakd.rowClickListener($(this).attr("data-index"), $(this)); }); } for (rafm = 0; rafm < raln.length; rafm++) { var obj = $(raln[rafm]); var render = obj.attr("data-render"); var renderName = render.split("?")[0]; renderName = renderName.replace(/\./g, "-"); var rakl = rait.rakn.rakq(obj.attr("id")); rakl.data = data; var rala = raoy.rala(obj); if (ralf.ralg[renderName] == null) { obj.html("未配置:" + renderName); } else { var rale = new ralf.ralg[renderName](rala, rakl); rale.set(data); rait.rakt(rakl.rakf).raki(rale); } } }; rbal["ajax"] = function(data, callback, settings) { if (rbdg("url")) { var raoh = rbdg("params") ? rbdg("params") : {}; raoh = $.extend( raoh,data); var rbda = rbdg("rbbqtype_"); $.ajax({ type: 'post', cache: false, dataType: 'json', contentType: 'application/json', data: rbda ? JSON.stringify(raoh) : raoh, url: rbdg("url"), success: function(raqw) { callback(raqw); raoy.rakl.rbag[rbbz].raoh = raqw["data"]; if (rbdg("ajaxCallBack")) { rbdg("ajaxCallBack")(raqw); } $(".rui-table-" + rbbz).removeClass("fa-spin"); }, error: function() {} }); } else { if (typeof this.ruiTableVDrawCount == "undefined") { this.ruiTableVDrawCount = 1; } this.ruiTableVDrawCount++; var res = {}; res["draw"] = this.ruiTableVDrawCount; res["iTotalRecords"] = 0; res["length"] = 0; res["recordsFiltered"] = 0; res["recordsTotal"] = 0; res["data"] = []; callback(res); } }; return rbal;};raoy.rakl.rbah.prototype.appendToPanel = function(panelSelector) { if (rui.client.os("mobile")) return; var rbah = rait.rakt(this.rake.rakf).raii(); var rbdi = $(panelSelector).find(".rabv"); var rbdk = $("<a href='javascript:void(0);'><i class='rui-table-" + rbah.rake.rakf + " fa fa-refresh'></i>刷新</a>"); rbdi.append(rbdk); rbdk.unbind("click").click(function() { $(this).find(".fa-refresh").addClass("fa-spin"); rbah.refresh(); }); };ralf.ramv("rui.table.link", function() { var widget = new rui.widget("rui.table.link"); widget.reload = function() {}; widget.setLayout( "<a class='rui-table-link-pri' target='_blank' href='@{href}?@{name}={@{name}}' >查看&nbsp;<i class='fa fa-angle-double-right'></i></a>", function(view) { view.addClass("rui-table-link"); if(rui.client.os("mobile")){ view.find(".rui-table-link-pri").addClass("rui-ant-button primary") .removeClass("rui-table-link-pri"); } }); return widget;});ralf.ramv("rui.table.datalink", function() { var widget = new rui.widget("rui.table.datalink"); widget.reload = function() {}; widget.setLayout( "<a class='rui-table-link value-{@{name}}' rui-javascript='@{javascript}' rui-args='@{args}' target='_blank' href='@{href}?@{name}={@{name}}' ><font label='@{label}' name='@{name}'></font></a>", function(view,predata) { view = view.children("a").eq(0); var label = view.find("font"); var icon=predata["icon"]; if (label.attr("label") != "undefined" && !(label.attr("label") + "").has('{')) { label.html(label.attr("label")).removeAttr("name"); if(icon){ if(icon=="dialog"){ label.prepend("<i class='fa fa-clone'>"); label.append("&nbsp;"); }else{ label.append("&nbsp;"); label.append("<i class='fa fa-angle-double-right'>"); } } } var arg = view.attr("rui-args"); var js = view.attr("rui-javascript"); if (arg != null && js != null) { var args = arg.split(","); js = "javascript:" + js + "('"; for (var i = 0; i < args.length; i++) { js += args[i] + "','"; } js += "0');"; view.attr("href", js); view.removeAttr("target"); view.unbind("click").click(function() { if ($(this).hasClass("value-0")) { return false; } }); } }); return widget;}); rui("widget.extends",function(){ var ruiExtendsNavbar=new rui.widget("rui.navbar"); ruiExtendsNavbar.setJQRender(function(jqObject,model){ var initAS=jqObject.children("a"); jqObject.children("a").remove(); var tmp=jqObject.html(); var link={}; var lineLen=0; for(var i=0;i<initAS.length;i++){ lineLen++; var initA=$(initAS[i]); link["line"+i]={"title":initA.html(),"href":initA.attr("href")?initA.attr("href"):"javascript:void(0);"}; } var rbdl=$("<div><span class=\"rui-menu-control\">"+ "<a class=\"rui-open-menu-control\"><i class=\"fa fa-outdent close\" ></i><i class=\"fa fa-indent open\"></i></a>"+ "</span></div>"); jqObject.html(rbdl); jqObject.append(tmp); var linkHTML=$("<span></span>").addClass("ronri-rais-profile-msg"); var index=0; for(var name in link ){ index++; var rbdm=(index<lineLen)?"<i class=\"dot\">/</i>":""; var rbdn=(index==lineLen)?"active":""; linkHTML.append("<a class='"+rbdn+"' href='"+link[name].href+"'>"+link[name].title+rbdm+"</a>"); } rbdl.append(linkHTML); var rbdo=$("<span class=\"rui-navbar-control-pri\"><a href='javascrpit:void(0);'><i class='fa fa-chevron-left'></i>&nbsp;返回</a></span>"); rbdo.click(function(){ mHeader.back(); }); rbdl.find(".rui-menu-control").click(function(){ model.getWidget().event("changeMenu"); }); }); return ruiExtendsNavbar;}); rui("widget.extends",function(){ var ronriRaisProfile= new rui.widget("ronri.rais.profile"); ronriRaisProfile.setJQRender(function(jqObject,value){ var initAS=jqObject.children("a"); var messages={}; var messagesLen=0; for(var i=0;i<initAS.length;i++){ messagesLen++; var initA=$(initAS[i]); messages[initA.attr("name")?initA.attr("name"):initA.attr("data-name")]={"title":initA.html(),"href":initA.attr("href")?initA.attr("href"):"javascript:void(0);"}; } var userHTML=$("<span>"+ "<p class='h2'>欢迎您! <font name='user_nickname'>--</font></p>"+ "<p>上次登录于<font name='last_login_time'>--</font></p>"+ "</span>"); jqObject.html(userHTML); var msgHTML=$("<span></span>").addClass("ronri-rais-profile-msg"); var index=0; for(var name in messages ){ index++; var rbdq=(index==messagesLen)?"last":""; msgHTML.append("<a href='"+messages[name].href+"'><label>"+messages[name].title+"</label><em class='"+rbdq+"' name='"+name+"' >--</em></a>") } jqObject.append(msgHTML); if(jqObject.parent().hasClass("rui-navbar")){ jqObject.parent().addClass("ronri-rais-profile-group"); } return jqObject; }); return ronriRaisProfile;});var baiduMapTheme = [ { "featureType": "background", "elementType": "all", "stylers": { "color": "#ffffff", } } ];function ComplexCustomOverlay(point,data){ this._point = point; this.data=data; }rui("widget.extends",function(){ var html="<div class='raeo' style='height:@{height}'></div>"; var map= new rui.widget("rui.areamap"); map.setAgrisAreaPoints=function(areas,onclick){ var legs=$("<div class='raeq'></div>"); for (var i = 0; i < areas.length; i++) { var area=areas[i]; var link=$("<a href='javascript:void(0);' data='"+area.code+"'><i style='background-color:"+area.fillcolor+"'></i>"+area["name"]+"<span>"+area["count"]+"家</span></a>"); link.click(function(){ onclick($(this).attr("data")); }); legs.append(link); } this.view.append(legs); var mMapId=this.mapId; var timesamp=(new Date).getTime(); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t="+timesamp,function(d){ ComplexCustomOverlay.prototype = new BMap.Overlay(); ComplexCustomOverlay.prototype.initialize = function(iMap){ this._map = iMap; var span=this._span=document.createElement("span"); $(span).css({ 'position':'absolute', 'zIndex':BMap.Overlay.getZIndex(this._point.lat), 'display':'block', 'width':'100px', 'color':'#fff', 'text-shadow':'3px 2px 4px #000', 'text-align':'center', 'font-size':'12px', 'cursor':'pointer'}); this._span.innerHTML=this.data.name+"<br><font style='font-size:16px;margin-top:2px;'>"+this.data.count+"</font>"; iMap.getPanes().labelPane.appendChild(span); var tag=this.data; $(span).click(function(){ onclick(tag.code); }); return span; }; ComplexCustomOverlay.prototype.draw = function(){ var pixel = this._map.pointToOverlayPixel(this._point); this._span.style.left = pixel.x - 50+'px'; this._span.style.top = pixel.y -14+'px'; }; BMap.Polygon.prototype.tags={}; var map = new BMap.Map(mMapId); var zoom =7; var pt1 =new BMap.Point(119.981362,31.815842); map.centerAndZoom(pt1, zoom); $("#"+mMapId).css("background","none"); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); var pointArray = []; var colors=["","","","","","","","",""]; for (var i = 0; i < areas.length; i++) { var area=areas[i]; var ply = new BMap.Polygon(area.region_area, {strokeWeight:1, strokeColor: area.fillcolor, strokeOpacity:1,fillOpacity:1, fillColor: area.fillcolor}); ply.tags=area.code; ply.addEventListener('click', function (e) { onclick(e.target.tags); }); map.addOverlay(ply); var points=area.region_area.split(";"); for(var p=0;p<points.length;p++){ var point=(points[p]+"").split(","); if(point.length>1){ pointArray.push(new BMap.Point(Number(point[0]),Number(point[1]))); } } var myCompOverlay = new ComplexCustomOverlay(new BMap.Point(Number(area.longitude),Number(area.latitude)),area); map.addOverlay(myCompOverlay); } map.setViewport(pointArray); }); }; mapId:false, map.setLayout(html, function(view,model){ this.mapId=this.view.attr("id")+"_handle"; this.view.find(".raeo").attr("id",this.mapId); }); return map;});rui("widget.extends",function(){ var widget=new rui.widget("rui-agris-table-region"); widget.reload=function(){ var regionCode=this.view.find("input").val(); rui.agris.regionBindView(this.view,regionCode,true); }; widget.setLayout("<input type='hidden' name='@{name}'>",function(view){ view.addClass("rui-table-inline"); }); return widget;}); rui("widget.extends",function(){ var widget=new rui.widget("rui-agris-table-region_short"); widget.reload=function(){ var regionCode=this.view.find("input").val(); rui.agris.regionBindView(this.view,regionCode,false); }; widget.setLayout("<input type='hidden' name='@{name}'>",function(view){ }); return widget;}); rui.agris={}; rui.agris.gRegion={};rui.agris.regions=[];rui.agris.region=function(code){ var instance= { code:"32", name:"江苏省", lng:"118.750220", lat:"32.065468", zoom:7, get:function(costomCode){ var ls=rui.agris.regions; for(var i=0;i<ls.length;i++){ var item=ls[i]; if(item["c"]==code&&costomCode==null){ this.code=item["c"]; this.name=item["n"]; }else if(item["c"]== costomCode){ return {"code":item["c"],"name":item["n"]}; } } }, parents:function(){ var list=[]; var code=this.code+""; for(var i=2;i<14;i=i+2) { if(i<=code.length){ var pCode=code.substring(0,i); if(this.get(pCode)!=null) list.push(this.get(pCode)); } } return list; }, path:function(sp){ var labs=""; if(sp==null)sp="/"; var pars=this.parents(); for(var i=0;i<pars.length-1;i++){ labs+=pars[i]["name"]+sp; } return labs+=this.name; }, children:function(){ var ls=rui.agris.regions; var rs=[]; for(var i=0;i<ls.length;i++){ var item=ls[i]; if(item["p"]==this.code&&(""+item["p"]).length<12){ rs.push(item); } } return rs; }, bind:function(id){ app.region.bindData(id,this.children() ); }, parse:function(jqView){ } }; instance.get(); return instance; }; rui.agris.regionBindView=function(view, code,isfull ){ var city=code.length>2?code.substring(0,4):code; var loadRegionsComp=function(){ var labs=""; if(code=="self"){ view.html("本级");return; } if(code=="sum"){ view.html("合计");return; } if(isfull){ if(code.length>=4){ labs+=rui.agris.region(code.substring(0,4)).name } if(code.length>=6){ labs+="»"+rui.agris.region(code.substring(0,6)).name } if(code.length>=8){ labs+="»"+rui.agris.region(code.substring(0,8)).name } if(code.length>=10){ labs+="»"+rui.agris.region(code).name } }else labs+= rui.agris.region(code).name; if(view.is("input"))view.val(labs); else view.html(labs); view.attr("title",labs); }; if(rui.agris.gRegion[city+""]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } };rui.agris.pushRegionApi=function(code){ return "/trace/dict/push_city_to_gRegion/"+code+".js";};rui.agris.parseRegion=function(code, callback ){ rui.agris.parseRegionPath(code,callback,true); };rui.agris.parseRegionPath=function(code, callback,nameOnly ){ var city=code.length>2?code.substring(0,4):code; var loadRegionsComp=function(){ callback(nameOnly==null?rui.agris.region(code).path("-"):rui.agris.region(code).name); }; if(rui.agris.gRegion[city+""]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } }; raoy.ragt("com/jquery/drppicker/drppicker.min.css");raoy.rago("com/jquery/drppicker/drppicker.min.js");if (raoy.ragb("tree")) { raoy.ragt("cn/treejs/release/zTree_v3/css/zTreeStyle/zTreeStyle.css", JSLoader.packageRoot()); raoy.rago("cn/treejs/release/zTree_v3/js/jquery.ztree.core.min.js", function() {}, JSLoader.packageRoot()); rui("widget.extends", function() { var widget = new rui.widget("rui.ant.tree"); widget.tree = false; widget.clickListener = function(d) { console.log(d); }; widget.setClickListener = function(fun) { widget.clickListener = fun; }; widget.active=function(id){ var ztree = $.fn.zTree.getZTreeObj(widget.tree.attr("id")); ztree.expandNode(ztree.getNodeByParam("id",id,null)); ztree.selectNode(ztree.getNodeByParam("id",id,null)); }; widget.bind=function(jsonVal){ var json =typeof jsonVal =="object"?jsonVal: $.parseJSON(jsonVal); widget.tree = $("<div class='ztree'></div>").attr("id", "tree_" + this.predata["name"]); widget.view.html(""); widget.view.append(widget.tree); var setting = { data: { simpleData: { enable: true } }, callback: { onClick: function(event, id, item, c) { if (widget.clickListener) { widget.clickListener({"value":item["id"],"parent":item["pId"],"text":item["name"],"object":item["object"]}); } } } }; var zNodes = []; var appendItem = function(item) { zNodes.push({ "id": item["value"], "pId": item["parentValue"], "name": item["text"] ,"object":item}); if (item["items"]&&item["items"].length > 0) { for (i = 0; i < item["items"].length; i++) { appendItem(item["items"][i]); } } }; for (i = 0; i < json.length; i++) { appendItem(json[i]); } $.fn.zTree.init(widget.tree, setting, zNodes); }; widget.reload = function(data) { var jsonVal=data[this.predata["name"]]; widget.bind(jsonVal); }; widget.setLayout("<div><textarea id='@{id}' name='@{name}' style='display:none;'></textarea></div>", function(view) { }); return widget; });}raoy.ragt("com/jquery/css/jquery-ui.min.css");raoy.ragt("com/jquery/css/jquery-ui-timepicker-addon.css");raoy.rago("com/jquery/jquery-ui.min.js", function() { raoy.rago("com/jquery/jquery-ui-timepicker-addon.js"); var regional_zh = { closeText: '关闭', prevText: '<上月', nextText: '下月>', currentText: '今天', monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月' ], monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12' ], dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'], dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'], dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'], weekHeader: '周', dateFormat: 'yy-mm-dd', firstDay: 1, isRTL: false, showMonthAfterYear: true, changeYear: true, changeMonth: true, yearSuffix: '', yearRange:'c-5:c' }; if ($.datepicker != null) { $.datepicker.setDefaults(regional_zh); }}); rui("widget.extends", function() { var widget = new rui.widget("rui.text"); widget.reload = function() { var span= this.view.find("span"); span.attr("title",span.html()); }, widget.title = ""; widget.setLayout("<span data-name='@{name}' name='@{name}'></span>", function(view) { if (this.getParam("float") == "right") { view.css("float", "right"); } }); return widget;}); rui("widget.extends", function() { var widget = new rui.widget("rui.ant.ratebar"); widget.reload = function(data) { }, widget.setLayout("<a class='rui-table-layout-item rui-ant-ratebar'><input type='hidden' id='val_@{name}' name='@{name}' ><span><label>@{text}</label></span><span><div id='bar_@{name}'></div></span><span name='@{name}'>--</span>%</a>", function(view,predata) { $( "#val_"+predata["name"] ).change(function(){ $( "#bar_"+predata["name"] ).progressbar({ value: Number($(this).val())}); }); }); return widget;});rui("widget.extends", function() { var form = new rui.widget("rui.ant.form"); form.data = function() { return {}; }; form.submitFun = function(data) { console.log(data); }; form.submit = function(fun, data) { if (data != null) { this.view.find(".primary").click(); } else form.submitFun = fun; }; form.setSubmitButtonLabel=function(title){ this.view.find(".primary").html("<label>"+title+"</label>"); }; form.shrink = function() { this.view.addClass("rui-ant-form-shrink"); var inputs = this.view.find("div."+rait.raiy.raka); for (var i = 3; i < inputs.length; i++) { $(inputs[i]).hide(); } }; form.open = function() { this.view.removeClass("rui-ant-form-shrink"); var inputs = this.view.find("div."+rait.raiy.raka); for (var i = 3; i < inputs.length; i++) { $(inputs[i]).show(); } }; form.resetParams = {}; form.init = function(data) { this.resetParams = data; rui("#" + form.rake.id).widget().set(data); form.resetParams = rui("#" + form.rake.id).widget().get(); }; form.showLoading = function() { var raqy = $("#" + form.rake.id); var rawf = raqy.find(".raes"); rawf.find("i").show().addClass("fa-spinner"); }; form.hideLoading = function() { var raqy = $("#" + form.rake.id); var rawf = raqy.find(".raes"); rawf.find("i").hide().removeClass("fa-spinner"); }; form.processButton = function(title, isCheckRequired) { var btn = $("<a class='rui-ant-button primary raes'><i class='fa fa-pulse' style='margin-right:4px'></i><label>" + title + "</label></a>"); btn.find("i").hide(); btn.click(function() { var data = form.rake.getWidget().get(); if (isCheckRequired) { var isSubmit = true; for (var key in data) { var item = form.view.find("[name='" + key + "']"); if (item.attr("data-role") != "required") continue; var widget = rui("#" + item.attr("target")).widget(); if (item.val() == "" || item.val() == null) { widget.event("error"); isSubmit = false; } if(widget.event("check")==false){ isSubmit = false; } } form.submitFun(isSubmit ? data : false); } else { form.submitFun(data); } }); return btn; }; form.loginForm = function(jqObject) { var razi = $("<div class='rui-mtb'></div>"); razi.css("text-align", "center"); razi.append(form.processButton("立即登录", true)); jqObject.append(razi); }; form.filterForm = function(jqObject) { var filterOpt = $("<div class='rui-ant-filter-buttons'></div>"); filterOpt.append(form.processButton("查询", false)); var resetBtn = $("<a class='rui-ant-button'><label>重置</label></a>"); resetBtn.attr("target", this.rake.id) .click(function() { rui("#" + $(this).attr("target")).widget().set(form.resetParams); }); filterOpt.append(resetBtn); var showBtn = $("<a><i class='fa fa-chevron-down'></i><label>展开</label></a>"); showBtn.attr("target", this.rake.id); showBtn.click(function() { var ths = $(this); var wdg = rui("#" + ths.attr("target")).widget(); if (ths.hasClass("open")) { ths.removeClass("open"); ths.html("<i class='fa fa-chevron-down'></i><label>展开</label>"); wdg.event("shrink"); } else { ths.addClass("open"); wdg.event("open"); ths.html("<i class='fa fa-chevron-up'></i><label>收起</label>"); } }); filterOpt.append(showBtn); jqObject.append(filterOpt); }; form.defaultForm = function(jqObject) { var bottom = $("<div ></div>"); jqObject.append(bottom); bottom.append(form.processButton("提交", true)); bottom.css("text-align", "center"); }; form.setJQRender(function(jqObject, model) { var type = jqObject.attr("data-type"); jqObject.addClass(type); if (type == "login") { this.loginForm(jqObject); } else if (type == "filter") { this.filterForm(jqObject); } else { this.defaultForm(jqObject); } return jqObject; }); return form;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet readonly-@{readonly}'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span class='raev'><input class='handler' data-readonly='@{readonly}' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.input"); widget.reload = function() {}, widget.extend=function(type){ var parent=this.view.find(".raev"); var mSelect= $("<select class='raew'></select>"); parent.append(mSelect); return { select:mSelect, append:function(text,value){ this.select.append("<option value='"+value+"'>"+text+"</option>"); }}; }; widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view,predata) { var input= view.find(".handler"); if(input.attr("data-readonly")=="true"){ input.attr("readonly","readonly"); } if(predata["hint"]!=null){ view.find(".handler").attr("placeholder",predata["hint"]); } if(this.predata["icon"]!=null){ view.find(".handler").addClass("input-icon").after("<i class='"+this.predata["icon"]+"'></i>"); } if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' placeholder='请输入正整数' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'><em class='rui-ant-input-unit'>@{after}</em></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.int"); widget.limit=function(limit){ widget.view.find("input").attr("maxlength",limit); }; widget.reload = function() {}, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;}); rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' maxlength='11' placeholder='请输入11位手机号' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.mobile"); widget.reload = function() {}, widget.check=function(){ var input= widget.view.find("input"); var msg=""; if(input.val().length!=11){ msg="请输入手机号码长度不正确"; } if(input.val()==""){ msg="手机号码不能为空"; } if(msg!=""){ return rui.antInputErrBind(this.view,msg); } return true; }, widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui.antInputErrBind=function(view,msg){ view.find(".error-label").remove(); view.addClass("rui-ant-input-error"); view.append("<span class='error-label'>"+msg+"</span>"); view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); return false;};rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' maxlength='4' placeholder='请输入4位验证码' type='text' oninput=\"this.value = this.value.replace(/[^0-9]/g, '');\" target='@{id}' name='@{name}'><em class='rui-ant-input-unit'><a>获取验证码</a></em></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.getcode"); widget.reload = function() {}, widget.check=function(){ var input= widget.view.find("input"); var msg=""; if(input.val().length!=4){ msg="验证码长度有误"; } if(input.val()==""){ msg="验证码不能为空"; } if(msg!=""){ return rui.antInputErrBind(this.view,msg); } return true; }, widget.sendCodeFun=false; widget.sendCode=function(fun){ widget.sendCodeFun=fun; }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { this.view.find("a").attr("href","javascript:void(0)").click(function(){ var t=$(this); if(t.hasClass("disabled")){return ; } t.addClass("disabled"); t.html(60); if(widget.sendCodeFun)widget.sendCodeFun(); var handle=setInterval(function(){ t.html(Number(t.html())-1); if(t.html()=="1"){ clearInterval(handle); t.html("获取验证码"); t.removeClass("disabled"); } },1000); }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input type='number' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.number"); widget.reload = function() {}, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.date"); widget.reload = function(data) { this.find("input").datepicker("setDate", data[this.predata["name"]]); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var target = this.view.find("input"); var format = typeof this.predata.format == "undefined" ? "yy-mm-dd" : this.predata.format; if (format.has(":")) { target.datetimepicker({ controlType: 'select', oneLine: true, timeFormat: format }); } else { target.datepicker({ dateFormat: format,    onClose: function(selectedDate) {}   }); } }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input class='date begin' name='begin_@{name}' placeholder='起始日期' data-role='@{role}' readonly type='@{type}' target='@{id}' ><em class='date'>~</em><input name='end_@{name}' placeholder='截至日期' class='date end' data-role='@{role}' readonly type='@{type}' target='@{id}' ><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.rangedate"); widget.yearRange=function(beforeYear,afterYear){ var limit="c-"+beforeYear+":c"+afterYear; var begin = this.view.find("input.begin"); begin.find("input").datepicker("yearRange", limit); var end = this.view.find("input.end"); end.find("input").datepicker("yearRange", limit); }; widget.reload = function(data) { var begin = this.view.find("input.begin"); begin.datepicker("setDate",new Date().format("yyyy-01-01")); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var begin = this.view.find("input.begin"); begin.datepicker({ dateFormat: "yy-mm-dd", onClose: function(selectedDate) { if(selectedDate!=""){ end.datepicker("option", "minDate", selectedDate);} } }); var end = this.view.find("input.end"); end.datepicker({ dateFormat: "yy-mm-dd", onClose: function(selectedDate) { if(selectedDate!=""){ begin.datepicker("option", "maxDate", selectedDate); } } }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-calendar'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.datetime"); widget.reload = function(data) { this.find("input").datetimepicker("setDate", data[this.predata["name"]]); }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } var target = this.view.find("input"); target.datetimepicker({ controlType: 'select', timeFormat: "HH:mm:ss", dateFormat: "yy-mm-dd" }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span ><input class='input' type='hidden' data-role='@{role}' type='@{type}' target='@{id}' name='@{name}'><span class='items'></span></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.checkbox"); widget.reload = function() { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.updateValue = function() { var val = ""; var items = this.view.find(".checkbox:checked"); for (var i = 0; i < items.length; i++) { val += $(items[i]).val() + ","; } if (val.length > 0) { val = val.substr(0, val.length - 1); } this.view.find(".input").val(val); }, widget.append = function(text, value) { var item = $("<label class='raey'></label>"); item.append("<input class='checkbox checkbox-" + value + "' value='" + value + "' type='checkbox'>"); item.append(text); this.view.find(".items").append(item); item.unbind("change").change(function() { widget.updateValue(); }); }; widget.appends = function(tvs) { for (var i = 0; i < tvs.length; i++) { widget.append(tvs[i]["text"], tvs[i]["value"]); } }; widget.setLayout(inputWidget.prop("outerHTML"), function(view) { if (this.predata["title"] == null) { view.find(".lab").remove(); } this.view.find(".input").change(function() { var vals = $(this).val().split(","); $(this).parent().find(".checkbox").prop("checked", false); for (var i = 0; i < vals.length; i++) { $(this).parent().find(".checkbox-" + vals[i]).prop("checked", true); } }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><textarea row=6 data-role='@{role}' target='@{id}' name='@{name}'></textarea></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.text"); widget.reload = function() { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML")); return widget;});rui("widget.extends", function() { var widget = new rui.widget("rui.ant.image"); widget.reload = function() {}, widget.title = ""; widget.setLayout("<div class='raez' ><span><input type='hidden' name='@{name}' ><img style='height:@{height}'></span><span><label>@{title}</label></span></div>", function(view, reload) { view.find("input").change(function() { $(this).parent().find("img").attr("src", $(this).val()); }); view.click(function() { var url = $(this).parent().find("input").val(); var widget = rui("#ruiAntImageDialog").widget( "rui-modal", "<div data-render='rui.panel' data-title='查看图片'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3><img style='height:500px' data-name='image'></div>"); widget.show({ "image": url }); }); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span ><select data-role='@{role}' target='@{id}' name='@{name}'></select><i disabled class='icon fa fa-chevron-down'></i> </span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.ant.select"); widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + widget.title + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.reset=function(){ this.view.find("select").html(""); }; widget.append = function(text, value) { if (text == null) { this.view.find("select").append("<option >请选择</option>"); } else this.view.find("select").append("<option value='" + value + "'>" + text + "</option>"); }; widget.appendHTML = function(html) { this.view.find("select").append(html); }; widget.appends = function(tvs, isClear) { if (isClear) this.view.find("select").html(""); for (var i = 0; i < tvs.length; i++) { this.view.find("select").append("<option value='" + tvs[i]["value"] + "'>" + tvs[i]["text"] + "</option>"); } }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { widget.title = predata["title"]; view.find("select").on("change", function() { try { $(this).selectmenu("refresh", true); } catch (e) { } }); view.find("select").selectmenu(); }); return widget;});rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row rui-ant-input'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span class='rui-ant-upload-box'><a class='item rui-ant-upload-addbtn'><i class='fa fa-plus'></i>上传</a></span></span>"); inputWidget.append("<input type='file' class='rui-ant-upload-handle'>"); inputWidget.append("<input type='hidden' class='rui-ant-upload-value' name='@{name}' target='@{id}' data-role='@{role}' >"); var widget = new rui.widget("rui.ant.upload"); widget.input = false; widget.setLimit=function(limit){ widget.view.addClass("limit-"+limit); }; widget.reload = function(data) { var inp=widget.view.find(".rui-ant-upload-value"); if(inp.val()!=""){ var files=inp.val().split(","); for(var i=0;i<files.length;i++){ widget.appendFile(files[i]); } } }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请上传至少一张图片</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.append = function(url, base64) { var src = (base64 == null) ? url : "data:image/jpeg;base64," + base64; var imgs = this.view.find(".rui-ant-upload-box"); if(this.view.hasClass("limit-1")){ imgs.find(".img").remove(); } imgs.prepend("<span class='item img'><img class='img-value' width=60 height=60 data-src='" + url + "' src='" + src + "'><em><i class='fa fa-close'></i></em></span>"); imgs.find(".img").unbind("click").click(function() { $(this).remove(); }); var datasrcs = imgs.find(".img-value"); var srcs = ""; for (var i = 0; i < datasrcs.length; i++) { var src=$(datasrcs[i]).attr("data-src"); if(src!=null&&src!=""){ srcs += src + ","; } } this.view.find(".rui-ant-upload-value").val(srcs); }; widget.files={}; widget.appendFile=function(url,preFile){ var files = this.view.find(".rui-ant-upload-box"); var fileName=""; if(preFile)fileName=(preFile.name.replace(new RegExp(/( )/g),"")).split(".")[0]; else fileName=rui.param("name","",url); if(!url){ widget.files[fileName]=preFile; files.prepend("<span class='item file preupload-"+fileName+"'>"+fileName+"<em>上传中&nbsp;<i class='fa fa-circle-o-notch fa-spin'></i></em></span>"); }else{ if(fileName=="")return; if(!widget.files[fileName]){ widget.files[fileName]={"name":fileName}; files.prepend("<span class='item file preupload-"+fileName+"'>"+fileName+"<em>&nbsp</em></span>"); } var fileOpt=files.find(".preupload-"+fileName).attr("data-src",url).find("em"); fileOpt.html("<a target='_block' href='"+url+"'>查看</a>"); fileOpt.append("&nbsp;"); var delBtn=$("<a href='javascript:void(0)'>删除</a>"); fileOpt.append(delBtn); delBtn.unbind("click").click(function() { $(this).parent().parent().remove(); }); } var datasrcs = this.view.find(".file"); var srcs = ""; for (var i = 0; i < datasrcs.length; i++) { srcs += $(datasrcs[i]).attr("data-src") +"?name="+fileName+ ","; } if(srcs!="") srcs=srcs.substring(0,srcs.length-1); this.view.find(".rui-ant-upload-value").val(srcs); }; widget.title = ""; widget.setLayout( inputWidget.prop("outerHTML"), function(view, predata) { if(typeof predata["types"]!="undefined"){ view.addClass("rui-ant-upload-files"); }else{ view.addClass("rui-ant-upload-images"); } view.find(".rui-ant-upload-handle").change(function() { var files = view.find(".rui-ant-upload-handle").prop('files'); if(files.length>0){ var file=files[0]; if(typeof predata["types"]!="undefined"){ widget.appendFile(false,file); } var reader = new FileReader(); reader.readAsDataURL(file); reader.onload = function(e) { widget.event("upload", this.result.substring(this.result.indexOf(',') + 1),file); } } }); view.find(".rui-ant-upload-addbtn").click(function() { view.find(".rui-ant-upload-handle").click(); }); }); return widget;}); rui("widget.extends", function() { var inputWidget = $("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item' >@{title}</label></span>"); inputWidget.append("<span><span><input placeholder='请选择' readonly data-role='@{role}' readonly type='@{type}' target='@{id}' name='@{name}'><i disabled class='icon fa fa-map-marker'></i></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget = new rui.widget("rui.baidu.location"); widget.reload = function(data) { }, widget.error = function() { this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请选择" + this.predata["title"] + "</span>"); this.view.click(function() { $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"), function(view,predata) { this.view.unbind("click").click(function(){ selectBaiduPoint(predata); }); }); return widget;}); selectBaiduPoint = function(predata) { var initLng=119.981362; var initLat=31.815842; var initZoom=7; var inputData=rui("#"+predata["id"]).widget().get(); input=inputData[predata["name"]]; if(input){ var ps=input.split(","); if(ps.length==2){ var zs=ps[1].split("|"); initLng=Number(ps[0]); if(zs.length==2){ initZoom=Number(zs[1]); initLat=Number(zs[0]); }else{ initLat=Number(ps[1]); } } } var raoh = {}; raoh["lng"] = initLng; raoh["lat"] = initLat; raoh["zoom"] = initZoom; rui("#rui_modal_baidu_point").widget( "rui-modal", "<div data-render='rui.panel' class='rui-modal-baidu-point' data-title='坐标拾取'><h3><a data-event='rui.modal.close'>&nbsp;<i class='fa fa-close'></i></a></h3>" + "<div id='rui_modal_baidu_point_map' style='width:500px;height:380px;'></div>"+ "<div class='control'>经度<input data-name='lng' id='rui_modal_baidu_point_map_lng'>纬度<input data-name='lat' id='rui_modal_baidu_point_map_lat'>缩放<input data-name='zoom' id='rui_modal_baidu_point_map_zoom'></div>"+ "<span class='radd'><a class='rui-ant-button primary'>确认</a>&nbsp;&nbsp;&nbsp;<a data-event='rui.modal.close' class='rui-ant-button'>取消</a></span>" + "</div>").show(raoh,function(data){ $("#rui_modal_baidu_point_map").replaceWith("<div id='rui_modal_baidu_point_map' style='width:500px;height:380px;'></div>"); var timesamp = (new Date).getTime(); var zoomVal=Number(data["zoom"]); var latVal=Number(data["lat"]); var lngVal=Number(data["lng"]); window.BMap_loadScriptTime = timesamp; $.getScript("https://api.map.baidu.com/getscript?v=3.0&ak=STLLkTgxwQbLqbTryXhVHmjNBvHYZF5j&services=&t=" + timesamp, function(d) { var map = new BMap.Map("rui_modal_baidu_point_map"); var pt1 = new BMap.Point(lngVal,latVal ); map.centerAndZoom(pt1, zoomVal); map.enableScrollWheelZoom(); map.enableContinuousZoom(); map.enableInertialDragging(); map.enableKeyboard(); map.addEventListener("click", function(e){ map.clearOverlays(); var marker = new BMap.Marker(e.point); $("#rui_modal_baidu_point_map_lng").val(e.point.lng.toFixed(6)); $("#rui_modal_baidu_point_map_lat").val(e.point.lat.toFixed(6)); $("#rui_modal_baidu_point_map_zoom").val(map.getZoom()); map.addOverlay(marker); }); map.addOverlay(new BMap.Marker(pt1)); }); }); $("#rui_modal_baidu_point").find(".primary").unbind("click").click(function() { var val= $("#rui_modal_baidu_point_map_lng").val()+","+ $("#rui_modal_baidu_point_map_lat").val()+"|"+ $("#rui_modal_baidu_point_map_zoom").val(); var reset={}; reset[predata["name"]]=val; rui("#"+predata["id"]).widget().set(reset); rui("#rui_modal_baidu_point").widget().hide(); });}; XRender.extend("layout", function() { var widget = new XRender.layout("rui.layout.adlogin"); widget.setJQRender(function(view){ var layouts=view.children(); if(layouts.length!=2){ alert("rui.layout.adlogin只支持两个子元素"); } if(rui.client.os("mobile")){ for(var i=0;i<layouts.length;i++){ var layout=$(layouts[i]); if(layout.find("form").length>0){ }else{ layout.remove(); view.append(layout); } } }else{ view.css("display","inline-table"); view.css("width","100%"); view.css("tableLayout","fixed"); layouts.css("display","table-cell"); } }); return widget;}); rui("widget.extends", function() { return XRender.core.getListRender("rui.layout.list"); }); rui("widget.extends",function(){ var inputWidget=$("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item'>@{title}</label></span>"); inputWidget.append("<span><span><span class='agris-filter-items'><a class='primary rui-agris-filter-selbtn'>添加&nbsp;<i class='fa fa-plus'></i></a></span><input type='hidden' class='name' name='@{name}_names' ><input type='hidden' target='@{id}' data-role='@{role}' type='@{type}' id='@{id}_tar' class='value' name='@{name}_ids'>" +"</span></span>"); inputWidget.find(".lab").append("<font style='color:red;'>*</font>"); var widget=new rui.widget("rui.agris.filter"); widget.reload=function(){ }; widget.filter=function(title){ console.log(title) ;}; widget.setFilter=function(fun){ this.filter=fun; }; widget.refresh=function(){ var nameView= this.view.find(".name"); var valView=this.view.find(".value"); var names=nameView.val().split(","); var ids=valView.val().split(","); for(var i=0;i<ids.length;i++){ if(ids[i]=="")continue; var itemObject=$("<a href='javascript:void(0);' text='"+names[i]+"' data='"+ids[i]+"'>"+names[i]+"</a>"); itemObject.append("&nbsp;"); itemObject.addClass("value-"+ids[i]); itemObject.addClass("rui-agris-filter-value"); itemObject.append("<i class='fa fa-close'></i>"); itemObject.click(function(){ var t=$(this); t.remove(); widget.refreshVal(); }); widget.view.find(".agris-filter-items").prepend(itemObject); } }; widget.changeLis=false; widget.setLimit=function(limit){ this.predata["limit"]=limit; this.view.find(".rui-agris-filter-selbtn").html("请选择"); }; widget.change=function(changeFun){ widget.changeLis=changeFun; }; widget.refreshVal=function(){ var vals= this.view.find(".rui-agris-filter-value"); var inp=this.view.find(".value"); var inp_name=this.view.find(".name"); var data=""; var txts=""; for(var i=0;i<vals.length;i++){ data+=$(vals[i]).attr("data")+","; txts+=$(vals[i]).attr("text")+","; } if(data.length>0){ data=data.substr(0,data.length-1); txts=txts.substr(0,txts.length-1); } inp.val(data); inp_name.val(txts); }; widget.append=function(text,value){ this.view.find(".list").append("<li><a href='javascript:void(0);' text='"+text+"' data='"+value+"'>"+text+"</a></li>"); this.view.find(".list a").unbind("click").click(function(){ widget.view.find(".value-"+$(this).attr("data")).remove(); var itemObject=$($(this).prop("outerHTML")); itemObject.append("&nbsp;"); itemObject.addClass("value-"+value); itemObject.append("<i class='fa fa-close'></i>"); itemObject.addClass("rui-agris-filter-value"); if(widget.predata["limit"]&&widget.predata["limit"]==1){ widget.view.find(".rui-agris-filter-value").remove(); } widget.view.find(".agris-filter-items").prepend(itemObject); itemObject.click(function(){ var t=$(this); t.remove(); widget.refreshVal(); }); widget.refreshVal(); if( widget.changeLis){ widget.changeLis(itemObject.attr("text"), itemObject.attr("data")); } $(".rui-widget-close-dialog-pri,.rui-agirs-filter").hide(); }); }; widget.error=function(){ this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>"+this.predata["title"] +"</span>"); this.view.click(function(){ $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"),function(view,model){ view.find(".primary").click(function(){ rui.widgetMaskDialog(); var div= rui_agirs_filter.getDialog(model.id); view.find(".agris-filter-items").parent().append(div); div.find(".keyword").change(function(){ widget.filter($(this).val()); }); widget.filter(""); }); }); return widget; }); rui_agirs_filter=function(target,text,value){ };rui_agirs_filter.getDialog=function(target){ $(".rui-agirs-filter").remove(); var box=$("<div class='rui-agirs-filter ui-widget-content rui-dialog-close-handle '></div>").attr("target","input#"+target); box.addClass("rui-agris-region-"+target); var header=$("<div class='rui-agirs-region-header'></div>"); header.append("<input class='keyword' placeholder='请输入关键字' >"); var rbox=$("<div class='rui-agirs-region-body '></div>"); body=$("<ul class='list'></ul>"); rbox.append(body); rbox.append("<div class='clearfix'></div>") ; box.append(header); box.append(rbox); return box; }; rui("widget.extends",function(){ var inputWidget=$("<div class='rui-ant-row raet'></div>"); inputWidget.append("<span class='lab'><label class='lab-item'>@{title}</label></span>"); inputWidget.append("<span><span><input type='hidden' target='@{id}' data-role='@{role}' type='@{type}' id='@{id}_tar' class='value' name='@{name}'>" +"<input class='display ' readonly placeholder='点击选择' id='@{id}_dis' ></span></span>"); inputWidget.find(".lab").append("<font class='role role-@{role}' style='color:red;'>*</font>"); var widget=new rui.widget("rui.agris.region"); widget.reload=function(){ }; widget.error=function(){ this.view.find(".error-label").remove(); this.view.addClass("rui-ant-input-error"); this.view.append("<span class='error-label'>请输入"+this.predata["title"] +"</span>"); this.view.click(function(){ $(this).removeClass("rui-ant-input-error").find(".error-label").remove(); }); }; widget.setLayout(inputWidget.prop("outerHTML"),function(view,model){ view.find(".value").change(function(){ rui.agris.regionBindView($("#"+model.id+"_dis"), $(this).val(),false); }); view.unbind("click").click(function(){ var mInp=$("#"+model.id+"_tar"); rui.widgetMaskDialog(function(){ $(".rui-agirs-region-dialog").remove(); }); var t=$(this); var div=rui_agirs_region.getRegionWidget(mInp.val(),model.id); t.parent().append(div); rui_agirs_region.resize(); rui_agirs_region.getRegionItems(mInp.val()); }); }); return widget; }); rui_agirs_region=function(field,model){ field.replaceWith(box); start.unbind("click").click(function(){ var mInp=$("#"+$(this).attr("target")); var t=$(this); var div=rui_agirs_region.getRegionWidget(mInp.val(),model.id); t.parent().append(div); rui_agirs_region.getRegionItems(mInp.val()); });};rui_agirs_region.resize=function(){ $(".rui-agirs-region-header").scrollLeft( $(".rui-agirs-region-header")[0].scrollWidth);}; rui_agirs_region.getRegionWidget=function(region_code,target){ $(".rui-agirs-region").remove(); var arr=["国家","省份","城市","区县","街镇","村"]; var arrId=["region_0","region_2","region_4","region_6","region_8","region_10"]; var box=$("<div class='rui-agirs-region ui-widget-content rui-agirs-region-dialog'></div>").attr("target","input#"+target); box.addClass("rui-agris-region-"+target); var header=$("<div class='rui-agirs-region-header'></div>"); var foot=$("<div class='rui-agirs-region-footer '><a class='rui-ant-button primary submit' target='"+target+"' >确定</a><a class='rui-ant-button cancel'>取消</a></div>"); foot.find(".submit").click(function(){ var id=$(this).attr("target"); var code=$(".rui-agris-region-"+id).attr("data"); $("#"+target+"_tar").val(code); $(".rui-agirs-region").remove(); rui.agris.regionBindView($("#"+id+"_dis"),code,false); }); foot.find(".cancel").click(function(){ $(".rui-agirs-region").remove(); }); var start=(G_REGION_CODE+"").length; for(var i=start;i<12;i+=2){ var itemRegion=arrId[i/2]; var tab=$("<a class='sel-region'>"+arr[i/2]+"</a>"); tab.addClass(arrId[i/2]); if(i>region_code.length){ tab.hide(); }else{ tab.addClass("active"); var itemCode=region_code.substring(0,i); tab.attr("data",itemCode); rui.agris.regionBindView(tab,itemCode ,false); } header.append(tab); } var rbox=$("<div class='rui-agirs-region-body'></div>"); body=$("<ul></ul>"); rbox.append(body); rbox.append("<div class='clearfix'></div>") ; box.append(header); box.append(rbox); box.append(foot); return box; };rui_agirs_region.resize=function(){ };rui_agirs_region.getRegionItems=function(code){ for(var i=code.length;i<12;i+=2){ $(".rui-agirs-region").find(".region_"+i).hide(); } var tab= $(".rui-agirs-region").find(".region_"+((code+"").length)); rui.agris.regionBindView(tab,code,false); tab.parent().find(".active").removeClass("active"); tab.addClass("active").attr("data",code).show(); rui_agirs_region.resize(); $(".rui-agirs-region").attr("data",code); var p=$(".rui-agirs-region-body").find("ul"); p.html(""); p.append("<li><a class='sel-region active' data='"+code+"'>本级</a></li>"); var loadRegionsComp=function(){ var ds=rui.agris.region(code).children(); for(var i=0;i<ds.length;i++){ p.append("<li><a class='sel-region' data='"+ds[i]["c"]+"'>"+ds[i]["n"]+"</a></li>"); } $(".rui-agirs-region").find("a.sel-region").unbind("click").click(function(){ var t=$(this); if(t.hasClass("evt"))return; t.parent().parent().find(".active").removeClass("active"); t.addClass("active"); var code=t.attr("data"); rui_agirs_region.getRegionItems(code) }); }; var city=code.substring(0,4); if(rui.agris.gRegion[city]){ loadRegionsComp(); }else{ $.getScript(rui.agris.pushRegionApi(city),loadRegionsComp); } };raoy.rakl.rbds = raoy.raid.raiv();raoy.rakl.rbds.prototype = { ranl: false, raiw: function(ratb) { this.ranl = $("<div>&nbsp;</div>"); ratb.append(this.ranl); }};if (raoy.ragb("lib-highchart")) { raoy.rags("/bin/com.highcharts.code/highcharts.js", function() { Highcharts.setOptions({ global: { useUTC: false } }); raoy.rags("/bin/com.highcharts.code/highcharts-3d.js"); raoy.rags("/bin/com.highcharts.code/wordcloud.js"); });}raoy.rakl.rbdt = raoy.raid.raiv();raoy.rakl.rbdt.prototype = { rany: {}, rakl: false, rbdv: false, rbdw: false, rbds: false, raiw: function(ratb, rakl) { if(ruiLibSampleColor){ Highcharts.getOptions().plotOptions.pie.colors=ruiLibSampleColor; } this.rakl = rakl; var table = ratb.rahk(); var fields = table.find("th"); var thisFields = {}; for (var i = 0; i < fields.length; i++) { var th = $(fields[i]); thisFields[th.attr("data-name")] = { "render": th.attr("data-render"), "title": th.html(), "name": th.attr("data-name") }; } this.rany = thisFields; var tableClass = table.attr("class"); table.replaceWith("<div id='" + this.rakl.rakf + "' class=' "+rait.raiy.raka+" " + tableClass + " rui-build' ></div>"); table = $("#" + this.rakl.rakf); var chart = $("<div class='rafa' style='width:100%;height:100%;'></div>"); chart.attr("id", this.rakl.rakf + "_chart"); table.append(chart); this.rbds = new raoy.rakl.rbds(chart); return table; }, resize: function() { var width = $("#" + this.rakl.rakf).parent().width(); var height = $("#" + this.rakl.rakf).parent().height(); if (typeof this.rbdv.reflow == "function") this.rbdv.reflow(); if (typeof this.rbdv.setSize == "function") this.rbdv.setSize(width, height, false); }, themeColors: ["#1ABB9C"], setColors: function(colors) { this.themeColors = colors; return this; }, hideTitle: function() { this.params["title"] = { text: null, labels: { enabled: false } }; this.params["subtitle"] = { text: null, labels: { enabled: false } }; return this; }, setMargin: function(margion) { this.params["chart"]["margin"] = [0, 0, 0, 0]; return this; }, simple: function(mData) { this.hideTitle(); this.setMargin(0); this.setColors(); this.params["series"] = mData; var name = this.target.selector; this.chart = Highcharts.chart(name.replace("#", ""), this.params); }, sampleAreaChart: function(list) { var rbdy = []; var rbdz = false; for (var rafm in this.rany) { var raoa = this.rany[rafm]; if (raoa.render == "rui-render-time") { rbdz = raoa; } } for (var rafm in this.rany) { var raoa = this.rany[rafm]; if (raoa.render == "rui-render-number") { var rbea = []; for (var rant = 0; rant < list.length; rant++) { var ranq = list[rant]; rbea.push([new Date(ranq[rbdz.name]).getTime(), Number(ranq[raoa.name])]) } rbdy.push({ "name": raoa.title, "data": rbea }); } } var rbeb = this.rakl.rakf; this.rbdv = ruiLibSampleAreaChart(rbeb, rbdy); this.rbdv.reflow(); }, samplePieChart: function(list) { var keys = Object.keys(this.rany); var xField = this.rany[keys[0]]; var yField1 = this.rany[keys[1]]; var data = []; for (var rafm = 0; rafm < list.length; rafm++) { var item = list[rafm]; var itemObject = { "name": item[xField.name] }; if (rafm == 0) { itemObject.sliced = true; itemObject.selected = true; } itemObject.y = Number(item[yField1.name]); data.push(itemObject); } this.rbdv = ruiLibSamplePieChart(this.rakl.rakf, data); this.rbdv.reflow(); }, sampleRingChart: function(main, total, title, color) { main = Number(main); total = Number(total); var data = []; data.push(["Full", total-main]); data.push(["Main", main]); var cover = total==0?0: (main * 100 / total); cover = ((cover + "").split(".").length > 1) ? cover.toFixed(2) : cover; $("#" + this.rakl.rakf).append("<a class='rui-lib-highchart-ring'><span><em style='color:" + color + "'>" + cover + "</em>%</span><label>" + title + "</label></a>"); this.rbdv = ruiLibSampleRingChart(this.rakl.rakf, data, color); this.resize(); }, riverui: function() { this.rbdv = ruiLibHChartRiverui(this.rakl.rakf, [{ allowPointSelect: false, name: '', data: [100, 50, 100, 50, 100] }]); this.rbdv.reflow(); }, sampleHotWords: function(mData) { this.rbdv = ruiLibSampleHotWordsChart(this.rakl.rakf, mData); this.rbdv.reflow(); }};raoy.rakl.rakg.rbdt = "rui-lib-highchart";ralf.rafk(raoy.rakl.rakg.rbdt, raoy.rakl.rbdt);ruiLibSampleChart = { chart: { type: 'column', backgroundColor: 'rgba(0,0,0,0)' }, tooltip: { enabled: false }, xAxis: { labels: { enabled: false }, lineWidth: 0, tickWidth: 0 }, yAxis: { labels: { enabled: false }, title: { enabled: false }, gridLineWidth: 0 }, plotOptions: { labels: { enabled: false }, enabled: false }, legend: { enabled: false },};ruiLibSampleHotWordsChart = function(id, data) { return Highcharts.chart(id, { credits: false, exporting: false, chart: { type: 'wordcloud', margin: [0, 0, 0, 0] }, plotOptions: { series: {}, wordcloud: { rotation: { from: 0, orientations: 2, to: 0 } } }, series: [{ data: data }], title: { enabled: false, text: '' } });};ruiLibSampleRingChart = function(id, data, color) { Highcharts.getOptions().plotOptions.pie.colors= ['#eeeeee', color]; return Highcharts.chart(id + "_chart", { colors: ['#eeeeee', color], credits: { enabled: false }, exporting: { enabled: false }, chart: { type: 'pie', margin: [0, 0, 0, 0], padding: [0, 0, 0, 0], plotBackgroundColor: null, plotBorderWidth: 0, plotShadow: false, "backgroundColor": "rgba(0,0,0,0)" }, title: { enabled: false, text: '' }, tooltip: { enabled: false }, plotOptions: { pie: { dataLabels: { enabled: false }, startAngle: 0, endAngle:360, center: ['50%', '50%'], size: '100%' } }, series: [{ innerSize: '90%', data: data }] });};ruiLibHChartRiveruiTick = true;ruiLibHChartRiverui = function(id, data) { return Highcharts.chart(id, { credits: { enabled: false }, exporting: { enabled: false }, title: { text: '' }, subtitle: { text: '' }, chart: { type: 'areaspline', backgroundColor: 'rgba(0,0,0,0)', margin: [0, 0, 0, 0], events: { load: function() { var series = this.series[0]; setInterval(function() { ruiLibHChartRiveruiTick = !ruiLibHChartRiveruiTick; series.addPoint([ruiLibHChartRiveruiTick ? 100 : 50], true, true); }, 500); } } }, xAxis: { labels: { enabled: false } }, yAxis: { min: 0, max: 180, title: { enabled: false }, labels: { enabled: false }, gridLineWidth: 0 }, colors: ['#00bcd4'], tooltip: { enabled: false }, legend: { enabled: false }, plotOptions: { series: { states: { hover: { enabled: false } } }, areaspline: { fillOpacity: 1, marker: { enabled: false } } }, series: data });};ruiLibSampleChart = function(id, data) { data.credits = { enabled: false }; data.exporting = { enabled: false }; data.title = { text: '' }; data.tooltip = { enabled: false }; data.legend = { enabled: false }; data.subtitle = { text: '' }; return Highcharts.chart(id, data);};ruiLibSampleAreaChart = function(id, data) { return ruiLibSampleChart(id, { chart: { backgroundColor: 'rgba(0,0,0,0)', type: 'area' }, xAxis: { type: 'datetime', dateTimeLabelFormats: { millisecond: '%H:%M:%S.%L', second: '%H:%M:%S', minute: '%H:%M', hour: '%H:%M', day: '%m-%d', week: '%m-%d', month: '%Y-%m', year: '%Y' } }, yAxis: { gridLineWidth: 1, title: { enabled: false } }, colors: ['#1ABB9C'], plotOptions: { area: { pointStart: 1940, fillOpacity: 0.1, lineWidth: 1, marker: { enabled: false, symbol: 'circle', radius: 1, states: { hover: { enabled: true } } } } }, series: data });};ruiLibSampleColor=false;ruiLibSamplePieChart = function(id, data) { if(!ruiLibSampleColor){ ruiLibSampleColor=Highcharts.getOptions().plotOptions.pie.colors; } Highcharts.getOptions().plotOptions.pie.colors =raom.ralm.magicc("#29a176"); return ruiLibSampleChart(id, { chart: { type: 'pie', backgroundColor: 'rgba(0,0,0,0)', options3d: { enabled: true, alpha: 45, beta: 0 } }, plotOptions: { pie: { allowPointSelect: true, cursor: 'pointer', depth: 12, dataLabels: { enabled: true, format: '{point.name}' } } }, series: [{ type: 'pie', name: '', data: data }] });};